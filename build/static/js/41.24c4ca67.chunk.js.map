{"version":3,"sources":["customHooks/useClickOutSide.js","customHooks/useDebounce.js","commons/components/Search/AutoSuggest.js","commons/components/Search/index.js","commons/components/Header/ModalEvent.js","commons/components/Header/index.js","constants/listMenu.js","layout/Menu/Submenu.js","layout/Menu/MenuItem.js","layout/Menu/index.js","layout/MainLayout/index.js","commons/components/TitleHeader/index.js","commons/components/Card/CardItem.js","commons/components/Card/index.js","modules/main/components/Dashboard/DashboardCompany/index.js"],"names":["useClickOutside","ref","handler","rest","useEffect","listener","event","current","contains","target","iconRef","document","addEventListener","removeEventListener","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","setTimeout","clearTimeout","AutoSuggest","onClick","options","className","map","option","index","key","label","role","defaultProps","memo","Search","placeholder","handleIconClick","customClass","onChange","setSearchTerm","handleKeyDown","isSpinner","display","setDisplay","wrapperRef","useRef","handleClickOutside","wrap","window","onKeyPress","e","src","images","icon_search","alt","length","search","searchValue","ModalEvent","isShow","Header","isSearch","isSelect","eventCount","dispatch","useDispatch","useSelector","state","main","listPositions","listCompany","optionDropdown","setOptionDropdown","setIsShow","searchTerm","debouncedSearchTerm","getListCompany","keyword","getListPosition","console","log","Select","listItem","ops","disabled","isSearchable","blurInputOnSelect","icon_event","DASHBOARD","id","icon","IMAGES","iconGraph","to","ROUTERS","ROOT","items","name","sub","DASHBOARD_AREA","DASHBOARD_COMPANY","STATUS_COMPANY","STATUS_COMPANY_BY_AREA","OPERATION_STATUS_BY_COMPANY","OPERATION_STATUS_BY_AREA","STATISTICS_DEVELOP","STATISTICS_DEVELOP_AREA","OPERATION_STATISTICS_COMPANY","OPERATION_STATISTICS_AREA","SETUP","setup","MOCKUP","mockUp","TEST_DASHBOARD","TEST_MOCKUP_STATUS","TEST_MOCKUP_OPERATION","TEST_MOCKUP_STATISTICS_DEVELOP","TEST_MOCKUP_STATISTICS_OPERATION","SOLAR_DASHBOARD","TEST_SOLAR_STATUS_DEVELOP","TEST_SOLAR_STATUS_OPERATION","TEST_SOLAR_STATISTICS_DEVELOP","TEST_SOLAR_STATISTICS_OPERATION","itemSub","listNestSub","isActiveNestSub","handleClickItemSub","location","nestSubClicking","setNestSubClicking","renderNestedSub","item","activeNestItem","pathname","includes","stopPropagation","handleClickNestSub","tabIndex","faChevronRight","listSub","handleClickItem","isActive","subMenuClicking","commons","setListNestSub","activeSub","setActiveSub","active","renderSub","nestSub","withRouter","menuClicking","setListSub","setMenuClicking","renderMenuList","listMenu","Button","btn_logout","MainLayout","children","isProcessing","isOpen","setIsOpen","refMenu","mainContent","showHeader","classHeight","innerHeight","Loading","innerRef","TitleHeader","title","descSub","icon_title_header","CardItem","specifications","unit","formatNumber","Card","isLogoTop","logoClick","titleClick","isCardCompany","isEvent","amountElectricDay","amountElectricMonth","electricRealtime","ratePower","cumulativeElectric","logo","icon_event_card","DashboardCompany","isLoading","total","listCompanyInverters","perPage","activePage","setActivePage","getListCompanyInverters","type","spliceCompanyInverter","renderInverter","companyName","listInverter","prevInverter","nextInverter","hasEvent","forEach","item1","item2","Boolean","inverterItem","InverterId","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageNumber","page","itemClass","linkClass"],"mappings":"0IAmCeA,EA3BS,SAACC,EAAKC,EAAN,GAAgC,IAAZC,EAAW,oBACrDC,qBAAU,WACR,IAAMC,EAAW,SAACC,GAGbL,EAAIM,UACLN,EAAIM,QAAQC,SAASF,EAAMG,SAC1BN,EAAKO,QAAQH,UACdJ,EAAKO,QAAQH,QAAQC,SAASF,EAAMG,SAMtCP,EAAQI,IAMV,OAHAK,SAASC,iBAAiB,YAAaP,GACvCM,SAASC,iBAAiB,aAAcP,GAEjC,WACLM,SAASE,oBAAoB,YAAaR,GAC1CM,SAASC,iBAAiB,aAAcP,MAEzC,CAACJ,EAAKC,EAASC,EAAKO,W,iCCHVI,EApBK,SAACC,EAAOC,GAAU,MAGUC,mBAASF,GAHnB,mBAG3BG,EAH2B,KAGXC,EAHW,KAiBlC,OAZAf,qBAAU,WAEN,IAAMF,EAAUkB,YAAW,WACvBD,EAAkBJ,KACnBC,GAGH,OAAO,WACHK,aAAanB,MAElB,CAACa,EAAOC,IAEJE,G,QClBLI,EAAc,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,QAAmC,IAA1BC,eAA0B,MAAhB,GAAgB,EACxD,OACE,yBAAKC,UAAU,gBACZD,EACEE,KAAI,SAACC,EAAQC,GAAT,OACH,uBACEH,UAAU,qBAEVI,IAAKD,EACLL,QAAS,kBAAMA,EAAQI,EAAOG,QAC9BC,KAAK,gBAEJJ,EAAOG,YAOpBR,EAAYU,aAAe,CACzBR,QAAS,IAGIS,qBAAYX,GCdrBY,EAAS,SAAC,GAUF,IATZC,EASW,EATXA,YASW,IARXC,uBAQW,MARO,aAQP,MAPXC,mBAOW,MAPG,GAOH,MANXtB,aAMW,MANH,GAMG,MALXuB,gBAKW,MALA,aAKA,MAJXC,qBAIW,MAJK,aAIL,MAHXf,eAGW,MAHD,GAGC,EAFXgB,EAEW,EAFXA,cAEW,IADXC,iBACW,WACmBxB,oBAAS,GAD5B,mBACJyB,EADI,KACKC,EADL,KAGLC,EAAaC,iBAAO,MAEpBC,EAAqB,SAACxC,GAAW,IACpByC,EAASH,EAAlBrC,QACJwC,IAASA,EAAKvC,SAASF,EAAMG,SAC/BkC,GAAW,IAIfvC,qBAAU,WAER,OADA4C,OAAOpC,iBAAiB,YAAakC,GAC9B,WACLE,OAAOnC,oBAAoB,YAAaiC,OAS5C,OACE,yBAAK7C,IAAK2C,EAAYnB,UAAS,iBAAYY,IACzC,2BACEZ,UAAU,gBACVF,QAAS,kBAAMoB,GAAW,IAC1BR,YAAaA,EACbpB,MAAOA,EACPuB,SAAUA,EACVW,WAAY,SAACC,GAAD,OAAOV,EAAcU,MAGlCT,GAAa,yBAAKhB,UAAU,YAE7B,yBACE0B,IAAKC,IAAOC,YACZC,IAAI,cACJ7B,UAAU,eACVF,QAASa,EACTL,KAAK,iBAELW,GAAWlB,EAAQ+B,OAAU,kBAAC,EAAD,CAAaC,OAAQzC,EAAOQ,QAzBrC,SAACkC,GACzBlB,EAAckB,GACdd,GAAW,IAuB8EnB,QAASA,IAAc,OAKpHU,EAAOF,aAAe,CACpBG,YAAa,GACbE,YAAa,GACbtB,MAAO,GACPuB,SAAU,aACVC,cAAe,aACfH,gBAAiB,aACjBZ,QAAQ,GACRiB,WAAW,GAGER,qBAAYC,G,SChFrBwB,EAAa,SAAC,GAA2C,IAAD,IAAxCC,cAAwC,SAAxBf,EAAwB,EAAxBA,WACpC,OACE,yBACEnB,UAAS,uBAAkBkC,EAAS,mBAAqB,IACzD1D,IAAK2C,GAEL,yBAAKnB,UAAU,sBAAf,mCAEA,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,4BAAf,4BACA,uBAAGA,UAAU,4BACX,2EADF,yCAKF,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,4BAAf,4BACA,uBAAGA,UAAU,4BACX,2EADF,2CAQRiC,EAAW1B,aAAe,CACxB2B,QAAQ,GAGKD,QClBTE,EAAS,SAAC,GAIF,IAAD,IAHXC,gBAGW,aAFXC,gBAEW,aADXC,kBACW,MADE,EACF,EACLC,EAAWC,cADN,EAEuCC,aAChD,SAACC,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOC,QADZC,EAFG,EAEHA,cAAeC,EAFZ,EAEYA,YAAa7B,EAFzB,EAEyBA,UAFzB,EAKiCxB,mBAAS,MAL1C,mBAKJsD,EALI,KAKYC,EALZ,OAMiBvD,oBAAS,GAN1B,mBAMJ0C,EANI,KAMIc,EANJ,OAOyBxD,mBAAS,IAPlC,mBAOJyD,EAPI,KAOQnC,EAPR,KASLK,EAAaC,iBAAO,MACpBnC,EAAUmC,iBAAO,MAEjB8B,EAAsB7D,EAAY4D,EAAY,KAEpDtE,qBAAU,WACJuE,IACFX,EAASY,YAAe,CAAEC,QAASF,KACnCX,EAASc,YAAgB,CAAED,QAASF,QAErC,CAACA,IAGJvE,qBAAU,WACRoE,EAAkBH,EAAc,MAC/B,CAACA,IA+BJ,OAVArE,EACE4C,GACA,WACMe,GACFc,GAAU,KAGd,CAAE/D,YAIF,yBAAKe,UAAU,UACb,yBAAKA,UAAU,gBACZoC,EACC,kBAAC,EAAD,CACE1B,YAAY,sGACZpB,MAAO2D,EACPpC,SAvBiB,SAACY,GAAO,IACzBnC,EAAUmC,EAAEzC,OAAZM,MACRwB,EAAcxB,IAsBNwB,cAAeA,EACff,QAAO,sBAAM6C,GAAN,YAAwBC,IAC/BlC,gBAtCc,WACtB2C,QAAQC,IAAIN,IAsCJlC,cAlCkB,SAACU,GACb,UAAVA,EAAErB,KACJkD,QAAQC,IAAIN,IAiCNjC,UAAWA,IAGb,GAEDqB,EACC,kBAACmB,EAAA,EAAD,CACE9C,YAAY,eACZ+C,SAAUb,EACV/B,SAAU,SAAC6C,GACTX,EAAkBW,IAEpBxD,OAAQ4C,EACRa,UAAU,EACVC,cAAc,EACdC,mBAAmB,EACnBjD,YAAY,mBAGd,IAGJ,yBAAKZ,UAAU,iBACb,yBAAKA,UAAU,iBACb,yBACE0B,IAAKC,IAAOmC,WACZjC,IAAI,aACJ7B,UAAU,eACVF,QAAS,kBAAMkD,GAAWd,IAC1B5B,KAAK,eACL9B,IAAKS,IAENqD,EAAa,EACZ,0BAAMtC,UAAU,wBAAhB,cAEA,IAIJ,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,yBAAhB,kCAIA,kBAAC,EAAD,CAAYkC,OAAQA,EAAQf,WAAYA,QAOlDgB,EAAO5B,aAAe,CACpB6B,UAAU,EACVC,UAAU,EACVC,WAAY,GAGC9B,qBAAY2B,G,eC/Id4B,EAAY,CACvBC,GAAI,EACJ3D,MAAO,2BACP4D,KAAMC,IAAOC,UACbC,GAAIC,IAAQC,KACZC,MAAO,CACL,CACEP,GAAI,EACJQ,KAAM,2BACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,wCACNJ,GAAIC,IAAQC,MAEd,CACEN,GAAI,EACJQ,KAAM,wCACNJ,GAAIC,IAAQK,gBAEd,CACEV,GAAI,EACJQ,KAAM,wCACNJ,GAAIC,IAAQM,qBAIlB,CACEX,GAAI,EACJQ,KAAM,eACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,4BACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,kCACNJ,GAAIC,IAAQO,gBAEd,CACEZ,GAAI,EACJQ,KAAM,kCACNJ,GAAIC,IAAQQ,0BAIlB,CACEb,GAAI,EACJQ,KAAM,4BACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,kCACNJ,GAAIC,IAAQS,6BAEd,CACEd,GAAI,EACJQ,KAAM,kCACNJ,GAAIC,IAAQU,8BAMtB,CACEf,GAAI,EACJQ,KAAM,eACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,4BACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,kCACNJ,GAAIC,IAAQW,oBAEd,CACEhB,GAAI,EACJQ,KAAM,kCACNJ,GAAIC,IAAQY,2BAIlB,CACEjB,GAAI,EACJQ,KAAM,4BACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,kCACNJ,GAAIC,IAAQa,8BAEd,CACElB,GAAI,EACJQ,KAAM,kCACNJ,GAAIC,IAAQc,iCASbC,EAAQ,CACnBpB,GAAI,EACJ3D,MAAO,4BACP4D,KAAMC,IAAOmB,MACbd,MAAO,CACL,CAAEP,GAAI,EAAGQ,KAAM,4BAASJ,GAAI,aAC5B,CAAEJ,GAAI,EAAGQ,KAAM,4BAASJ,GAAI,cAInBkB,EAAS,CACpBtB,GAAI,EACJ3D,MAAO,iCACP4D,KAAMC,IAAOqB,OACbhB,MAAO,CACL,CACEP,GAAI,EACJQ,KAAM,mCACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,2BACNJ,GAAIC,IAAQmB,gBAEd,CACExB,GAAI,EACJQ,KAAM,eACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,4BACNJ,GAAIC,IAAQoB,oBAEd,CACEzB,GAAI,EACJQ,KAAM,4BACNJ,GAAIC,IAAQqB,yBAIlB,CACE1B,GAAI,EACJQ,KAAM,eACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,4BACNJ,GAAIC,IAAQsB,gCAEd,CACE3B,GAAI,EACJQ,KAAM,4BACNJ,GAAIC,IAAQuB,sCAMtB,CACE5B,GAAI,EACJQ,KAAM,+CACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,2BACNJ,GAAIC,IAAQwB,iBAEd,CACE7B,GAAI,EACJQ,KAAM,eACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,4BACNJ,GAAIC,IAAQyB,2BAEd,CACE9B,GAAI,EACJQ,KAAM,4BACNJ,GAAIC,IAAQ0B,+BAIlB,CACE/B,GAAI,EACJQ,KAAM,eACNC,IAAK,CACH,CACET,GAAI,EACJQ,KAAM,4BACNJ,GAAIC,IAAQ2B,+BAEd,CACEhC,GAAI,EACJQ,KAAM,4BACNJ,GAAIC,IAAQ4B,uC,kCC3GXzF,kBAxEC,SAAC,GAMH,IALZ0F,EAKW,EALXA,QACAC,EAIW,EAJXA,YACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,mBACAC,EACW,EADXA,SACW,EACmC9G,mBAAS,IAD5C,mBACJ+G,EADI,KACaC,EADb,KAQLC,EACJN,GACAA,EAAYrE,OAAS,GACrBqE,EAAYlG,KAAI,SAACyG,GACf,IAAMC,EACJD,EAAKlC,OAAS+B,EAAgB/B,MAC9B8B,EAASM,SAASC,SAASH,EAAKtC,IAElC,OACE,wBACEpE,UAAU,OACVF,QAAS,SAAC2B,GAAD,OAhBU,SAACA,EAAGiF,GAC7BjF,EAAEqF,kBACFN,EAAmBE,GAcGK,CAAmBtF,EAAGiF,IACtCM,SAAU,EACV1G,KAAK,WACLkB,WAAY,aACZpB,IAAKsG,EAAK1C,IAEV,kBAAC,IAAD,CACEI,GAAE,OAAEsC,QAAF,IAAEA,OAAF,EAAEA,EAAMtC,GACVpE,UAAS,wCACP2G,EAAiB,cAAgB,KAGnC,uBAAG3G,UAAU,8CACV0G,EAAKlC,WAOVJ,EAAkB8B,EAAlB9B,GAAII,EAAc0B,EAAd1B,KAAMC,EAAQyB,EAARzB,IAElB,OACE,wBACEzE,UAAU,OACVF,QAAS,SAAC2B,GAAD,OAAO4E,EAAmB5E,EAAGyE,EAASE,IAC/CY,SAAU,EACV1G,KAAK,WACLkB,WAAY,cAEZ,kBAAC,IAAD,CACE4C,GAAIA,EACJpE,UAAS,qBACPoG,EAAkB,SAAW,GADtB,0BAESA,IAAoB3B,EAAM,cAAgB,KAE5D,uBAAGzE,UAAU,yCAAyCwE,GACrDC,GAAO,kBAAC,IAAD,CAAiBR,KAAMgD,OAGjC,wBAAIjH,UAAS,wBAAmBoG,EAAkB,OAAS,KACxDK,OCSMjG,kBArEE,SAAC,GAMJ,IALZkG,EAKW,EALXA,KACAQ,EAIW,EAJXA,QACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,SACAd,EACW,EADXA,SAEM/D,EAAWC,cAEX6E,EAAkB5E,aAAY,SAACC,GAAD,OAAWA,EAAM4E,QAAQD,mBACrDjD,EAAkBsC,EAAlBtC,GAAII,EAAckC,EAAdlC,KAAMC,EAAQiC,EAARjC,IAJP,EAK2BjF,mBAAQ,OAAC6H,QAAD,IAACA,OAAD,EAACA,EAAiB5C,KALrD,mBAKJ0B,EALI,KAKSoB,EALT,OAMuB/H,oBAAS,GANhC,mBAMJgI,EANI,KAMOC,EANP,KAQLpB,EAAqB,SAAC5E,EAAGyE,EAASwB,GACtCjG,EAAEqF,kBACFW,EAAaC,GACbnF,EAASiE,YAAmBN,IAC5BqB,EAAerB,EAAQzB,KACnByB,EAAQ1B,OAAS6C,EAAgB7C,MAAQkD,GAC3ClB,YAAmB,KAIjBmB,EACJT,GACAA,EAAQpF,OAAS,GACjBoF,EAAQjH,KAAI,SAACiG,GACX,IAAME,EACJiB,EAAgB7C,OAAS0B,EAAQ1B,MACjC8B,EAASM,SAASC,SAASH,EAAKtC,IAElC,OACE,kBAAC,EAAD,CACEhE,IAAK8F,EAAQlC,GACbkC,QAASA,EACT0B,QAAS1B,EAAQzB,IACjB4B,mBAAoBA,EACpBF,YAAaA,EACbC,gBAAiBA,EACjBE,SAAUA,OAKlB,OACE,wBACEtG,UAAU,OACVF,QAAS,kBAAMqH,EAAgBT,EAAMU,IACrCJ,SAAU,EACV1G,KAAK,WACLkB,WAAY,cAEZ,kBAAC,IAAD,CACE4C,GAAIA,GAAM,IACVpE,UAAS,qBAAgBoH,EAAW,SAAW,GAAtC,YACPA,IAAa3C,EAAM,cAAgB,KAGrC,uBAAGzE,UAAU,qBAAqBwE,GACjCC,GAAO,kBAAC,IAAD,CAAiBR,KAAMgD,OAEjC,wBAAIjH,UAAS,wBAAmBoH,GAAYI,EAAY,OAAS,KAC9DG,O,SCHME,cAAWrH,gBA1Eb,SAAC,GAAyB,IAAvB8F,EAAsB,EAAtBA,SACR/D,EAAWC,cACXsF,EAAerF,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAO4E,eAAlB,aAAW,EAAgBQ,gBAFxB,EAGNtI,mBAAQ,OAACsI,QAAD,IAACA,OAAD,EAACA,EAAcrD,KAHjB,mBAG7ByC,EAH6B,KAGpBa,EAHoB,KAI9BZ,EAAkB,SAACT,EAAMgB,GAC7BK,EAAWrB,EAAKjC,KAEhBlC,EAASyF,YAAgBtB,IAErBA,EAAKlC,OAASsD,EAAatD,MAAQkD,GACrCnF,EAASyF,YAAgB,KAEvBtB,EAAK1C,MAAL,OAAY8D,QAAZ,IAAYA,OAAZ,EAAYA,EAAc9D,KAC5BzB,EAASiE,YAAmB,MAI1ByB,EAAiB,SAACC,GACtB,OAAOA,EAAS3D,MAAMtE,KAAI,SAACyG,GACzB,IAAMU,EACJU,EAAatD,OAASkC,EAAKlC,MAAQ8B,EAASM,SAASC,SAASH,EAAKtC,IACrE,OACE,kBAAC,EAAD,CACEhE,IAAKsG,EAAK1C,GACV0C,KAAMA,EACNQ,QAASA,EACTC,gBAAiBA,EACjBW,aAAcA,EACdV,SAAUA,EACVd,SAAUA,QAMlB,OACE,yBAAKtG,UAAU,QACb,wBAAIA,UAAU,cAAd,4BACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,qBACb,uBAAGA,UAAU,cACX,yBAAK0B,IAAG,OAAEqC,QAAF,IAAEA,OAAF,EAAEA,EAAWE,KAAMpC,IAAI,SAC/B,qCAAOkC,QAAP,IAAOA,OAAP,EAAOA,EAAW1D,SAGtB,wBAAIL,UAAU,cAAciI,EAAelE,IAE3C,yBAAK/D,UAAU,qBACb,uBAAGA,UAAU,cACX,yBAAK0B,IAAG,OAAE4D,QAAF,IAAEA,OAAF,EAAEA,EAAQrB,KAAMpC,IAAI,SAC5B,qCAAOyD,QAAP,IAAOA,OAAP,EAAOA,EAAQjF,SAGnB,wBAAIL,UAAU,cAAciI,EAAe3C,IAE3C,yBAAKtF,UAAU,qBACb,uBAAGA,UAAU,cACX,yBAAK0B,IAAG,OAAE0D,QAAF,IAAEA,OAAF,EAAEA,EAAOnB,KAAMpC,IAAI,SAC3B,qCAAOuD,QAAP,IAAOA,OAAP,EAAOA,EAAO/E,SAGlB,wBAAIL,UAAU,cAAciI,EAAe7C,IAC3C,yBAAKpF,UAAU,UACb,yBAAKA,UAAU,aAAf,4BACA,kBAACmI,EAAA,EAAD,CAAQvH,YAAY,cAClB,yBAAKc,IAAKwC,IAAOkE,WAAYvG,IAAI,KACjC,iEClECwG,EAAa,SAAC,GAKb,IAJZC,EAIW,EAJXA,SAIW,IAHXlG,gBAGW,aAFXC,gBAEW,aADXkG,oBACW,WACiB/I,oBAAS,GAD1B,mBACJgJ,EADI,KACIC,EADJ,KAELC,EAAUtH,iBAAO,MACjBnC,EAAUmC,iBAAO,MACjBuH,EAAcvH,iBAAO,MAE3B7C,EACEmK,GACA,WACMF,GACFC,GAAU,KAGd,CAAExJ,YAEJ,IAKI2J,EALAC,EAAc,GAUlB,OATItH,OAAOuH,YAAc,MACvBD,EAAc,cAIFD,EAAVxG,EAAuB,kBAAC,EAAD,CAAQA,UAAQ,IAClCC,EAAuB,kBAAC,EAAD,CAAQA,UAAQ,IAC9B,kBAAC,EAAD,MAGhB,oCACGkG,GAAgB,kBAACQ,EAAA,EAAD,MACjB,yBAAK/I,UAAS,0BAAqBwI,EAAS,OAAS,KACnD,yBAAKxI,UAAU,kBACb,yBACEA,UAAS,6BAAwBwI,EAAS,OAAS,IACnD1I,QAAS,WACP2I,GAAWD,IAEbxB,SAAU,EACV1G,KAAK,WACLkB,WAAY,aACZhD,IAAKS,GAEL,0BAAMe,UAAU,WAGpB,yBAAKA,UAAS,kBAAawI,EAAS,OAAS,GAA/B,YAAqCK,IACjD,kBAAC,EAAD,CAAaG,SAAUN,KAEzB,yBAAK1I,UAAU,eAAexB,IAAKmK,GAChCC,EACD,yBAAK5I,UAAU,WACb,6BAAMsI,QAQlBD,EAAW9H,aAAe,CACxB6B,UAAU,EACVC,UAAU,EACVkG,cAAc,GAGDF,O,iCCpFf,+DAYaY,EAAc,SAAC,GAMd,IALZC,EAKW,EALXA,MAKW,IAJXpJ,eAIW,MAJD,aAIC,MAHXE,iBAGW,MAHC,GAGD,EAFXgE,EAEW,EAFXA,GAEW,IADXmF,eACW,MADD,GACC,EACX,OACE,yBAAKnF,GAAIA,EAAIhE,UAAS,qBAAgBA,IACpC,yBACEA,UAAU,qBACVF,QAASA,EACT0B,WAAY,aACZlB,KAAK,SACL0G,SAAS,KAET,yBAAKtF,IAAKC,IAAOyH,kBAAmBvH,IAAI,KACxC,yBAAK7B,UAAU,4BACZkJ,EACD,8BAAOC,OAOjBF,EAAY1I,aAAe,CACzBP,UAAW,GACXF,QAAS,aACTkE,GAAI,GACJmF,QAAS,IAGI3I,mBAAYyI,I,wGCpCrBI,EAAW,SAAC,GAA0D,IAAD,IAAvD7E,YAAuD,MAAhD,GAAgD,MAA5C8E,sBAA4C,MAA3B,GAA2B,MAAvBC,YAAuB,MAAhB,GAAgB,EACzE,OACE,yBAAKvJ,UAAU,cACb,uBAAGA,UAAU,oBAAoBwE,GACjC,yBAAKxE,UAAU,oCACb,0BAAMA,UAAU,sBACbwJ,YAAaF,IAEhB,0BAAMtJ,UAAU,oBAAoBuJ,MAM5CF,EAAS9I,aAAe,CACtBiE,KAAM,GACN8E,eAAgB,GAChBC,KAAM,IAGOF,QCNFI,EAAO,SAAC,GAeP,IAAD,IAdXC,iBAcW,aAbXR,aAaW,MAbH,GAaG,MAZXrG,mBAYW,MAZG,GAYH,EAXX8G,EAWW,EAXXA,UACAC,EAUW,EAVXA,WACA9J,EASW,EATXA,QASW,IARXc,mBAQW,MARG,GAQH,MAPXiJ,qBAOW,aANXC,eAMW,aALXC,yBAKW,MALS,EAKT,MAJXC,2BAIW,MAJW,EAIX,MAHXC,wBAGW,MAHQ,EAGR,MAFXC,iBAEW,MAFC,EAED,MADXC,0BACW,MADU,EACV,EACX,OACE,yBAAKnK,UAAS,eAAUY,GAAed,QAASA,EAASQ,KAAK,gBAC3DoJ,GACC,yBAAK1J,UAAU,oCACb,yBACE0B,IAAKmB,EAAYuH,KACjBvI,IAAI,cACJ7B,UAAU,yBAIhB,yBAAKA,UAAS,uBAAkB8J,EAAU,eAAiB,KACzD,uBACE9J,UAAS,sBAAiB8J,EAAU,cAAgB,IACpDhK,QAAS8J,EACTtJ,KAAK,gBAEJ4I,GAEFY,GACC,yBACEpI,IAAKwC,IAAOmG,gBACZxI,IAAI,GACJ7B,UAAU,sBAIhB,yBACEA,UACE6J,EAAgB,iCAAmC,cAIrD,yBAAK7J,UAAU,cACb,kBAAC,EAAD,CACEwE,KAAK,wCACL8E,eAAgBW,EAChBV,KAAK,QAEP,kBAAC,EAAD,CAAU/E,KAAK,qBAAM8E,eAAgBY,EAAWX,KAAK,MACrD,kBAAC,EAAD,CAAU/E,KAAK,eAAK8E,eAAgBS,EAAmBR,KAAK,QAC5D,kBAAC,EAAD,CACE/E,KAAK,eACL8E,eAAgBU,EAChBT,KAAK,QAEP,kBAAC,EAAD,CACE/E,KAAK,iCACL8E,eAAgBa,EAChBZ,KAAK,SAIPG,GACA,yBAAK1J,UAAU,iBAEZ6C,EAAY5C,KAAI,SAACyG,GAAD,OACf,yBACEtG,IAAKsG,EAAK1C,GACVtC,IAAKgF,EAAK0D,KACVvI,IAAI,cACJ7B,UAAU,sBACVF,QAAS6J,EACTrJ,KAAK,wBAUrBmJ,EAAKlJ,aAAe,CAClB2I,MAAO,GACPrG,YAAa,GACb6G,WAAW,EACX9I,YAAa,GACbiJ,eAAe,EACfC,SAAS,EACTC,kBAAmB,EACnBC,oBAAqB,EACrBC,iBAAkB,EAClBC,UAAW,EACXC,mBAAoB,GAGP3J,eAAYiJ,I,0IC0BZa,UA/IU,WACvB,IAAM/H,EAAWC,cADY,EAE+BC,aAC1D,SAACC,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOC,QADZ4H,EAFqB,EAErBA,UAAWC,EAFU,EAEVA,MAAOC,EAFG,EAEHA,qBAAsBC,EAFnB,EAEmBA,QAFnB,EAMOlL,mBAAS,GANhB,mBAMtBmL,EANsB,KAMVC,EANU,KAQ7BjM,qBAAU,WACR4D,EACEsI,YAAwB,CACtBC,KAAM,eAIT,IAaHC,YAAsBN,GAGtB,IAAMO,EAAiBP,EAAqB3I,OAC1C2I,EAAqBxK,KAAI,SAACyG,EAAMvG,GAAW,IACjC6D,EAAkC0C,EAAlC1C,GAAIiH,EAA8BvE,EAA9BuE,YAAaC,EAAiBxE,EAAjBwE,aAEnBC,EAAeV,EAAqBtK,EAAQ,GAE5CiL,EAAeX,EAAqBtK,EAAQ,GAE9CkL,GAAW,EAsBf,OApBAH,EAAaI,SAAQ,SAACC,IACpB,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAO1M,SAAOwM,GAAW,MAI3BrH,KAAE,OAAKmH,QAAL,IAAKA,OAAL,EAAKA,EAAcnH,KACvBmH,EAAaD,aAAajL,KAAI,SAACuL,GAE7B,OAD6B,IAAzBC,QAAQD,EAAM3M,SAAiBwM,GAAW,GACvCA,KAKPrH,KAAE,OAAKoH,QAAL,IAAKA,OAAL,EAAKA,EAAcpH,KACvBoH,EAAaF,aAAajL,KAAI,SAACuL,GAE7B,OAD6B,IAAzBC,QAAQD,EAAM3M,SAAiBwM,GAAW,GACvCA,KAKT,yBACErL,UAAS,4BAAuBkL,EAAapJ,OAApC,YACPuJ,EAAW,mBAAqB,IAElCjL,IAAK4D,GAEL,yBACEhE,UAAS,uBACPqL,EAAW,yBAA2B,KAGvCJ,GAGH,yBAAKjL,UAAU,mBACZkL,GACCA,EAAajL,KAAI,SAACyL,GAAkB,IAEhCC,EAQED,EARFC,WACA5B,EAOE2B,EAPF3B,kBACAC,EAME0B,EANF1B,oBACAG,EAKEuB,EALFvB,mBACAF,EAIEyB,EAJFzB,iBACApL,EAGE6M,EAHF7M,MACA2F,EAEEkH,EAFFlH,KACA0F,EACEwB,EADFxB,UAEIJ,EAAU2B,QAAQ5M,GACxB,OACE,kBAAC,IAAD,CACEuB,IAAKuL,EACL/K,YAAY,eACZiJ,eAAa,EACbE,kBAAmBA,EACnBb,MAAO1E,EACPwF,oBAAqBA,EACrBG,mBAAoBA,EACpBF,iBAAkBA,EAClBC,UAAWA,EACXJ,QAASA,YASzB,wCAGF,OACE,kBAAC,IAAD,CAAYvB,aAAcgC,GACxB,yBAAKvK,UAAU,gBACb,kBAAC,IAAD,CACEkJ,MAAM,4BACNC,QAAQ,gLAGV,yBAAKnJ,UAAU,gBAAgBgL,GAE/B,yBAAKhL,UAAU,8BACZwK,EAAQE,GACP,yBAAK1K,UAAU,8BACb,kBAAC,IAAD,CACE2K,WAAYA,EACZiB,kBAAmBlB,EACnBmB,gBAAiBrB,EACjBsB,mBAAoB,EACpBjL,SAlHW,SAACkL,GACxBnB,EAAcmB,GACdxJ,EACEsI,YAAwB,CACtBC,KAAM,UACNkB,KAAMD,MA8GEE,UAAU,YACVC,UAAU","file":"static/js/41.24c4ca67.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\n/**\n * Function: useOnClickOutside\n * A custom hook that use to trigger an event if have action click outside a ref's element.\n * @param {object} ref: a reference of element that we need to detect\n * @param {function} handler: a function that used to trigger event if have click event outside of element\n */\nconst useClickOutside = (ref, handler, { ...rest }) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element\n      if (\n        !ref.current ||\n        ref.current.contains(event.target) ||\n        !rest.iconRef.current ||\n        rest.iconRef.current.contains(event.target)\n      ) {\n        return;\n      }\n\n      // Fire event if clicking outside ref's element\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n    };\n  }, [ref, handler, rest.iconRef]);\n};\n\nexport default useClickOutside;\n","import { useEffect, useState } from 'react';\n\n/**\n * Function: useDebounce\n * @param {string} value \n * @param {number} delay \n * @returns \n */\n\nconst useDebounce = (value, delay) => {\n\n    // State and setter for debounce value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        // update debounced value after delay\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        // cancel the timeout if value changes\n        return () => {\n            clearTimeout(handler);\n        }\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;","// @flow\nimport React, { memo } from 'react';\n\ntype Props = {\n  onClick: Function,\n  options?: Array<{id: number, value: number, label: string}>\n};\n\nconst AutoSuggest = ({ onClick, options = [] }: Props) => {\n  return (\n    <div className=\"auto-suggest\">\n      {options\n        .map((option, index) => (\n          <p\n            className=\"auto-suggest__item\"\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            onClick={() => onClick(option.label)}\n            role=\"presentation\"\n          >\n            {option.label}\n          </p>\n        ))}\n    </div>\n  );\n};\n\nAutoSuggest.defaultProps = {\n  options: [],\n};\n\nexport default memo<Props>(AutoSuggest);\n","// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport AutoSuggest from './AutoSuggest';\n\ntype Props = {\n  placeholder?: string,\n  handleIconClick?: Function,\n  customClass?: string,\n  value?: string,\n  onChange?: Function,\n  setSearchTerm?: Function,\n  options?: Array<{id: number, value: number, label: string}>,\n  handleKeyDown: Function,\n  isSpinner?: boolean,\n};\n\nconst Search = ({\n  placeholder,\n  handleIconClick = () => {},\n  customClass = '',\n  value = '',\n  onChange = () => {},\n  setSearchTerm = () => {},\n  options = [],\n  handleKeyDown,\n  isSpinner = false\n}: Props) => {\n  const [display, setDisplay] = useState(false);\n\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      window.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n\n  const updateSearchInput = (searchValue) => {\n    setSearchTerm(searchValue);\n    setDisplay(false);\n  };\n\n  return (\n    <div ref={wrapperRef} className={`search ${customClass}`}>\n      <input\n        className=\"search__input\"\n        onClick={() => setDisplay(true)}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onKeyPress={(e) => handleKeyDown(e)}\n      />\n\n      {isSpinner && <div className=\"spinner\" />}\n\n      <img\n        src={images.icon_search}\n        alt=\"Icon Search\"\n        className=\"search__icon\"\n        onClick={handleIconClick}\n        role=\"presentation\"\n      />\n      {(display && options.length) ? <AutoSuggest search={value} onClick={updateSearchInput} options={options} /> : null}\n    </div>\n  );\n};\n\nSearch.defaultProps = {\n  placeholder: '',\n  customClass: '',\n  value: '',\n  onChange: () => {},\n  setSearchTerm: () => {},\n  handleIconClick: () => {},\n  options:[],\n  isSpinner: false,\n};\n\nexport default memo<Props>(Search);\n","// @flow\nimport React from 'react';\n\ntype Props = {\n  isShow?: boolean,\n  wrapperRef: any,\n};\nconst ModalEvent = ({ isShow = false, wrapperRef }: Props) => {\n  return (\n    <div\n      className={`modal__event ${isShow ? 'show-modal-event' : ''}`}\n      ref={wrapperRef}\n    >\n      <div className=\"modal__event-title\">이벤트 알림</div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n    </div>\n  );\n};\n\nModalEvent.defaultProps = {\n  isShow: false,\n};\n\nexport default ModalEvent;\n","/* eslint-disable react-hooks/exhaustive-deps */\n// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport useClickOutside from 'customHooks/useClickOutSide';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useDebounce from 'customHooks/useDebounce';\nimport { getListCompany, getListPosition } from 'modules/main/redux';\nimport Search from '../Search';\nimport SelectDropdown from '../Select';\nimport ModalEvent from './ModalEvent';\n\ntype Props = {\n  isSearch?: boolean,\n  isSelect?: boolean,\n  eventCount?: number,\n};\n\nconst Header = ({\n  isSearch = false,\n  isSelect = false,\n  eventCount = 0,\n}: Props) => {\n  const dispatch = useDispatch();\n  const { listPositions, listCompany, isSpinner } = useSelector(\n    (state) => state?.main\n  );\n  const [optionDropdown, setOptionDropdown] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const wrapperRef = useRef(null);\n  const iconRef = useRef(null);\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      dispatch(getListCompany({ keyword: debouncedSearchTerm }));\n      dispatch(getListPosition({ keyword: debouncedSearchTerm }));\n    }\n  }, [debouncedSearchTerm]);\n\n  // set option dropdown value when listposition != [];\n  useEffect(() => {\n    setOptionDropdown(listPositions[0]);\n  }, [listPositions]);\n\n  // Handle Icon search Click\n  const handleIconClick = () => {\n    console.log(searchTerm);\n  };\n\n  // Handle event press key enter search\n  const handleKeyDownSearch = (e) => {\n    if (e.key === 'Enter') {\n      console.log(searchTerm);\n    }\n  };\n\n  // when input search change set value\n  const handleSearchChange = (e) => {\n    const { value } = e.target;\n    setSearchTerm(value);\n  };\n\n  // handle click outside event\n  useClickOutside(\n    wrapperRef,\n    () => {\n      if (isShow) {\n        setIsShow(false);\n      }\n    },\n    { iconRef }\n  );\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        {isSearch ? (\n          <Search\n            placeholder=\"회사명이나 구역명으로 검색해보세요.\"\n            value={searchTerm}\n            onChange={handleSearchChange}\n            setSearchTerm={setSearchTerm}\n            options={[...listPositions, ...listCompany]}\n            handleIconClick={handleIconClick}\n            handleKeyDown={handleKeyDownSearch}\n            isSpinner={isSpinner}\n          />\n        ) : (\n          ''\n        )}\n        {isSelect ? (\n          <SelectDropdown\n            placeholder=\"List Selects\"\n            listItem={listPositions}\n            onChange={(ops) => {\n              setOptionDropdown(ops);\n            }}\n            option={optionDropdown}\n            disabled={false}\n            isSearchable={false}\n            blurInputOnSelect={false}\n            customClass=\"header__select\"\n          />\n        ) : (\n          ''\n        )}\n      </div>\n      <div className=\"header__right\">\n        <div className=\"header__event\">\n          <img\n            src={images.icon_event}\n            alt=\"Icon Event\"\n            className=\"header__icon\"\n            onClick={() => setIsShow(!isShow)}\n            role=\"presentation\"\n            ref={iconRef}\n          />\n          {eventCount > 0 ? (\n            <span className=\"header__notification\">eventCount</span>\n          ) : (\n            ''\n          )}\n        </div>\n\n        <div className=\"header__label-event\">\n          <span className=\"header__label-content\">이벤트발생</span>\n\n          {/* Modal event */}\n\n          <ModalEvent isShow={isShow} wrapperRef={wrapperRef} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  eventCount: 0,\n};\n\nexport default memo<Props>(Header);\n","import IMAGES from 'themes/images';\nimport ROUTERS from './routers';\n\nexport const DASHBOARD = {\n  id: 1,\n  label: '실증단지',\n  icon: IMAGES.iconGraph,\n  to: ROUTERS.ROOT,\n  items: [\n    {\n      id: 1,\n      name: '대시보드',\n      sub: [\n        {\n          id: 1,\n          name: '통합 대시보드',\n          to: ROUTERS.ROOT,\n        },\n        {\n          id: 2,\n          name: '구역 대시보드',\n          to: ROUTERS.DASHBOARD_AREA,\n        },\n        {\n          id: 3,\n          name: '업체 대시보드',\n          to: ROUTERS.DASHBOARD_COMPANY,\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '현황',\n      sub: [\n        {\n          id: 1,\n          name: '발전 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.STATUS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.STATUS_COMPANY_BY_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_AREA,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: '통계',\n      sub: [\n        {\n          id: 1,\n          name: '발전 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_AREA,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nexport const SETUP = {\n  id: 2,\n  label: '기기 관리',\n  icon: IMAGES.setup,\n  items: [\n    { id: 1, name: '계정 관리', to: '/accounts' },\n    { id: 2, name: '기기 관리', to: '/devices' },\n  ],\n};\n\nexport const MOCKUP = {\n  id: 1,\n  label: '실증테스트',\n  icon: IMAGES.mockUp,\n  items: [\n    {\n      id: 1,\n      name: '테스트(목업)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.TEST_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_MOCKUP_STATUS,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_MOCKUP_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '테스트(실증단지)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.SOLAR_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n  itemSub: {\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listNestSub: Array<{\n    id: any,\n    to: string,\n    name: string,\n  }>,\n  isActiveNestSub: boolean,\n  handleClickItemSub: Function,\n  location: {\n    pathname: string,\n  },\n};\n\nconst Submenu = ({\n  itemSub,\n  listNestSub,\n  isActiveNestSub,\n  handleClickItemSub,\n  location,\n}: Props) => {\n  const [nestSubClicking, setNestSubClicking] = useState({});\n\n  const handleClickNestSub = (e, item) => {\n    e.stopPropagation();\n    setNestSubClicking(item);\n  };\n\n  const renderNestedSub =\n    listNestSub &&\n    listNestSub.length > 0 &&\n    listNestSub.map((item) => {\n      const activeNestItem =\n        item.name === nestSubClicking.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <li\n          className=\"item\"\n          onClick={(e) => handleClickNestSub(e, item)}\n          tabIndex={0}\n          role=\"menuitem\"\n          onKeyPress={() => {}}\n          key={item.id}\n        >\n          <Link\n            to={item?.to}\n            className={`item__link item-link-nest-sub ${\n              activeNestItem ? 'active-link' : ''\n            }`}\n          >\n            <p className=\"item__link__label item-link-label-nest-sub\">\n              {item.name}\n            </p>\n          </Link>\n        </li>\n      );\n    });\n\n  const { to, name, sub } = itemSub;\n\n  return (\n    <li\n      className=\"item\"\n      onClick={(e) => handleClickItemSub(e, itemSub, isActiveNestSub)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to}\n        className={`item__link ${\n          isActiveNestSub ? 'active' : ''\n        } item-link-sub ${isActiveNestSub && !sub ? 'active-link' : ''}`}\n      >\n        <p className=\"item__link__label item-link-label-sub\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n\n      <ul className={`menu__listsub ${isActiveNestSub ? 'open' : ''}`}>\n        {renderNestedSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(Submenu);\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { setNestSubClicking } from 'commons/redux';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport Submenu from './Submenu';\n\ntype Props = {\n  item: {\n    id: number,\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listSub: Array<{\n    id: number,\n    name: string,\n    to: string,\n    sub: Array<{}>,\n  }>,\n  handleClickItem: Function,\n  isActive: boolean,\n  location: {\n    pathname: string,\n  },\n};\n\nconst MenuItem = ({\n  item,\n  listSub,\n  handleClickItem,\n  isActive,\n  location,\n}: Props) => {\n  const dispatch = useDispatch();\n\n  const subMenuClicking = useSelector((state) => state.commons.subMenuClicking);\n  const { to, name, sub } = item;\n  const [listNestSub, setListNestSub] = useState(subMenuClicking?.sub);\n  const [activeSub, setActiveSub] = useState(false);\n\n  const handleClickItemSub = (e, itemSub, active) => {\n    e.stopPropagation();\n    setActiveSub(active);\n    dispatch(setNestSubClicking(itemSub));\n    setListNestSub(itemSub.sub);\n    if (itemSub.name === subMenuClicking.name && active) {\n      setNestSubClicking({});\n    }\n  };\n\n  const renderSub =\n    listSub &&\n    listSub.length > 0 &&\n    listSub.map((itemSub) => {\n      const isActiveNestSub =\n        subMenuClicking.name === itemSub.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <Submenu\n          key={itemSub.id}\n          itemSub={itemSub}\n          nestSub={itemSub.sub}\n          handleClickItemSub={handleClickItemSub}\n          listNestSub={listNestSub}\n          isActiveNestSub={isActiveNestSub}\n          location={location}\n        />\n      );\n    });\n\n  return (\n    <li\n      className=\"item\"\n      onClick={() => handleClickItem(item, isActive)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to || '#'}\n        className={`item__link ${isActive ? 'active' : ''} ${\n          isActive && !sub ? 'active-link' : ''\n        }`}\n      >\n        <p className=\"item__link__label\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n      <ul className={`menu__listsub ${isActive || activeSub ? 'open' : ''}`}>\n        {renderSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(MenuItem);\n","// @flow\n// libs\nimport React, { useState, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DASHBOARD, SETUP, MOCKUP } from 'constants/listMenu';\nimport { setMenuClicking, setNestSubClicking } from 'commons/redux';\nimport MenuItem from './MenuItem';\nimport IMAGES from 'themes/images';\nimport { Button } from 'commons/components/Button';\n\ntype Props = {\n  location: {\n    pathname: string,\n  },\n};\n\nconst Menu = ({ location }: Props) => {\n  const dispatch = useDispatch();\n  const menuClicking = useSelector((state) => state?.commons?.menuClicking);\n  const [listSub, setListSub] = useState(menuClicking?.sub);\n  const handleClickItem = (item, active) => {\n    setListSub(item.sub);\n\n    dispatch(setMenuClicking(item));\n\n    if (item.name === menuClicking.name && active) {\n      dispatch(setMenuClicking({}));\n    }\n    if (item.id !== menuClicking?.id) {\n      dispatch(setNestSubClicking({}));\n    }\n  };\n\n  const renderMenuList = (listMenu) => {\n    return listMenu.items.map((item) => {\n      const isActive =\n        menuClicking.name === item.name || location.pathname.includes(item.to);\n      return (\n        <MenuItem\n          key={item.id}\n          item={item}\n          listSub={listSub}\n          handleClickItem={handleClickItem}\n          menuClicking={menuClicking}\n          isActive={isActive}\n          location={location}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"menu\">\n      <h1 className=\"menu__head\">실증단지</h1>\n      <div className=\"wrapper-menu\">\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={DASHBOARD?.icon} alt=\"menu\" />\n            <span>{DASHBOARD?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(DASHBOARD)}</ul>\n\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={MOCKUP?.icon} alt=\"menu\" />\n            <span>{MOCKUP?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(MOCKUP)}</ul>\n\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={SETUP?.icon} alt=\"menu\" />\n            <span>{SETUP?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(SETUP)}</ul>\n        <div className=\"logout\">\n          <div className=\"name-user\">마스터님</div>\n          <Button customClass=\"btn-logout\">\n            <img src={IMAGES.btn_logout} alt=\"\" />\n            <div>로그아웃</div>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(memo<Props>(Menu));\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useRef } from 'react';\nimport useClickOutside from 'customHooks/useClickOutSide';\n// import Header from '../../components/Header';\nimport Loading from 'commons/components/Loading';\nimport Header from 'commons/components/Header';\n\nimport SidebarMenu from '../Menu';\n\n\ntype Props = {\n  children: React.AbstractComponent<{}>,\n  isSearch?: boolean,\n  isSelect?: boolean,\n  isProcessing?: boolean,\n};\n\nexport const MainLayout = ({\n  children,\n  isSearch = false,\n  isSelect = false,\n  isProcessing = false,\n}: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const refMenu = useRef(null);\n  const iconRef = useRef(null);\n  const mainContent = useRef(null);\n\n  useClickOutside(\n    refMenu,\n    () => {\n      if (isOpen) {\n        setIsOpen(false);\n      }\n    },\n    { iconRef }\n  );\n  let classHeight = '';\n  if (window.innerHeight < 900) {\n    classHeight = 'heightMenu';\n  }\n\n  let showHeader;\n  if (isSearch) showHeader = <Header isSearch />;\n  else if (isSelect) showHeader = <Header isSelect />;\n  else showHeader = <Header />;\n\n  return (\n    <>\n      {isProcessing && <Loading />}\n      <div className={`wrapper-content ${isOpen ? 'open' : ''}`}>\n        <div className=\"wrapper-mobile\">\n          <div\n            className={`d-mobile btn-menu  ${isOpen ? 'show' : ''}`}\n            onClick={() => {\n              setIsOpen(!isOpen);\n            }}\n            tabIndex={0}\n            role=\"menuitem\"\n            onKeyPress={() => {}}\n            ref={iconRef}\n          >\n            <span className=\"icon\" />\n          </div>\n        </div>\n        <div className={`sidebar ${isOpen ? 'show' : ''} ${classHeight}`}>\n          <SidebarMenu innerRef={refMenu} />\n        </div>\n        <div className=\"main-content\" ref={mainContent}>\n          {showHeader}\n          <div className=\"content\">\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMainLayout.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  isProcessing: false,\n};\n\nexport default MainLayout;\n","// @flow\n// libs\nimport React, { memo } from 'react';\nimport images from 'themes/images';\n\ntype Props = {\n  title: string,\n  onClick?: Function,\n  className?: string,\n  id?: string,\n  descSub?: string,\n};\n\nexport const TitleHeader = ({\n  title,\n  onClick = () => {},\n  className = '',\n  id,\n  descSub = '',\n}: Props) => {\n  return (\n    <div id={id} className={`wrap-title ${className}`}>\n      <div\n        className=\"wrap-title__header\"\n        onClick={onClick}\n        onKeyPress={() => {}}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <img src={images.icon_title_header} alt=\"\" />\n        <div className=\"wrap-title__header__name\">\n          {title}\n          <span>{descSub}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTitleHeader.defaultProps = {\n  className: '',\n  onClick: () => {},\n  id: '',\n  descSub: '',\n};\n\nexport default memo<Props>(TitleHeader);\n","// @flow\nimport React from 'react';\nimport { formatNumber } from 'helpers';\n\ntype Props = {\n  name?: string,\n  specifications?: string,\n  unit?: string,\n};\n\nconst CardItem = ({ name = '', specifications = '', unit = '' }: Props) => {\n  return (\n    <div className=\"card__item\">\n      <p className=\"card__item__name\">{name}</p>\n      <div className=\"card__item__group-specifications\">\n        <span className=\"card__item__number\">\n          {formatNumber(specifications)}\n        </span>\n        <span className=\"card__item__unit\">{unit}</span>\n      </div>\n    </div>\n  );\n};\n\nCardItem.defaultProps = {\n  name: '',\n  specifications: '',\n  unit: '',\n};\n\nexport default CardItem;\n","// @flow\nimport React, { memo } from 'react';\nimport IMAGES from 'themes/images';\n\nimport CardItem from './CardItem';\n\ntype Props = {\n  isLogoTop?: boolean,\n  title?: string,\n  listCompany?: any,\n  logoClick: Function,\n  titleClick: Function,\n  onClick: Function,\n  customClass?: string,\n  isCardCompany?: boolean,\n  isEvent?: boolean,\n  amountElectricDay?: number,\n  amountElectricMonth?: number,\n  electricRealtime?: number,\n  ratePower?: number,\n  cumulativeElectric?: number,\n\n};\n\nexport const Card = ({\n  isLogoTop = false,\n  title = '',\n  listCompany = [],\n  logoClick,\n  titleClick,\n  onClick,\n  customClass = '',\n  isCardCompany = false,\n  isEvent = false,\n  amountElectricDay = 0,\n  amountElectricMonth = 0,\n  electricRealtime = 0,\n  ratePower = 0,\n  cumulativeElectric = 0,\n}: Props) => {\n  return (\n    <div className={`card ${customClass}`} onClick={onClick} role=\"presentation\">\n      {isLogoTop && (\n        <div className=\"card__company card__company--top\">\n          <img\n            src={listCompany.logo}\n            alt=\"logocompany\"\n            className=\"card__company__item\"\n          />\n        </div>\n      )}\n      <div className={`card__header ${isEvent ? 'header-event' : ''}`}>\n        <p\n          className={`card__title ${isEvent ? 'card__event' : ''}`}\n          onClick={titleClick}\n          role=\"presentation\"\n        >\n          {title}\n        </p>\n        {isEvent && (\n          <img\n            src={IMAGES.icon_event_card}\n            alt=\"\"\n            className=\"card__logo-event\"\n          />\n        )}\n      </div>\n      <div\n        className={\n          isCardCompany ? 'card__body card__body--company' : 'card__body'\n        }\n      >\n        {/* list item in card */}\n        <div className=\"card__list\">\n          <CardItem\n            name=\"실시간 발전량\"\n            specifications={electricRealtime}\n            unit=\"kWh\"\n          />\n          <CardItem name=\"성능비\" specifications={ratePower} unit=\"%\" />\n          <CardItem name=\"금일\" specifications={amountElectricDay} unit=\"kWh\" />\n          <CardItem\n            name=\"금월\"\n            specifications={amountElectricMonth}\n            unit=\"mWh\"\n          />\n          <CardItem\n            name=\"누적발전량\"\n            specifications={cumulativeElectric}\n            unit=\"MW\"\n          />\n        </div>\n\n        {!isLogoTop && (\n          <div className=\"card__company\">\n            {/* list company in card */}\n            {listCompany.map((item) => (\n              <img\n                key={item.id}\n                src={item.logo}\n                alt=\"logocompany\"\n                className=\"card__company__item\"\n                onClick={logoClick}\n                role=\"presentation\"\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCard.defaultProps = {\n  title: '',\n  listCompany: [],\n  isLogoTop: false,\n  customClass: '',\n  isCardCompany: false,\n  isEvent: false,\n  amountElectricDay: 0,\n  amountElectricMonth: 0,\n  electricRealtime: 0,\n  ratePower: 0,\n  cumulativeElectric: 0,\n};\n\nexport default memo<Props>(Card);\n","import { Card } from 'commons/components/Card';\nimport TitleHeader from 'commons/components/TitleHeader';\nimport { spliceCompanyInverter } from 'helpers';\nimport MainLayout from 'layout/MainLayout';\n// import comapyInverter from 'mockData/dashboardComany';\nimport { getListCompanyInverters } from 'modules/main/redux';\nimport React, { useEffect, useState } from 'react';\nimport Pagination from 'react-js-pagination';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst DashboardCompany = () => {\n  const dispatch = useDispatch();\n  const { isLoading, total, listCompanyInverters, perPage } = useSelector(\n    (state) => state?.main\n  );\n\n  const [activePage, setActivePage] = useState(1);\n\n  useEffect(() => {\n    dispatch(\n      getListCompanyInverters({\n        type: 'company',\n      })\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handlePageChange = (pageNumber) => {\n    setActivePage(pageNumber);\n    dispatch(\n      getListCompanyInverters({\n        type: 'company',\n        page: pageNumber,\n      })\n    );\n  };\n\n  // slice if item inverter > column\n  spliceCompanyInverter(listCompanyInverters);\n\n  // render Inverter\n  const renderInverter = listCompanyInverters.length ? (\n    listCompanyInverters.map((item, index) => {\n      const { id, companyName, listInverter } = item;\n      // get prev item\n      const prevInverter = listCompanyInverters[index - 1];\n      // get next item\n      const nextInverter = listCompanyInverters[index + 1];\n\n      let hasEvent = false;\n      // check inverter have event?\n      listInverter.forEach((item1) => {\n        if (item1?.event) hasEvent = true;\n      });\n\n      // check event if company have inverter has event\n      if (id === prevInverter?.id) {\n        prevInverter.listInverter.map((item2) => {\n          if (Boolean(item2.event) === true) hasEvent = true;\n          return hasEvent;\n        });\n      }\n\n      // check event if company have inverter has event\n      if (id === nextInverter?.id) {\n        nextInverter.listInverter.map((item2) => {\n          if (Boolean(item2.event) === true) hasEvent = true;\n          return hasEvent;\n        });\n      }\n\n      return (\n        <div\n          className={`company-item item-${listInverter.length} ${\n            hasEvent ? 'company-hasevent' : ''\n          }`}\n          key={id}\n        >\n          <div\n            className={`company-name ${\n              hasEvent ? 'company-hasevent-title' : ''\n            }`}\n          >\n            {companyName}\n          </div>\n\n          <div className=\"list-card-item \">\n            {listInverter &&\n              listInverter.map((inverterItem) => {\n                const {\n                  InverterId,\n                  amountElectricDay,\n                  amountElectricMonth,\n                  cumulativeElectric,\n                  electricRealtime,\n                  event,\n                  name,\n                  ratePower,\n                } = inverterItem;\n                const isEvent = Boolean(event);\n                return (\n                  <Card\n                    key={InverterId}\n                    customClass=\"card-company\"\n                    isCardCompany\n                    amountElectricDay={amountElectricDay}\n                    title={name}\n                    amountElectricMonth={amountElectricMonth}\n                    cumulativeElectric={cumulativeElectric}\n                    electricRealtime={electricRealtime}\n                    ratePower={ratePower}\n                    isEvent={isEvent}\n                  />\n                );\n              })}\n          </div>\n        </div>\n      );\n    })\n  ) : (\n    <div>No data</div>\n  );\n\n  return (\n    <MainLayout isProcessing={isLoading}>\n      <div className=\"content-wrap\">\n        <TitleHeader\n          title=\"설치 업체\"\n          descSub=\"실증단지 내 설치된 업체들의 발전 데이터를 확인하실 수 있습니다.\"\n        />\n\n        <div className=\"list-company\">{renderInverter}</div>\n\n        <div className=\"opacity d-block pagination\">\n          {total > perPage && (\n            <div className=\"wrapper-device__pagination\">\n              <Pagination\n                activePage={activePage}\n                itemsCountPerPage={perPage}\n                totalItemsCount={total}\n                pageRangeDisplayed={9}\n                onChange={handlePageChange}\n                itemClass=\"page-item\"\n                linkClass=\"page-link\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default DashboardCompany;\n"],"sourceRoot":""}