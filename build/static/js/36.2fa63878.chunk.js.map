{"version":3,"sources":["commons/components/TitleHeader/titleSub.js","customHooks/useClickOutSide.js","customHooks/useDebounce.js","commons/components/Search/AutoSuggest.js","commons/components/Search/index.js","commons/components/Header/ModalEvent.js","commons/components/Header/index.js","constants/listMenu.js","layout/Menu/Submenu.js","layout/Menu/MenuItem.js","layout/Menu/index.js","layout/MainLayout/index.js","commons/components/TitleHeader/index.js","commons/components/Modal/index.js","commons/components/Radio/index.js","constants/regexs.js","constants/errorMsg.js","helpers/validator.js","modules/testMockupStatus/components/operationStatus/edit.js"],"names":["TitleSubHeader","title","onClick","className","id","titleLight","onKeyPress","role","tabIndex","src","images","icon_arrow","alt","defaultProps","memo","useClickOutside","ref","handler","rest","useEffect","listener","event","current","contains","target","iconRef","document","addEventListener","removeEventListener","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","setTimeout","clearTimeout","AutoSuggest","options","map","option","index","key","label","Search","placeholder","handleIconClick","customClass","onChange","setSearchTerm","handleKeyDown","isSpinner","display","setDisplay","wrapperRef","useRef","handleClickOutside","wrap","window","e","icon_search","length","search","searchValue","ModalEvent","isShow","Header","isSearch","isSelect","eventCount","dispatch","useDispatch","useSelector","state","main","listPositions","listCompany","optionDropdown","setOptionDropdown","setIsShow","searchTerm","debouncedSearchTerm","getListCompany","keyword","getListPosition","console","log","Select","listItem","ops","disabled","isSearchable","blurInputOnSelect","icon_event","DASHBOARD","icon","IMAGES","iconGraph","to","ROUTERS","ROOT","items","name","sub","DASHBOARD_AREA","DASHBOARD_COMPANY","STATUS_COMPANY","STATUS_COMPANY_BY_AREA","OPERATION_STATUS_BY_COMPANY","OPERATION_STATUS_BY_AREA","STATISTICS_DEVELOP","STATISTICS_DEVELOP_AREA","OPERATION_STATISTICS_COMPANY","OPERATION_STATISTICS_AREA","SETUP","setup","MOCKUP","mockUp","TEST_DASHBOARD","TEST_MOCKUP_STATUS","TEST_MOCKUP_OPERATION","TEST_MOCKUP_STATISTICS_DEVELOP","TEST_MOCKUP_STATISTICS_OPERATION","SOLAR_DASHBOARD","TEST_SOLAR_STATUS_DEVELOP","TEST_SOLAR_STATUS_OPERATION","TEST_SOLAR_STATISTICS_DEVELOP","TEST_SOLAR_STATISTICS_OPERATION","itemSub","listNestSub","isActiveNestSub","handleClickItemSub","location","nestSubClicking","setNestSubClicking","renderNestedSub","item","activeNestItem","pathname","includes","stopPropagation","handleClickNestSub","faChevronRight","listSub","handleClickItem","isActive","subMenuClicking","commons","setListNestSub","activeSub","setActiveSub","active","renderSub","nestSub","withRouter","menuClicking","setListSub","setMenuClicking","renderMenuList","listMenu","Button","btn_logout","MainLayout","children","isProcessing","isOpen","setIsOpen","refMenu","mainContent","showHeader","classHeight","innerHeight","Loading","innerRef","TitleHeader","descSub","icon_title_header","ModalPopup","animation","size","handleClose","isShowIconClose","isShowHeader","isShowFooter","isShowTwoBtn","customClassButton","classNameBtnLeft","textBtnLeft","classNameBtnRight","textBtnRight","handleSubmit","isDisabledButton","handleCloseIcon","onHide","show","onKeyUp","icon_close","Body","Footer","type","isDisabled","Radio","labelRadio","isChecked","htmlFor","checked","REGEX","EMAIL","PASSWORD","NUMBER","PHONE_NUMBER","USER_NAME","FLOAT_INPUT","VALIDATE_PASSWORD","ERROR_MESSAGE","EMAIL_FORMAT","EMAIL_REQUIRED","NICK_NAME_REQUIRED","PASSWORD_REQUIRED","PASSWORD_FORMAT","PASSWORD_NOT_MATCH","PASSWORD_CONFIRM_REQUIRED","EMAIL_NOT_EXSIST","PASSWORD_INVALID","ENQUIRY_TYPE_REQUIRED","TITLE_REQUIRED","CONTENT_REQUIRED","VERIFY_EMAIL","UN_AUTHENTICATED","REQUIRED","Validator","objectVal","validate","error","keys","Object","i","rules","errorMsg","j","undefined","test","StatusByAreaCompanyEdit","history","useHistory","account","content","modalConform","setModalConform","typeEvent","company","dataSubmit","setDataSubmit","setError","SignInAction","handleChange","inverter","noOptionsMessage","rows","maxLength","push","validation","dataValidate"],"mappings":"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","file":"static/js/36.2fa63878.chunk.js","sourcesContent":["// @flow\n// libs\nimport React, { memo } from 'react';\nimport images from 'themes/images';\n\ntype Props = {\n  title: string,\n  onClick?: Function,\n  className?: string,\n  id?: string,\n  titleLight?: string,\n};\n\nexport const TitleSubHeader = ({\n  title,\n  onClick = () => {},\n  className = '',\n  id,\n  titleLight = '',\n}: Props) => {\n  return (\n    <div id={id} className={`wrap-title-sub ${className}`}>\n      <div\n        className=\"wrap-title-sub__header\"\n        onClick={onClick}\n        onKeyPress={() => {}}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <img src={images.icon_arrow} alt=\"\" />\n        <div className=\"wrap-title-sub__header__name\">\n          {title}\n          <span>{titleLight}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTitleSubHeader.defaultProps = {\n  className: '',\n  onClick: () => {},\n  titleLight: '',\n  id: '',\n};\n\nexport default memo<Props>(TitleSubHeader);\n","import { useEffect } from 'react';\n\n/**\n * Function: useOnClickOutside\n * A custom hook that use to trigger an event if have action click outside a ref's element.\n * @param {object} ref: a reference of element that we need to detect\n * @param {function} handler: a function that used to trigger event if have click event outside of element\n */\nconst useClickOutside = (ref, handler, { ...rest }) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element\n      if (\n        !ref.current ||\n        ref.current.contains(event.target) ||\n        !rest.iconRef.current ||\n        rest.iconRef.current.contains(event.target)\n      ) {\n        return;\n      }\n\n      // Fire event if clicking outside ref's element\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n    };\n  }, [ref, handler, rest.iconRef]);\n};\n\nexport default useClickOutside;\n","import { useEffect, useState } from 'react';\n\n/**\n * Function: useDebounce\n * @param {string} value \n * @param {number} delay \n * @returns \n */\n\nconst useDebounce = (value, delay) => {\n\n    // State and setter for debounce value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        // update debounced value after delay\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        // cancel the timeout if value changes\n        return () => {\n            clearTimeout(handler);\n        }\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;","// @flow\nimport React, { memo } from 'react';\n\ntype Props = {\n  onClick: Function,\n  options?: Array<{id: number, value: number, label: string}>\n};\n\nconst AutoSuggest = ({ onClick, options = [] }: Props) => {\n  return (\n    <div className=\"auto-suggest\">\n      {options\n        .map((option, index) => (\n          <p\n            className=\"auto-suggest__item\"\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            onClick={() => onClick(option.label)}\n            role=\"presentation\"\n          >\n            {option.label}\n          </p>\n        ))}\n    </div>\n  );\n};\n\nAutoSuggest.defaultProps = {\n  options: [],\n};\n\nexport default memo<Props>(AutoSuggest);\n","// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport AutoSuggest from './AutoSuggest';\n\ntype Props = {\n  placeholder?: string,\n  handleIconClick?: Function,\n  customClass?: string,\n  value?: string,\n  onChange?: Function,\n  setSearchTerm?: Function,\n  options?: Array<{id: number, value: number, label: string}>,\n  handleKeyDown: Function,\n  isSpinner?: boolean,\n};\n\nconst Search = ({\n  placeholder,\n  handleIconClick = () => {},\n  customClass = '',\n  value = '',\n  onChange = () => {},\n  setSearchTerm = () => {},\n  options = [],\n  handleKeyDown,\n  isSpinner = false\n}: Props) => {\n  const [display, setDisplay] = useState(false);\n\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      window.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n\n  const updateSearchInput = (searchValue) => {\n    setSearchTerm(searchValue);\n    setDisplay(false);\n  };\n\n  return (\n    <div ref={wrapperRef} className={`search ${customClass}`}>\n      <input\n        className=\"search__input\"\n        onClick={() => setDisplay(true)}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onKeyPress={(e) => handleKeyDown(e)}\n      />\n\n      {isSpinner && <div className=\"spinner\" />}\n\n      <img\n        src={images.icon_search}\n        alt=\"Icon Search\"\n        className=\"search__icon\"\n        onClick={handleIconClick}\n        role=\"presentation\"\n      />\n      {(display && options.length) ? <AutoSuggest search={value} onClick={updateSearchInput} options={options} /> : null}\n    </div>\n  );\n};\n\nSearch.defaultProps = {\n  placeholder: '',\n  customClass: '',\n  value: '',\n  onChange: () => {},\n  setSearchTerm: () => {},\n  handleIconClick: () => {},\n  options:[],\n  isSpinner: false,\n};\n\nexport default memo<Props>(Search);\n","// @flow\nimport React from 'react';\n\ntype Props = {\n  isShow?: boolean,\n  wrapperRef: any,\n};\nconst ModalEvent = ({ isShow = false, wrapperRef }: Props) => {\n  return (\n    <div\n      className={`modal__event ${isShow ? 'show-modal-event' : ''}`}\n      ref={wrapperRef}\n    >\n      <div className=\"modal__event-title\">이벤트 알림</div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n    </div>\n  );\n};\n\nModalEvent.defaultProps = {\n  isShow: false,\n};\n\nexport default ModalEvent;\n","/* eslint-disable react-hooks/exhaustive-deps */\n// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport useClickOutside from 'customHooks/useClickOutSide';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useDebounce from 'customHooks/useDebounce';\nimport { getListCompany, getListPosition } from 'modules/main/redux';\nimport Search from '../Search';\nimport SelectDropdown from '../Select';\nimport ModalEvent from './ModalEvent';\n\ntype Props = {\n  isSearch?: boolean,\n  isSelect?: boolean,\n  eventCount?: number,\n};\n\nconst Header = ({\n  isSearch = false,\n  isSelect = false,\n  eventCount = 0,\n}: Props) => {\n  const dispatch = useDispatch();\n  const { listPositions, listCompany, isSpinner } = useSelector(\n    (state) => state?.main\n  );\n  const [optionDropdown, setOptionDropdown] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const wrapperRef = useRef(null);\n  const iconRef = useRef(null);\n\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      dispatch(getListCompany({ keyword: debouncedSearchTerm }));\n      dispatch(getListPosition({ keyword: debouncedSearchTerm }));\n    }\n  }, [debouncedSearchTerm]);\n\n  // set option dropdown value when listposition != [];\n  useEffect(() => {\n    setOptionDropdown(listPositions[0]);\n  }, [listPositions]);\n\n  // Handle Icon search Click\n  const handleIconClick = () => {\n    console.log(searchTerm);\n  };\n\n  // Handle event press key enter search\n  const handleKeyDownSearch = (e) => {\n    if (e.key === 'Enter') {\n      console.log(searchTerm);\n    }\n  };\n\n  // when input search change set value\n  const handleSearchChange = (e) => {\n    const { value } = e.target;\n    setSearchTerm(value);\n  };\n\n  // handle click outside event\n  useClickOutside(\n    wrapperRef,\n    () => {\n      if (isShow) {\n        setIsShow(false);\n      }\n    },\n    { iconRef }\n  );\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        {isSearch ? (\n          <Search\n            placeholder=\"회사명이나 구역명으로 검색해보세요.\"\n            value={searchTerm}\n            onChange={handleSearchChange}\n            setSearchTerm={setSearchTerm}\n            options={[...listPositions, ...listCompany]}\n            handleIconClick={handleIconClick}\n            handleKeyDown={handleKeyDownSearch}\n            isSpinner={isSpinner}\n          />\n        ) : (\n          ''\n        )}\n        {isSelect ? (\n          <SelectDropdown\n            placeholder=\"List Selects\"\n            listItem={listPositions}\n            onChange={(ops) => {\n              setOptionDropdown(ops);\n            }}\n            option={optionDropdown}\n            disabled={false}\n            isSearchable={false}\n            blurInputOnSelect={false}\n            customClass=\"header__select\"\n          />\n        ) : (\n          ''\n        )}\n      </div>\n      <div className=\"header__right\">\n        <div className=\"header__event\">\n          <img\n            src={images.icon_event}\n            alt=\"Icon Event\"\n            className=\"header__icon\"\n            onClick={() => setIsShow(!isShow)}\n            role=\"presentation\"\n            ref={iconRef}\n          />\n          {eventCount > 0 ? (\n            <span className=\"header__notification\">eventCount</span>\n          ) : (\n            ''\n          )}\n        </div>\n\n        <div className=\"header__label-event\">\n          <span className=\"header__label-content\">이벤트발생</span>\n\n          {/* Modal event */}\n\n          <ModalEvent isShow={isShow} wrapperRef={wrapperRef} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  eventCount: 0,\n};\n\nexport default memo<Props>(Header);\n","import IMAGES from 'themes/images';\nimport ROUTERS from './routers';\n\nexport const DASHBOARD = {\n  id: 1,\n  label: '실증단지',\n  icon: IMAGES.iconGraph,\n  to: ROUTERS.ROOT,\n  items: [\n    {\n      id: 1,\n      name: '대시보드',\n      sub: [\n        {\n          id: 1,\n          name: '통합 대시보드',\n          to: ROUTERS.ROOT,\n        },\n        {\n          id: 2,\n          name: '구역 대시보드',\n          to: ROUTERS.DASHBOARD_AREA,\n        },\n        {\n          id: 3,\n          name: '업체 대시보드',\n          to: ROUTERS.DASHBOARD_COMPANY,\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '현황',\n      sub: [\n        {\n          id: 1,\n          name: '발전 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.STATUS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.STATUS_COMPANY_BY_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_AREA,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: '통계',\n      sub: [\n        {\n          id: 1,\n          name: '발전 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_AREA,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nexport const SETUP = {\n  id: 2,\n  label: '기기 관리',\n  icon: IMAGES.setup,\n  items: [\n    { id: 1, name: '계정 관리', to: '/accounts' },\n    { id: 2, name: '기기 관리', to: '/devices' },\n  ],\n};\n\nexport const MOCKUP = {\n  id: 1,\n  label: '실증테스트',\n  icon: IMAGES.mockUp,\n  items: [\n    {\n      id: 1,\n      name: '테스트(목업)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.TEST_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_MOCKUP_STATUS,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_MOCKUP_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '테스트(실증단지)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.SOLAR_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n  itemSub: {\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listNestSub: Array<{\n    id: any,\n    to: string,\n    name: string,\n  }>,\n  isActiveNestSub: boolean,\n  handleClickItemSub: Function,\n  location: {\n    pathname: string,\n  },\n};\n\nconst Submenu = ({\n  itemSub,\n  listNestSub,\n  isActiveNestSub,\n  handleClickItemSub,\n  location,\n}: Props) => {\n  const [nestSubClicking, setNestSubClicking] = useState({});\n\n  const handleClickNestSub = (e, item) => {\n    e.stopPropagation();\n    setNestSubClicking(item);\n  };\n\n  const renderNestedSub =\n    listNestSub &&\n    listNestSub.length > 0 &&\n    listNestSub.map((item) => {\n      const activeNestItem =\n        item.name === nestSubClicking.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <li\n          className=\"item\"\n          onClick={(e) => handleClickNestSub(e, item)}\n          tabIndex={0}\n          role=\"menuitem\"\n          onKeyPress={() => {}}\n          key={item.id}\n        >\n          <Link\n            to={item?.to}\n            className={`item__link item-link-nest-sub ${\n              activeNestItem ? 'active-link' : ''\n            }`}\n          >\n            <p className=\"item__link__label item-link-label-nest-sub\">\n              {item.name}\n            </p>\n          </Link>\n        </li>\n      );\n    });\n\n  const { to, name, sub } = itemSub;\n\n  return (\n    <li\n      className=\"item\"\n      onClick={(e) => handleClickItemSub(e, itemSub, isActiveNestSub)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to}\n        className={`item__link ${\n          isActiveNestSub ? 'active' : ''\n        } item-link-sub ${isActiveNestSub && !sub ? 'active-link' : ''}`}\n      >\n        <p className=\"item__link__label item-link-label-sub\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n\n      <ul className={`menu__listsub ${isActiveNestSub ? 'open' : ''}`}>\n        {renderNestedSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(Submenu);\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { setNestSubClicking } from 'commons/redux';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport Submenu from './Submenu';\n\ntype Props = {\n  item: {\n    id: number,\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listSub: Array<{\n    id: number,\n    name: string,\n    to: string,\n    sub: Array<{}>,\n  }>,\n  handleClickItem: Function,\n  isActive: boolean,\n  location: {\n    pathname: string,\n  },\n};\n\nconst MenuItem = ({\n  item,\n  listSub,\n  handleClickItem,\n  isActive,\n  location,\n}: Props) => {\n  const dispatch = useDispatch();\n\n  const subMenuClicking = useSelector((state) => state.commons.subMenuClicking);\n  const { to, name, sub } = item;\n  const [listNestSub, setListNestSub] = useState(subMenuClicking?.sub);\n  const [activeSub, setActiveSub] = useState(false);\n\n  const handleClickItemSub = (e, itemSub, active) => {\n    e.stopPropagation();\n    setActiveSub(active);\n    dispatch(setNestSubClicking(itemSub));\n    setListNestSub(itemSub.sub);\n    if (itemSub.name === subMenuClicking.name && active) {\n      setNestSubClicking({});\n    }\n  };\n\n  const renderSub =\n    listSub &&\n    listSub.length > 0 &&\n    listSub.map((itemSub) => {\n      const isActiveNestSub =\n        subMenuClicking.name === itemSub.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <Submenu\n          key={itemSub.id}\n          itemSub={itemSub}\n          nestSub={itemSub.sub}\n          handleClickItemSub={handleClickItemSub}\n          listNestSub={listNestSub}\n          isActiveNestSub={isActiveNestSub}\n          location={location}\n        />\n      );\n    });\n\n  return (\n    <li\n      className=\"item\"\n      onClick={() => handleClickItem(item, isActive)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to || '#'}\n        className={`item__link ${isActive ? 'active' : ''} ${\n          isActive && !sub ? 'active-link' : ''\n        }`}\n      >\n        <p className=\"item__link__label\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n      <ul className={`menu__listsub ${isActive || activeSub ? 'open' : ''}`}>\n        {renderSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(MenuItem);\n","// @flow\n// libs\nimport React, { useState, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DASHBOARD, SETUP, MOCKUP } from 'constants/listMenu';\nimport { setMenuClicking, setNestSubClicking } from 'commons/redux';\nimport MenuItem from './MenuItem';\nimport IMAGES from 'themes/images';\nimport { Button } from 'commons/components/Button';\n\ntype Props = {\n  location: {\n    pathname: string,\n  },\n};\n\nconst Menu = ({ location }: Props) => {\n  const dispatch = useDispatch();\n  const menuClicking = useSelector((state) => state?.commons?.menuClicking);\n  const [listSub, setListSub] = useState(menuClicking?.sub);\n  const handleClickItem = (item, active) => {\n    setListSub(item.sub);\n\n    dispatch(setMenuClicking(item));\n\n    if (item.name === menuClicking.name && active) {\n      dispatch(setMenuClicking({}));\n    }\n    if (item.id !== menuClicking?.id) {\n      dispatch(setNestSubClicking({}));\n    }\n  };\n\n  const renderMenuList = (listMenu) => {\n    return listMenu.items.map((item) => {\n      const isActive =\n        menuClicking.name === item.name || location.pathname.includes(item.to);\n      return (\n        <MenuItem\n          key={item.id}\n          item={item}\n          listSub={listSub}\n          handleClickItem={handleClickItem}\n          menuClicking={menuClicking}\n          isActive={isActive}\n          location={location}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"menu\">\n      <h1 className=\"menu__head\">실증단지</h1>\n      <div className=\"wrapper-menu\">\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={DASHBOARD?.icon} alt=\"menu\" />\n            <span>{DASHBOARD?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(DASHBOARD)}</ul>\n\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={MOCKUP?.icon} alt=\"menu\" />\n            <span>{MOCKUP?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(MOCKUP)}</ul>\n\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={SETUP?.icon} alt=\"menu\" />\n            <span>{SETUP?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(SETUP)}</ul>\n        <div className=\"logout\">\n          <div className=\"name-user\">마스터님</div>\n          <Button customClass=\"btn-logout\">\n            <img src={IMAGES.btn_logout} alt=\"\" />\n            <div>로그아웃</div>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(memo<Props>(Menu));\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useRef } from 'react';\nimport useClickOutside from 'customHooks/useClickOutSide';\n// import Header from '../../components/Header';\nimport Loading from 'commons/components/Loading';\nimport Header from 'commons/components/Header';\n\nimport SidebarMenu from '../Menu';\n\n\ntype Props = {\n  children: React.AbstractComponent<{}>,\n  isSearch?: boolean,\n  isSelect?: boolean,\n  isProcessing?: boolean,\n};\n\nexport const MainLayout = ({\n  children,\n  isSearch = false,\n  isSelect = false,\n  isProcessing = false,\n}: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const refMenu = useRef(null);\n  const iconRef = useRef(null);\n  const mainContent = useRef(null);\n\n  useClickOutside(\n    refMenu,\n    () => {\n      if (isOpen) {\n        setIsOpen(false);\n      }\n    },\n    { iconRef }\n  );\n  let classHeight = '';\n  if (window.innerHeight < 900) {\n    classHeight = 'heightMenu';\n  }\n\n  let showHeader;\n  if (isSearch) showHeader = <Header isSearch />;\n  else if (isSelect) showHeader = <Header isSelect />;\n  else showHeader = <Header />;\n\n  return (\n    <>\n      {isProcessing && <Loading />}\n      <div className={`wrapper-content ${isOpen ? 'open' : ''}`}>\n        <div className=\"wrapper-mobile\">\n          <div\n            className={`d-mobile btn-menu  ${isOpen ? 'show' : ''}`}\n            onClick={() => {\n              setIsOpen(!isOpen);\n            }}\n            tabIndex={0}\n            role=\"menuitem\"\n            onKeyPress={() => {}}\n            ref={iconRef}\n          >\n            <span className=\"icon\" />\n          </div>\n        </div>\n        <div className={`sidebar ${isOpen ? 'show' : ''} ${classHeight}`}>\n          <SidebarMenu innerRef={refMenu} />\n        </div>\n        <div className=\"main-content\" ref={mainContent}>\n          {showHeader}\n          <div className=\"content\">\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMainLayout.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  isProcessing: false,\n};\n\nexport default MainLayout;\n","// @flow\n// libs\nimport React, { memo } from 'react';\nimport images from 'themes/images';\n\ntype Props = {\n  title: string,\n  onClick?: Function,\n  className?: string,\n  id?: string,\n  descSub?: string,\n};\n\nexport const TitleHeader = ({\n  title,\n  onClick = () => {},\n  className = '',\n  id,\n  descSub = '',\n}: Props) => {\n  return (\n    <div id={id} className={`wrap-title ${className}`}>\n      <div\n        className=\"wrap-title__header\"\n        onClick={onClick}\n        onKeyPress={() => {}}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <img src={images.icon_title_header} alt=\"\" />\n        <div className=\"wrap-title__header__name\">\n          {title}\n          <span>{descSub}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTitleHeader.defaultProps = {\n  className: '',\n  onClick: () => {},\n  id: '',\n  descSub: '',\n};\n\nexport default memo<Props>(TitleHeader);\n","/* eslint-disable no-nested-ternary */\n// @flow\n// libs\nimport React, { memo } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Button from 'commons/components/Button';\nimport images from 'themes/images';\n\ntype Props = {\n  title?: string,\n  children: any,\n  animation?: boolean,\n  isOpen: boolean,\n  size?: string,\n  handleClose: Function,\n  customClass?: string,\n  isShowIconClose?: boolean,\n  isShowHeader?: boolean,\n  isShowFooter?: boolean,\n  isShowTwoBtn?: boolean,\n  customClassButton?: string,\n  classNameBtnLeft?: string,\n  textBtnLeft?: string,\n  classNameBtnRight?: string,\n  textBtnRight?: string,\n  handleSubmit?: Function,\n  isDisabledButton?: boolean,\n  handleCloseIcon?: Function,\n};\n\nexport const ModalPopup = ({\n  title = '',\n  children,\n  animation = false,\n  isOpen,\n  size,\n  handleClose,\n  customClass,\n  isShowIconClose,\n  isShowHeader,\n  isShowFooter,\n  isShowTwoBtn,\n  customClassButton = '',\n  classNameBtnLeft = '',\n  textBtnLeft = '',\n  classNameBtnRight = '',\n  textBtnRight = 'OK',\n  handleSubmit = () => {},\n  isDisabledButton,\n  handleCloseIcon = () => {},\n}: Props) => (\n  <Modal\n    animation={animation}\n    onHide={() => {\n      return true;\n    }}\n    show={isOpen}\n    size={size}\n    className={customClass}\n  >\n    {isShowIconClose && (\n      <div\n        className=\"modal-content__iconClose\"\n        onClick={handleCloseIcon}\n        role=\"button\"\n        tabIndex={0}\n        onKeyUp={handleCloseIcon}\n      >\n        <img src={images.icon_close} alt=\"\" />\n      </div>\n    )}\n\n    {isShowHeader && <h3 className=\"modal-title\">{title}</h3>}\n\n    <Modal.Body>\n      {!isShowHeader ? (\n        <div className=\"modal-body__no-header\">{children}</div>\n      ) : (\n        <div className=\"modal-body__has-header\">{children}</div>\n      )}\n    </Modal.Body>\n    {isShowFooter && (\n      <Modal.Footer>\n        {!isShowTwoBtn ? (\n          <Button\n            type=\"button\"\n            customClass={customClassButton}\n            onClick={handleClose}\n          >\n            {textBtnRight}\n          </Button>\n        ) : (\n          <div className=\"group-button\">\n            <Button\n              type=\"button\"\n              customClass={`button--half ${customClassButton} ${classNameBtnLeft}`}\n              onClick={handleSubmit}\n              isDisabled={isDisabledButton}\n            >\n              {textBtnLeft}\n            </Button>\n            <Button\n              type=\"button\"\n              customClass={`button--half ${customClassButton} ${classNameBtnRight}`}\n              onClick={handleClose}\n            >\n              {textBtnRight}\n            </Button>\n          </div>\n        )}\n      </Modal.Footer>\n    )}\n  </Modal>\n);\n\nModalPopup.defaultProps = {\n  title: '',\n  animation: false,\n  size: '',\n  customClass: '',\n  isShowIconClose: false,\n  isShowHeader: false,\n  isShowFooter: false,\n  isShowTwoBtn: false,\n  customClassButton: '',\n  classNameBtnLeft: '',\n  textBtnLeft: '',\n  classNameBtnRight: '',\n  textBtnRight: 'OK',\n  handleSubmit: () => {},\n  isDisabledButton: false,\n  handleCloseIcon: () => {},\n};\nexport default memo<Props>(ModalPopup);\n","// @flow\n// libs\nimport React, { memo } from 'react';\n\ntype Props = {\n  name?: string,\n  onChange: Function,\n  disabled?: boolean,\n  labelRadio: string,\n  isChecked: boolean,\n  id?: string,\n};\n\nexport const Radio = ({\n  labelRadio,\n  name = '',\n  isChecked,\n  onChange,\n  id = '',\n  disabled = false,\n}: Props) => {\n  return (\n    <div className=\"wrap-radio\">\n      <label className=\"custom-radio d-flex\" htmlFor={id}>\n        <input\n          type=\"radio\"\n          checked={`${isChecked ? 'checked' : ''}`}\n          name={name}\n          onChange={(e) => onChange(e)}\n          id={id}\n          disabled={disabled}\n        />\n        <span className=\"checkmark\" />\n        <span className=\"label\">{labelRadio}</span>\n      </label>\n    </div>\n  );\n};\n\nRadio.defaultProps = {\n  name: '',\n  disabled: false,\n  id: '',\n};\n\nexport default memo<Props>(Radio);\n","const REGEX = {\n  EMAIL: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  PASSWORD: /^(?=.*[a-zA-Z])([A-Z]?)((?=.*\\d)([!@#$%^&*()'\"<>:;.,=-]?))(?!\\s).{6,13}$/,\n  // PASSWORD: /^(?=.*[a-z])((?=.*\\d)|(?=.*[!@#$%^&*()'\"]))[A-Za-z\\d!@#$%^&*()'\"](?!\\s).{6,}$/,\n  NUMBER: /^[-]?(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\n  PHONE_NUMBER: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/,\n  // USER_NAME: /^[0-9a-zA-Z]{6,20}$\\S*$/\n  USER_NAME: /^[0-9a-zA-Z]{3,20}$\\S*$/,\n  FLOAT_INPUT: /^[0-9.]*$/,\n  VALIDATE_PASSWORD: /^[0-9a-zA-Z]{4,20}$\\S*$/,\n};\n\nexport default REGEX;\n","const ERROR_MESSAGE = {\n  EMAIL_FORMAT: '이메일 형식이 일치하지 않습니다.',\n  EMAIL_REQUIRED: 'Email does not exist.',\n  NICK_NAME_REQUIRED: 'Nickname does not exist.',\n  PASSWORD_REQUIRED: 'Password does not exist.',\n  PASSWORD_FORMAT: `Up to 13 digits, including one special character. It doesn't fit`,\n  PASSWORD_NOT_MATCH: `The password you want to change does not match.`,\n  PASSWORD_CONFIRM_REQUIRED: 'Password confirm does not exist.',\n  EMAIL_NOT_EXSIST: 'Please enter your email.',\n  PASSWORD_INVALID: `Invalid password`,\n  ENQUIRY_TYPE_REQUIRED: 'Enquiry Type does not exist.',\n  TITLE_REQUIRED: 'Title does not exist.',\n  CONTENT_REQUIRED: 'Content does not exist.',\n  VERIFY_EMAIL:\n    'Email authentication is not complete.<br /> Would you like me to resend you<br /> the authentication email?',\n  UN_AUTHENTICATED: 'Unauthenticated.',\n  PHONE_NUMBER: '숫자 11자리를 입력해주세요.',\n  REQUIRED: '이 필드는 필수입니다.',\n};\n\nexport default ERROR_MESSAGE;\n","/* eslint-disable no-plusplus */\n/* eslint-disable prefer-template */\n// @flow\nimport REGEX from '../constants/regexs';\nimport ERROR_MESSAGE from '../constants/errorMsg';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Validator = (objectVal: Object, validate: Object) => {\n  const error = {};\n  const keys = Object.keys(objectVal);\n  for (let i = 0, { length } = keys; i < length; i += 1) {\n    const key = keys[i];\n    const rules = validate[key];\n    const value = objectVal[key];\n    let errorMsg = '';\n\n    for (let j = 0; j < rules.length; j += 1) {\n      switch (rules[j]) {\n        case 'required':\n          if (value === '' || value === null || value === undefined) {\n            errorMsg = ERROR_MESSAGE.REQUIRED;\n          }\n          break;\n        case 'email':\n          if (!REGEX.EMAIL.test(value)) {\n            errorMsg = ERROR_MESSAGE.EMAIL_FORMAT;\n          }\n          break;\n\n        case 'phoneNumber':\n          if (!REGEX.PHONE_NUMBER.test(value)) {\n            errorMsg = ERROR_MESSAGE.PHONE_NUMBER;\n          }\n          break;\n        case 'password':\n          if (!REGEX.PASSWORD.test(value)) {\n            errorMsg = ERROR_MESSAGE.PASSWORD_FORMAT;\n          }\n          break;\n        default:\n          break;\n      }\n      if (errorMsg) {\n        error[key] = errorMsg;\n      }\n    }\n  }\n\n  return error;\n};\n","// @flow\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport MainLayout from 'layout/MainLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TitleHeader from 'commons/components/TitleHeader';\nimport TitleSubHeader from 'commons/components/TitleHeader/titleSub';\nimport SelectDropdown from 'commons/components/Select';\nimport ModalPopup from 'commons/components/Modal';\nimport Radio from 'commons/components/Radio';\nimport Button from 'commons/components/Button';\nimport { Validator } from 'helpers/validator';\nimport * as SignInAction from 'modules/accounts/redux';\nimport { useHistory } from 'react-router-dom';\nimport ROUTERS from 'constants/routers';\n\nconst StatusByAreaCompanyEdit = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { isProcessing, listCompany } = useSelector((state) => state?.account);\n  const [modalConform, setModalConform] = useState({\n    isShow: false,\n    content: '현황을 등록하시겠습니까?',\n  });\n\n  const [dataSubmit, setDataSubmit] = useState({\n    typeEvent: 'event',\n    content: '월 정기 설비 진행',\n    company: null,\n  });\n  const [error, setError] = useState({\n    content: '',\n    company: '',\n  });\n\n  useEffect(() => {\n    dispatch(SignInAction.getListCompany());\n    // eslint-disable-next-line\n  }, []);\n\n  const { typeEvent, content, company } = dataSubmit;\n  const handleSubmit = () => {\n    console.log('REGISTER');\n    let validation = {};\n    const rules = {\n      content: ['required'],\n      company: ['required'],\n    };\n    const dataValidate = {\n      content,\n      company: company && company.label,\n    };\n    validation = Validator(dataValidate, rules);\n    if (Object.keys(validation).length > 0) {\n      setError({\n        ...error,\n        content: validation && validation.content,\n        company: validation && validation.company,\n      });\n      setModalConform({\n        ...modalConform,\n        isShow: false,\n      });\n      return;\n    }\n    // Call api register event\n    history.push(ROUTERS.TEST_MOCKUP_OPERATION);\n  };\n\n  const handleChange = (value, name) => {\n    switch (name) {\n      case 'company':\n        setError({\n          ...error,\n          company: '',\n        });\n        setDataSubmit({\n          ...dataSubmit,\n          company: value,\n          inverter: '',\n        });\n        break;\n      default:\n        setDataSubmit({\n          ...dataSubmit,\n          [name]: value,\n        });\n        setError({\n          ...error,\n          [name]: '',\n        });\n        break;\n    }\n  };\n\n  return (\n    <MainLayout isProcessing={isProcessing}>\n      <div className=\"content-wrap\">\n        <TitleHeader\n          title=\"실증단지 운영 현황\"\n          descSub=\"설비 이력, 보수 이력을 등록하실 수 있습니다.\"\n        />\n        <TitleSubHeader title=\"이벤트 상세 내용\" />\n        <div className=\"table-form\">\n          <div className=\"item-row d-flex\">\n            <div className=\"colum-left\">분류</div>\n            <div className=\"colum-right\">\n              <div className=\"group-radio\">\n                <Radio\n                  onChange={() =>\n                    setDataSubmit({\n                      ...dataSubmit,\n                      typeEvent: 'event',\n                    })\n                  }\n                  isChecked={typeEvent === 'event'}\n                  name=\"typeEvent\"\n                  labelRadio=\"설비 이력\"\n                  id=\"event\"\n                />\n                <Radio\n                  onChange={() =>\n                    setDataSubmit({\n                      ...dataSubmit,\n                      typeEvent: 'event',\n                    })\n                  }\n                  isChecked={typeEvent === 'history'}\n                  labelRadio=\"보수 이력\"\n                  name=\"typeEvent\"\n                  id=\"history\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"item-row d-flex\">\n            <div className=\"colum-left\">모듈정보</div>\n            <div className=\"colum-right\">\n              <div className=\"item-role\">\n                <div className=\"group-select w-200\">\n                  <SelectDropdown\n                    placeholder=\"모듈 선택\"\n                    listItem={listCompany}\n                    onChange={(option) => handleChange(option, 'company')}\n                    option={company || null}\n                    noOptionsMessage={() => '옵션 없음'}\n                    errorMsg={error?.company}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"item-row d-flex mh-300\">\n            <div className=\"colum-left\">내용</div>\n            <div className=\"colum-right\">\n              <textarea\n                placeholder=\"\"\n                name=\"content\"\n                rows=\"12\"\n                maxLength=\"5000\"\n                className=\"form-control\"\n                value={content}\n                onChange={(e) => handleChange(e.target.value, 'content')}\n              />\n              {error?.content && (\n                <p className=\"input__error-msg\">{error?.content}</p>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"group-btn-bottom\">\n          <Button\n            onClick={() =>\n              setModalConform({\n                ...modalConform,\n                isShow: true,\n              })\n            }\n          >\n            수정 완료\n          </Button>\n          <Button onClick={() => history.push(ROUTERS.TEST_MOCKUP_OPERATION)}>\n            취소\n          </Button>\n        </div>\n      </div>\n\n      <ModalPopup\n        isOpen={modalConform.isShow}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() =>\n          setModalConform({\n            ...modalConform,\n            isShow: false,\n          })\n        }\n        handleClose={() =>\n          setModalConform({\n            ...modalConform,\n            isShow: false,\n          })\n        }\n        textBtnLeft=\"확인\"\n        textBtnRight=\"취소\"\n        isShowTwoBtn\n        customClassButton=\"btn-custom\"\n        handleSubmit={() => handleSubmit()}\n      >\n        {modalConform?.content}\n      </ModalPopup>\n    </MainLayout>\n  );\n};\n\nexport default StatusByAreaCompanyEdit;\n"],"sourceRoot":""}