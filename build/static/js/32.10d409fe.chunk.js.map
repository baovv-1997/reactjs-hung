{"version":3,"sources":["commons/components/Select/index.js","commons/components/Modal/index.js","constants/listKey.js","commons/components/Radio/index.js","commons/components/Input/index.js","constants/regexs.js","constants/errorMsg.js","helpers/validator.js","modules/accounts/components/ItemDevice.js","modules/accounts/components/signIn.js","modules/accounts/components/index.js"],"names":["SelectDropdown","placeholder","errorMsg","label","disabled","isSearchable","onBlur","onChange","innerRef","option","noOptionsMessage","listOptionString","customClass","request","noLabel","listItem","useState","isActive","setIsActive","className","length","components","DropdownIndicator","props","selectProps","menuIsOpen","ref","value","options","map","item","id","name","blurInputOnSelect","isDisabled","defaultProps","ModalPopup","title","children","animation","isOpen","size","handleClose","isShowIconClose","isShowHeader","isShowFooter","isShowTwoBtn","customClassButton","classNameBtnLeft","textBtnLeft","classNameBtnRight","textBtnRight","handleSubmit","isDisabledButton","handleCloseIcon","onHide","show","onClick","role","tabIndex","onKeyUp","src","images","icon_close","alt","Body","Footer","type","memo","listType","listPaginationType","Radio","labelRadio","isChecked","htmlFor","checked","e","Input","readOnly","onBlurWrapper","onFocusWrapper","onClickWrapper","customClassName","customClassWrap","customClassLabel","onFocus","onKeyPress","onPaste","variant","isShowIcon","deleteValue","pattern","inputMode","maxLength","autocomplete","autoFocus","autoCapitalize","autoComplete","IMAGES","REGEX","EMAIL","PASSWORD","NUMBER","PHONE_NUMBER","USER_NAME","FLOAT_INPUT","VALIDATE_PASSWORD","ERROR_MESSAGE","EMAIL_FORMAT","EMAIL_REQUIRED","NICK_NAME_REQUIRED","PASSWORD_REQUIRED","PASSWORD_FORMAT","PASSWORD_NOT_MATCH","PASSWORD_CONFIRM_REQUIRED","EMAIL_NOT_EXSIST","PASSWORD_INVALID","ENQUIRY_TYPE_REQUIRED","TITLE_REQUIRED","CONTENT_REQUIRED","VERIFY_EMAIL","UN_AUTHENTICATED","REQUIRED","Validator","objectVal","validate","error","keys","Object","i","key","rules","j","undefined","test","ItemDevice","handleChangeOptionCompany","optionDevice","listCompany","listArea","listInverter","handleRemove","handleAddListDevice","idx","isAccountPage","Select","icon_next","company","area","inverter","Button","dataRegister","handleKeyDown","handleChangeRegister","texTerror","listItemDevice","username","email","phone","person","renderListItemDevice","index","target","isNumberKey","isOnPasteNumber","SignUp","history","useHistory","useSelector","state","account","isProcessing","token","dispatch","useDispatch","password","dataLogin","setDataLogin","dataRegisterDefault","passwords","itemDeviceDefault","Math","random","setDataRegister","setError","isModalRegisterSuccess","setIsModalRegisterSuccess","isShowModalRegister","setIsShowModalRegister","isShow","content","modalLogin","setModalLogin","setListItemDevice","useEffect","SignInAction","API","setHeader","push","ROUTERS","ROOT","handleChange","handleRegisterSubmit","validation","dataValidate","checkValidator","filter","listItemDevices","dataSubmit","inverter_ids","Loading","Modal","itemChange","find","listItemChange","listItemCompany","listItemArea","listItemChange2","per_page","com_id","pos_id","itemRemove","removedItems"],"mappings":"2JAyBMA,EAAiB,SAAC,GAgBV,IAAD,IAfXC,mBAeW,MAfG,GAeH,MAdXC,gBAcW,MAdA,GAcA,MAbXC,aAaW,MAbH,GAaG,MAZXC,gBAYW,aAXXC,oBAWW,aAVXC,cAUW,MAVF,KAUE,MATXC,gBASW,MATA,aASA,MARXC,gBAQW,MARA,KAQA,MAPXC,cAOW,MAPF,GAOE,MANXC,wBAMW,MANQ,aAMR,MALXC,wBAKW,MALQ,GAKR,MAJXC,mBAIW,MAJG,GAIH,MAHXC,eAGW,aAFXC,eAEW,SADXC,EACW,EADXA,SACW,EACqBC,oBAAS,GAD9B,mBACJC,EADI,KACMC,EADN,KAWX,OACE,yBACEC,UAAS,0BAAqBP,EAAYQ,OAAS,EAAIR,EAAc,OAElET,GACD,uBAAGgB,UAAU,gBACVhB,EACAU,GAAW,0BAAMM,UAAU,WAAhB,MAGhB,yBAAKA,UAAS,qBAAgBF,EAAW,OAAS,KAChD,kBAAC,IAAD,CACEhB,YAAaA,EACboB,WAAY,CAAEC,kBArBI,SAACC,GAAW,IAAD,EAEnC,OADAL,EAAW,OAACK,QAAD,IAACA,GAAD,UAACA,EAAOC,mBAAR,aAAC,EAAoBC,YAE9B,kBAAC,IAAWH,kBAAsBC,EAChC,yBAAKJ,UAAU,cAkBbO,IAAKlB,EACLmB,MAAOlB,GAAU,KACjBF,SAAUA,EACVG,iBAAkBA,EAElBkB,QACEd,EACIH,EAAiBkB,KAAI,SAACC,GAAD,MAAW,CAC9BC,GAAID,EAAKC,GACTJ,MAAOG,EAAKE,KACZ7B,MAAO2B,EAAKE,SAEdjB,EAENkB,kBAAmB3B,EACnB4B,WAAY9B,EACZC,aAAcA,KAGjBH,GAAY,uBAAGiB,UAAU,aAAajB,KAI7CF,EAAemC,aAAe,CAC5BlC,YAAa,GACbC,SAAU,GACVC,MAAO,GACPC,UAAU,EACVC,cAAc,EAEdS,SAAS,EACTR,OAAQ,KACRC,SAAU,aACVC,SAAU,KACVO,SAAU,GACVJ,iBAAkB,GAClBF,OAAQ,GACRC,iBAAkB,aAClBE,YAAa,GACbC,SAAS,GAEIb,O,iCC3Gf,+EA8BaoC,EAAa,SAAC,GAAD,QACxBC,aADwB,MAChB,GADgB,EAExBC,EAFwB,EAExBA,SAFwB,IAGxBC,iBAHwB,SAIxBC,EAJwB,EAIxBA,OACAC,EALwB,EAKxBA,KACAC,EANwB,EAMxBA,YACA9B,EAPwB,EAOxBA,YACA+B,EARwB,EAQxBA,gBACAC,EATwB,EASxBA,aACAC,EAVwB,EAUxBA,aACAC,EAXwB,EAWxBA,aAXwB,IAYxBC,yBAZwB,MAYJ,GAZI,MAaxBC,wBAbwB,MAaL,GAbK,MAcxBC,mBAdwB,MAcV,GAdU,MAexBC,yBAfwB,MAeJ,GAfI,MAgBxBC,oBAhBwB,MAgBT,KAhBS,MAiBxBC,oBAjBwB,MAiBT,aAjBS,EAkBxBC,EAlBwB,EAkBxBA,iBAlBwB,IAmBxBC,uBAnBwB,MAmBN,aAnBM,SAqBxB,kBAAC,IAAD,CACEf,UAAWA,EACXgB,OAAQ,WACN,OAAO,GAETC,KAAMhB,EACNC,KAAMA,EACNtB,UAAWP,GAEV+B,GACC,yBACExB,UAAU,2BACVsC,QAASH,EACTI,KAAK,SACLC,SAAU,EACVC,QAASN,GAET,yBAAKO,IAAKC,IAAOC,WAAYC,IAAI,MAIpCpB,GAAgB,wBAAIzB,UAAU,eAAekB,GAE9C,kBAAC,IAAM4B,KAAP,KACIrB,EAGA,yBAAKzB,UAAU,0BAA0BmB,GAFzC,yBAAKnB,UAAU,yBAAyBmB,IAK3CO,GACC,kBAAC,IAAMqB,OAAP,KACIpB,EASA,yBAAK3B,UAAU,gBACb,kBAAC,IAAD,CACEgD,KAAK,SACLvD,YAAW,uBAAkBmC,EAAlB,YAAuCC,GAClDS,QAASL,EACTlB,WAAYmB,GAEXJ,GAEH,kBAAC,IAAD,CACEkB,KAAK,SACLvD,YAAW,uBAAkBmC,EAAlB,YAAuCG,GAClDO,QAASf,GAERS,IAtBL,kBAAC,IAAD,CACEgB,KAAK,SACLvD,YAAamC,EACbU,QAASf,GAERS,MA0Bbf,EAAWD,aAAe,CACxBE,MAAO,GACPE,WAAW,EACXE,KAAM,GACN7B,YAAa,GACb+B,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,kBAAmB,GACnBC,iBAAkB,GAClBC,YAAa,GACbC,kBAAmB,GACnBC,aAAc,KACdC,aAAc,aACdC,kBAAkB,EAClBC,gBAAiB,cAEJc,mBAAYhC,I,iCCrI3B,wEAAMiC,EAAW,CACf,CACEtC,GAAI,EACJJ,MAAO,EACPxB,MAAO,4BAET,CACE4B,GAAI,EACJJ,MAAO,EACPxB,MAAO,qBAET,CACE4B,GAAI,EACJJ,MAAO,EACPxB,MAAO,gDAET,CACE4B,GAAI,EACJJ,MAAO,EACPxB,MAAO,qCAILmE,EAAqB,CACzB,CACEvC,GAAI,EACJJ,MAAO,EACPxB,MAAO,+BAET,CACE4B,GAAI,EACJJ,MAAO,GACPxB,MAAO,gCAET,CACE4B,GAAI,EACJJ,MAAO,GACPxB,MAAO,gCAET,CACE4B,GAAI,EACJJ,MAAO,GACPxB,MAAO,gCAET,CACE4B,GAAI,EACJJ,MAAO,GACPxB,MAAO,kC,iCC9CX,oBAYaoE,EAAQ,SAAC,GAOR,IANZC,EAMW,EANXA,WAMW,IALXxC,YAKW,MALJ,GAKI,EAJXyC,EAIW,EAJXA,UACAlE,EAGW,EAHXA,SAGW,IAFXwB,UAEW,MAFN,GAEM,MADX3B,gBACW,SACX,OACE,yBAAKe,UAAU,cACb,2BAAOA,UAAU,sBAAsBuD,QAAS3C,GAC9C,2BACEoC,KAAK,QACLQ,QAAO,UAAKF,EAAY,UAAY,IACpCzC,KAAMA,EACNzB,SAAU,SAACqE,GAAD,OAAOrE,EAASqE,IAC1B7C,GAAIA,EACJ3B,SAAUA,IAEZ,0BAAMe,UAAU,cAChB,0BAAMA,UAAU,SAASqD,MAMjCD,EAAMpC,aAAe,CACnBH,KAAM,GACN5B,UAAU,EACV2B,GAAI,IAGSqC,mBAAYG,I,iCC3C3B,4BAqCaM,EAAQ,SAAC,GA+BR,IAAD,IA9BX5E,mBA8BW,MA9BG,GA8BH,MA7BX0B,aA6BW,MA7BH,GA6BG,MA5BXzB,gBA4BW,MA5BA,GA4BA,MA3BXC,aA2BW,MA3BH,GA2BG,MA1BXC,gBA0BW,aAzBX0E,gBAyBW,aAxBXX,YAwBW,MAxBJ,OAwBI,MAvBX7D,cAuBW,MAvBF,aAuBE,MAtBXyE,qBAsBW,MAtBK,aAsBL,MArBXC,sBAqBW,MArBM,aAqBN,MApBXC,sBAoBW,MApBM,aAoBN,MAnBX1E,gBAmBW,MAnBA,aAmBA,MAlBX2E,uBAkBW,MAlBO,KAkBP,MAjBXC,uBAiBW,MAjBO,KAiBP,MAhBXC,wBAgBW,MAhBQ,KAgBR,MAfXC,eAeW,MAfD,aAeC,MAdXC,kBAcW,MAdE,aAcF,MAbXC,eAaW,MAbD,aAaC,MAZXC,eAYW,MAZD,UAYC,MAXXC,kBAWW,aAVXC,mBAUW,MAVG,aAUH,MATX1D,YASW,MATJ,GASI,MARXnB,eAQW,aAPXD,mBAOW,MAPG,GAOH,MANXJ,gBAMW,MANA,KAMA,MALXmF,gBAKW,MALD,GAKC,OAJXC,kBAIW,OAJC,GAID,QAHXC,kBAGW,OAHC,GAGD,QAFXC,qBAEW,OAFI,GAEJ,GADXC,GACW,EADXA,UAEA,OAEE,yBACE5E,UAAS,gBACK,YAAZqE,EAAA,2BAA4CA,GAAY,IAE1DlF,OAAQ,SAACsE,GAAD,OAAOG,EAAcH,IAC7BS,QAAS,SAACT,GAAD,OAAOI,EAAeJ,IAC/BnB,QAAS,SAACmB,GAAD,OAAOK,EAAeL,IAC/BhB,QAAS,gBAENzD,GACD,uBAAGgB,UAAS,UAAKiE,EAAL,kBACTjF,EACAU,GAAW,0BAAMM,UAAU,WAAhB,MAGhB,yBACEA,UAAS,qBAAgBgE,EAAhB,YACPM,EAAa,qBAAuB,KAGtC,2BACEtE,UAAS,uBACPP,EAAYQ,OAAS,EAAIR,EAAc,GADhC,YAGK,YAAZ4E,EAAA,iBAAkCA,GAAY,GAHvC,YAILN,GACJjF,YAAaA,EACb0B,MAAOA,EACPvB,SAAUA,EACV+D,KAAMA,EACNzC,IAAKlB,EACL+E,QAASA,EACTD,WAAYA,EACZR,SAAUA,EACVxE,OAAQ,SAACsE,GAAD,OAAOtE,EAAOsE,IACtBS,QAAS,SAACT,GAAD,OAAOS,EAAQT,IACxBrE,SAAU,SAACqE,GAAD,OAAOrE,EAASqE,IAC1BoB,eAAe,OACfJ,UAAWA,GACXC,UAAWA,GACX7D,KAAMA,EACN2D,QAASA,GACTM,aAAcH,GAEdC,UAAWA,KAEZN,GAAc9D,EAAMP,OAAS,GAC5B,yBACED,UAAU,2CACVsC,QAASiC,EACT9B,QAAS8B,EACThC,KAAK,SACLC,SAAU,GAEV,yBAAKE,IAAKqC,IAAOnC,WAAYC,IAAI,OAItC9D,GAAY,uBAAGiB,UAAU,oBAAoBjB,KAKpD2E,EAAM1C,aAAe,CACnBlC,YAAa,GACb0B,MAAO,GACPzB,SAAU,GACVC,MAAO,GACPC,UAAU,EACV0E,UAAU,EACVX,KAAM,OACN7D,OAAQ,aACRyE,cAAe,aACfC,eAAgB,aAChBC,eAAgB,aAChBI,QAAS,aACT9E,SAAU,aACV+E,WAAY,aACZC,QAAS,aACTK,UAAW,GACXC,UAAW,GACXL,QAAS,UACTN,gBAAiB,GACjBE,iBAAkB,GAClBD,gBAAiB,GACjBM,YAAY,EACZC,YAAa,aACb1D,KAAM,GACNnB,SAAS,EACTL,SAAU,KACVI,YAAa,GACb+E,QAAS,GACTG,aAAc,GACdC,WAAW,GAGE3B,mBAAYS,I,mECzK3B,IAYesB,EAZD,CACZC,MAAO,uJACPC,SAAU,2EAEVC,OAAQ,wCACRC,aAAc,qDAEdC,UAAW,0BACXC,YAAa,YACbC,kBAAmB,2BCWNC,EApBO,CACpBC,aAAc,2FACdC,eAAgB,wBAChBC,mBAAoB,2BACpBC,kBAAmB,2BACnBC,gBAAgB,mEAChBC,mBAAmB,kDACnBC,0BAA2B,mCAC3BC,iBAAkB,2BAClBC,iBAAiB,mBACjBC,sBAAuB,+BACvBC,eAAgB,wBAChBC,iBAAkB,0BAClBC,aACE,8GACFC,iBAAkB,mBAClBlB,aAAc,0EACdmB,SAAU,6DCVCC,EAAY,SAACC,EAAmBC,GAG3C,IAFA,IAAMC,EAAQ,GACRC,EAAOC,OAAOD,KAAKH,GAChBK,EAAI,EAAK7G,EAAW2G,EAAX3G,OAAiB6G,EAAI7G,EAAQ6G,GAAK,EAMlD,IALA,IAAMC,EAAMH,EAAKE,GACXE,EAAQN,EAASK,GACjBvG,EAAQiG,EAAUM,GACpBhI,EAAW,GAENkI,EAAI,EAAGA,EAAID,EAAM/G,OAAQgH,GAAK,EAAG,CACxC,OAAQD,EAAMC,IACZ,IAAK,WACW,KAAVzG,GAA0B,OAAVA,QAA4B0G,IAAV1G,IACpCzB,EAAWyG,EAAce,UAE3B,MACF,IAAK,QACEvB,EAAMC,MAAMkC,KAAK3G,KACpBzB,EAAWyG,EAAcC,cAE3B,MAEF,IAAK,cACET,EAAMI,aAAa+B,KAAK3G,KAC3BzB,EAAWyG,EAAcJ,cAE3B,MACF,IAAK,WACEJ,EAAME,SAASiC,KAAK3G,KACvBzB,EAAWyG,EAAcK,iBAM3B9G,IACF4H,EAAMI,GAAOhI,GAKnB,OAAO4H,I,wMCjBIS,EAAa,SAAC,GAWb,IAAD,MAVXC,EAUW,EAVXA,0BACAC,EASW,EATXA,aACAC,EAQW,EARXA,YACAC,EAOW,EAPXA,SACAC,EAMW,EANXA,aACAC,EAKW,EALXA,aACAC,EAIW,EAJXA,oBACAC,EAGW,EAHXA,IACA1E,EAEW,EAFXA,SAEW,IADX2E,qBACW,SACX,OACE,yBAAK7H,UAAU,kBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,eACX6H,GACA,oCACE,kBAACC,EAAA,EAAD,CACEhJ,YAAY,eACZc,SAAUsD,EACV9D,SAAU,SAACE,GAAD,OACR+H,EAA0B/H,EAAQ,OAAT,OAAiBgI,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAcM,MAE1DtI,QAAoB,OAAZgI,QAAY,IAAZA,OAAA,EAAAA,EAActE,OAAQ,KAC9B/D,SAAkB,IAAR2I,EACVrI,iBAAkB,iBAAM,+BAE1B,yBAAKmD,IAAKC,IAAOoF,UAAWlF,IAAI,OAItC,yBAAK7C,UAAU,cACb,kBAAC8H,EAAA,EAAD,CACEhJ,YAAY,4BACZc,SAAU2H,EACVnI,SAAU,SAACE,GAAD,OACR+H,EAA0B/H,EAAQ,UAAT,OAAoBgI,QAApB,IAAoBA,OAApB,EAAoBA,EAAcM,MAE7DtI,QAAoB,OAAZgI,QAAY,IAAZA,OAAA,EAAAA,EAAcU,UAAW,KACjCzI,iBAAkB,iBAAM,+BAE1B,yBAAKmD,IAAKC,IAAOoF,UAAWlF,IAAI,MAElC,yBAAK7C,UAAU,cACb,kBAAC8H,EAAA,EAAD,CACEhJ,YAAY,4BACZc,SAAU4H,EACVvI,YACc,OAAZqI,QAAY,IAAZA,GAAA,UAAAA,EAActE,YAAd,eAAoBxC,QACc,KAAlB,OAAZ8G,QAAY,IAAZA,GAAA,UAAAA,EAActE,YAAd,eAAoBxC,OAG1BpB,SAAU,SAACE,GAAD,OACR+H,EAA0B/H,EAAQ,OAAT,OAAiBgI,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAcM,MAE1DrI,iBAAkB,iBAAM,6BACxBD,QACc,OAAZgI,QAAY,IAAZA,GAAA,UAAAA,EAActE,YAAd,eAAoBxC,OAAQ,MAAmB,OAAZ8G,QAAY,IAAZA,OAAA,EAAAA,EAAcW,OAAQ,OAG7D,yBAAKvF,IAAKC,IAAOoF,UAAWlF,IAAI,MAElC,yBAAK7C,UAAU,cACb,kBAAC8H,EAAA,EAAD,CACEhJ,YAAY,kCACZc,SAAU6H,EACVrI,SAAU,SAACE,GAAD,OACR+H,EAA0B/H,EAAQ,WAAT,OAAqBgI,QAArB,IAAqBA,OAArB,EAAqBA,EAAcM,MAE9DtI,QAAoB,OAAZgI,QAAY,IAAZA,OAAA,EAAAA,EAAcY,WAAY,KAClC3I,iBAAkB,iBAAM,iCAIrB,IAARqI,EACC,kBAACO,EAAA,EAAD,CAAQ7F,QAASqF,GAAjB,gBAEA,kBAACQ,EAAA,EAAD,CAAQ7F,QAAS,kBAAMoF,EAAaJ,KAApC,kBAMRF,EAAWpG,aAAe,CACxB6G,eAAe,GAGF5E,qBAAYmE,GCoFZnE,kBAnKA,SAAC,GAaF,IAZZmF,EAYW,EAZXA,aACAC,EAWW,EAXXA,cACAC,EAUW,EAVXA,qBACAjB,EASW,EATXA,0BACAE,EAQW,EARXA,YACAgB,EAOW,EAPXA,UACAf,EAMW,EANXA,SACAC,EAKW,EALXA,aACAC,EAIW,EAJXA,aACAc,EAGW,EAHXA,eACAb,EAEW,EAFXA,oBACAzE,EACW,EADXA,SAEQuF,EAAyCL,EAAzCK,SAAUC,EAA+BN,EAA/BM,MAAOC,EAAwBP,EAAxBO,MAAOC,EAAiBR,EAAjBQ,OAAQrG,EAAS6F,EAAT7F,KAClCsG,EACJL,GACAA,EAAe9H,KAAI,SAACC,EAAMmI,GAAP,OACjB,kBAAC,EAAD,eACE/B,IAAKpG,EAAKiH,KACNjH,EAFN,CAGE2G,aAAc3G,EACdiH,IAAKkB,EACLzB,0BAA2BA,EAC3BE,YAAaA,EACbC,SAAUA,EACVC,aAAcA,EACdvE,SAAUA,EACVwE,aAAcA,EACdC,oBAAqBA,QAI3B,OACE,yBAAK3H,UAAU,iBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,kBAAf,2NAGE,6BAHF,uIAMA,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cAAf,eACI,oCAEJ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,eACb,kBAACoD,EAAA,EAAD,CACEhE,SAAU,kBAAMkJ,EAAqB,QAAS,UAC9ChF,UAAoB,UAATf,EACX1B,KAAK,OACLwC,WAAW,kCACXzC,GAAG,UAEL,kBAACwC,EAAA,EAAD,CACEhE,SAAU,kBAAMkJ,EAAqB,UAAW,YAChDhF,UAAoB,YAATf,EACXc,WAAW,eACXxC,KAAK,OACLD,GAAG,YAEL,kBAACwC,EAAA,EAAD,CACEhE,SAAU,kBACRkJ,EAAqB,aAAc,eAErChF,UAAoB,eAATf,EACX1B,KAAK,OACLwC,WAAW,2BACXzC,GAAG,kBAMX,yBAAKZ,UAAU,QACb,yBAAKA,UAAU,cAAf,qBACK,oCAEL,yBAAKA,UAAU,gBACb,kBAAC0D,EAAA,EAAD,CACE5E,YAAY,iEACZkE,KAAK,OACLnC,KAAK,QACLL,MAAOkI,EACPtJ,SAAU,SAACqE,GAAD,OAAO6E,EAAqB7E,EAAEsF,OAAOvI,MAAO,UACtD2D,WAAY,SAACV,GAAD,OAAO4E,EAAc5E,IACjC1E,SAAUwJ,IAAS,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWG,WAKxC,yBAAK1I,UAAU,QACb,yBAAKA,UAAU,cAAf,qBACK,oCAEL,yBAAKA,UAAU,gBACb,kBAAC0D,EAAA,EAAD,CACE5E,YAAY,2FACZkE,KAAK,OACLnC,KAAK,WACLL,MAAOiI,EACPrJ,SAAU,SAACqE,GAAD,OACR6E,EAAqB7E,EAAEsF,OAAOvI,MAAO,aAEvC2D,WAAY,SAACV,GAAD,OAAO4E,EAAc5E,IACjC1E,SAAUwJ,IAAS,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWE,cAKxC,yBAAKzI,UAAU,QACb,yBAAKA,UAAU,cAAf,2BACM,oCAEN,yBAAKA,UAAU,gBACb,kBAAC0D,EAAA,EAAD,CACE5E,YAAY,2EACZkE,KAAK,OACLnC,KAAK,QACLsD,WAAY,SAACV,GACXuF,YAAYvF,GACZ4E,EAAc5E,IAEhBiB,UAAU,KACVN,QAAS,SAACX,GAAD,OAAOwF,YAAgBxF,IAChCjD,MAAOmI,EACPvJ,SAAU,SAACqE,GAAD,OAAO6E,EAAqB7E,EAAEsF,OAAOvI,MAAO,UACtDzB,SAAUwJ,IAAS,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWI,WAKxC,yBAAK3I,UAAU,QACb,yBAAKA,UAAU,cAAf,qBACK,oCAEL,yBAAKA,UAAU,gBACb,kBAAC0D,EAAA,EAAD,CACE5E,YAAY,iEACZkE,KAAK,OACLnC,KAAK,SACLL,MAAOoI,EACPxJ,SAAU,SAACqE,GAAD,OAAO6E,EAAqB7E,EAAEsF,OAAOvI,MAAO,WACtD2D,WAAY,SAACV,GAAD,OAAO4E,EAAc5E,IACjC1E,SAAUwJ,IAAS,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWK,YAKxC,yBAAK5I,UAAU,QACb,yBAAKA,UAAU,cAAf,2BACM,oCAEN,yBAAKA,UAAU,gBAAgB6I,U,OCyT5BK,UA7eA,WACb,IAAMC,EAAUC,cADG,EAUfC,aAAY,SAACC,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOC,WAPhCvG,EAHiB,EAGjBA,KACAwG,EAJiB,EAIjBA,aACAzK,EALiB,EAKjBA,SACA0K,EANiB,EAMjBA,MACAlC,EAPiB,EAOjBA,YACAC,EARiB,EAQjBA,SACAC,EATiB,EASjBA,aAGIiC,EAAWC,cAZE,EAae9J,mBAAS,CACzC4I,SAAU,GACVmB,SAAU,KAfO,mBAaZC,EAbY,KAaDC,EAbC,KAiBbC,EAAsB,CAC1BtB,SAAU,GACVuB,UAAW,GACXtB,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRrG,KAAM,SAEF0H,EAAoB,CACxBrC,IAAKsC,KAAKC,SACVlC,KAAM,KACND,QAAS,KACTE,SAAU,KACVlF,KAAM,MA9BW,EAgCqBnD,mBAASkK,GAhC9B,mBAgCZ3B,EAhCY,KAgCEgC,EAhCF,OAiCOvK,mBAAS,CACjC4I,SAAU,GACVuB,UAAW,GACXtB,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRrG,KAAM,KAvCW,mBAiCZoE,EAjCY,KAiCL0D,EAjCK,OA0CyCxK,oBAAS,GA1ClD,mBA0CZyK,EA1CY,KA0CYC,EA1CZ,OA2CmC1K,oBAAS,GA3C5C,mBA2CZ2K,EA3CY,KA2CSC,EA3CT,OA6CiB5K,mBAAS,CAC3C6K,QAAQ,EACRC,QAAS,KA/CQ,mBA6CZC,EA7CY,KA6CAC,EA7CA,OAkDyBhL,mBAAS,CAACoK,IAlDnC,oBAkDZzB,GAlDY,MAkDIsC,GAlDJ,MAqDnBC,qBAAU,WACR,OAAQ/H,GACN,KAAKgI,IACHC,IAAIC,UAAU,gBAAd,iBAAyCzB,IACzCN,EAAQgC,KAAKC,IAAQC,MACrB,MACF,KAAKL,IACHH,EAAc,2BACTD,GADQ,IAEXF,QAAQ,EACRC,QAAS5L,KAEX,MACF,KAAKiM,IACHT,GAA0B,GAC1B,MACF,KAAKS,IACHH,EAAc,2BACTD,GADQ,IAEXF,QAAQ,EACRC,QAAS,iGAOd,CAAC3H,EAAMyG,IAIVsB,qBAAU,WACJP,IACFd,EAASsB,OACTtB,EAASsB,UAGV,CAACR,IAEJ,IAAMc,GAAe,SAAC9K,EAAOK,GAC3B,OAAQA,GACN,IAAK,WACHiJ,EAAa,2BACRD,GADO,IAEVpB,SAAUjI,KAEZ,MACF,IAAK,WACHsJ,EAAa,2BACRD,GADO,IAEVD,SAAUpJ,OAQViI,GAAuBoB,EAAvBpB,SAAUmB,GAAaC,EAAbD,SACVlB,GAAyBN,EAAzBM,MAAOC,GAAkBP,EAAlBO,MAAOC,GAAWR,EAAXQ,OAEhB3G,GAAe,WACdwG,IAAamB,GAQbnB,IAQAmB,IACHiB,EAAc,2BACTD,GADQ,IAEXF,QAAQ,EACRC,QAAS,qEAGbjB,EAASsB,IAA2BnB,KAdlCgB,EAAc,2BACTD,GADQ,IAEXF,QAAQ,EACRC,QAAS,qEAXXE,EAAc,2BACTD,GADQ,IAEXF,QAAQ,EACRC,QAAS,oGAsBTtC,GAAgB,SAAC5E,GACP,UAAVA,EAAEsD,KACJ9E,MAwJEsJ,GAAuB,WAC3B,IAAIC,EAQEC,EAAe,CACnBhD,SAAUL,EAAaK,SACvBC,SACAC,SACAC,WAGF,GADA4C,EAAahF,YAAUiF,EAbT,CACZhD,SAAU,CAAC,YACXC,MAAO,CAAC,WAAY,SACpBC,MAAO,CAAC,WAAY,eACpBC,OAAQ,CAAC,cAUP/B,OAAOD,KAAK4E,GAAYvL,OAAS,EACnCoK,EAASmB,OADX,CAKA,IAAME,EAAiBlD,GAAemD,QACpC,SAAChL,GAAD,OACgB,OAAdA,EAAKqC,MAAkC,OAAjBrC,EAAKqH,SAAsC,OAAlBrH,EAAKuH,YAGxD,GAAIwD,GAAkBA,EAAezL,OAAS,EAC5C4K,EAAc,2BACTD,GADQ,IAEXF,QAAQ,EACRC,QAAQ,wGAJZ,CAQA,IAAMiB,EAAkBpD,GAAe9H,KAAI,SAACC,GAAD,uBAAUA,EAAKsH,YAAf,aAAU,EAAWzH,SAC1DqL,EAAa,CACjBtJ,KAAM6F,EAAa7F,KACnBkG,SAAUL,EAAaK,UAAY,GACnCC,SACA7H,KAAM+H,IAAU,GAChBD,SACAmD,aAAcF,GAGhBlC,EAASsB,IAA2Ba,OAgCtC,OACE,yBAAK7L,UAAU,cACZwJ,GAAgB,kBAACuC,EAAA,EAAD,MAEjB,yBAAK/L,UAAU,WACb,yBAAKA,UAAU,cAAf,SACA,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eAAf,4BACA,yBAAKA,UAAU,iBACb,kBAAC0D,EAAA,EAAD,CACE5E,YAAY,2DACZkE,KAAK,OACLnC,KAAK,WACLL,MAAOiI,GACPrJ,SAAU,SAACqE,GAAD,OAAO6H,GAAa7H,EAAEsF,OAAOvI,MAAO,aAC9C2D,WAAYkE,KAEd,kBAAC3E,EAAA,EAAD,CACE5E,YAAY,iEACZkE,KAAK,WACLnC,KAAK,WACLL,MAAOoJ,GACPxK,SAAU,SAACqE,GAAD,OAAO6H,GAAa7H,EAAEsF,OAAOvI,MAAO,aAC9C2D,WAAYkE,MAGhB,yBAAKrI,UAAU,eACb,kBAACmI,EAAA,EAAD,CAAQ7F,QAAS,kBAAML,MAAgBxC,YAAY,cAAnD,uBAKF,yBACEO,UAAU,mBACVsC,QAAS,kBAAMmI,GAAuB,IACtCtG,WAAY,aACZ5B,KAAK,SACLC,SAAU,GAEV,yBAAKxC,UAAU,QAAf,6CAKN,kBAACgM,EAAA,EAAD,CACE3K,OAAQuJ,EAAWF,OACnBjJ,cAAY,EACZP,MAAM,eACNM,iBAAe,EACfE,cAAY,EACZS,gBAAiB,kBACf0I,EAAc,2BACTD,GADQ,IAEXF,QAAQ,EACRC,QAAS,OAGbpJ,YAAa,kBACXsJ,EAAc,2BACTD,GADQ,IAEXF,QAAQ,EACRC,QAAS,OAGb3I,aAAa,gBAEZ4I,EAAWD,SAEd,kBAACqB,EAAA,EAAD,CACE3K,OAAQmJ,EACR/I,cAAY,EACZH,KAAK,KACLJ,MAAM,kEACNM,iBAAe,EACfW,gBAAiB,kBAAMsI,GAAuB,IAC9C/I,cAAY,EACZH,YAAa,kBAAMgK,MACnBvJ,aAAa,4BAEb,kBAAC,EAAD,CACEoG,aAAcA,EACdC,cA9GsB,SAAC5E,GACf,UAAVA,EAAEsD,KACJwE,MA6GIjD,qBAlTqB,SAAC9H,EAAOK,GACnC,OAAQA,GACN,IAAK,WACHuJ,EAAgB,2BACXhC,GADU,IAEbK,SAAUjI,KAEZ6J,EAAS,2BACJ1D,GADG,IAEN8B,SAAU,MAEZ,MACF,IAAK,QACH2B,EAAgB,2BACXhC,GADU,IAEbM,MAAOlI,KAET6J,EAAS,2BACJ1D,GADG,IAEN+B,MAAO,MAET,MACF,IAAK,QACH0B,EAAgB,2BACXhC,GADU,IAEbO,MAAOnI,KAET6J,EAAS,2BACJ1D,GADG,IAENgC,MAAO,MAET,MACF,IAAK,SACHyB,EAAgB,2BACXhC,GADU,IAEbQ,OAAQpI,KAEV6J,EAAS,2BACJ1D,GADG,IAENiC,OAAQ,MAEV,MACF,IAAK,QACHwB,EAAgB,2BACXhC,GADU,IAEb7F,KAAM,WAGR,MACF,IAAK,UACH6H,EAAgB,2BACXhC,GADU,IAEb7F,KAAM,aAGR,MACF,IAAK,aACH6H,EAAgB,2BACXhC,GADU,IAEb7F,KAAM,kBAwPN8E,0BA/O0B,SAAC/H,EAAQuB,EAAM+G,GAAS,IAAD,MACjDqE,EAAazD,GAAe0D,MAAK,SAACvL,GAAD,OAAUA,EAAKiH,MAAQA,KACxDuE,EAAiB3D,GAAe9H,KAAI,SAACC,GACzC,OAAO,2BACFA,GADL,IAEEsH,KAAM,KACND,QAAS,KACTE,SAAU,KACVlF,MAAgB,SAATnC,EAAkBvB,EAASqB,EAAKqC,OAAS,UAG9CoJ,EAAkB5D,GAAe9H,KAAI,SAACC,GAC1C,OAAOA,EAAKiH,OAAL,OAAaqE,QAAb,IAAaA,OAAb,EAAaA,EAAYrE,KAAzB,2BAEEjH,GAFF,IAGDsH,KAAM,KACND,SAAmB,YAATnH,EAAqBvB,EAASqB,EAAKqH,UAAY,KACzDE,SAAU,OAEZvH,KAGA0L,EAAe7D,GAAe9H,KAAI,SAACC,GACvC,OAAOA,EAAKiH,OAAL,OAAaqE,QAAb,IAAaA,OAAb,EAAaA,EAAYrE,KAAzB,2BAEEjH,GAFF,IAGDsH,MAAgB,SAATpH,EAAkBvB,EAASqB,EAAKsH,OAAS,KAChDC,SAAU,OAEZvH,KAGA2L,EAAkB9D,GAAe9H,KAAI,SAACC,GAC1C,OAAOA,EAAKiH,OAAL,OAAaqE,QAAb,IAAaA,OAAb,EAAaA,EAAYrE,KAAzB,2BAEEjH,GAFF,IAGDsH,MAAgB,SAATpH,EAAkBvB,EAASqB,EAAKsH,OAAS,KAChDD,SAAmB,YAATnH,EAAqBvB,EAASqB,EAAKqH,UAAY,KACzDE,UAAoB,aAATrH,EAAsBvB,EAASqB,EAAKuH,WAAa,KAC5DlF,MAAgB,SAATnC,EAAkBvB,EAASqB,EAAKqC,OAAS,OAElDrC,KAEN,OAAQE,GACN,IAAK,OACHiK,GAAkBqB,GAClBzC,EACEsB,IAA6B,CAC3BuB,SAAU,OACVvJ,KAAI,OAAE1D,QAAF,IAAEA,OAAF,EAAEA,EAAQkB,SAGlB,MACF,IAAK,UACHsK,GAAkBsB,GAClB1C,EACEsB,IAA6B,CAC3BuB,SAAU,OACVvJ,KAAI,OAAEiJ,QAAF,IAAEA,GAAF,UAAEA,EAAYjJ,YAAd,aAAE,EAAkBxC,MACxBgM,OAAM,OAAElN,QAAF,IAAEA,OAAF,EAAEA,EAAQkB,SAGpB,MACF,IAAK,OACHsK,GAAkBuB,GAClB3C,EACEsB,IAA6B,CAC3BuB,SAAU,OACVvJ,KAAI,OAAEiJ,QAAF,IAAEA,GAAF,UAAEA,EAAYjJ,YAAd,aAAE,EAAkBxC,MACxBgM,OAAM,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAYjE,eAAd,aAAE,EAAqBxH,MAC7BiM,OAAM,OAAEnN,QAAF,IAAEA,OAAF,EAAEA,EAAQkB,SAGpB,MACF,QACEsK,GAAkBwB,KAqKhB/E,YAAaA,EACbgB,UAAW5B,EACX6B,eAAgBA,GAChBb,oBA9GoB,WAC1BmD,GAAkB,GAAD,mBACZtC,IADY,CAEf,CACEZ,IAAKsC,KAAKC,SACVnC,QAAS,KACTC,KAAM,KACNjF,KACGwF,IAAkBA,GAAe,IAAMA,GAAe,GAAGxF,MAC1D,KACFkF,SAAU,UAqGRR,aA/Fa,SAACgF,GACpB,IAAMC,EAAenE,GAAemD,QAClC,SAAChL,GAAD,OAAU+L,EAAW9E,MAAQjH,EAAKiH,OAEpCkD,GAAkB6B,IA4FZlF,aAAcA,EACdD,SAAUA,EACVtE,SAAUA,OAId,kBAAC8I,EAAA,EAAD,CACE3K,OAAQiJ,EACR7I,cAAY,EACZP,MAAM,eACNM,iBAAe,EACf/B,YAAY,cACZiC,cAAY,EACZS,gBAAiB,WACfoI,GAA0B,GAC1BE,GAAuB,GACvBK,GAAkBb,GAClBG,EAAgB,CAACL,KAEnBxI,YAAa,WACXgJ,GAA0B,GAC1BE,GAAuB,GACvBK,GAAkB,CAACb,IACnBG,EAAgBL,IAElB/H,aAAa,gBAnBf","file":"static/js/32.10d409fe.chunk.js","sourcesContent":["// @flow\r\nimport React, { useState } from 'react';\r\nimport Select, { components } from 'react-select';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  errorMsg?: string,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  isSearchable?: boolean,\r\n  onBlur?: Function,\r\n  onChange?: Function,\r\n  listOptionString?: Array<{ id: number, name: any }>,\r\n  listItem?: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  innerRef?: any,\r\n  option?: Object,\r\n  noOptionsMessage?: Function,\r\n  customClass?: string,\r\n  request?: boolean,\r\n  noLabel?: boolean,\r\n};\r\nconst SelectDropdown = ({\r\n  placeholder = '',\r\n  errorMsg = '',\r\n  label = '',\r\n  disabled = false,\r\n  isSearchable = false,\r\n  onBlur = null,\r\n  onChange = () => {},\r\n  innerRef = null,\r\n  option = {},\r\n  noOptionsMessage = () => {},\r\n  listOptionString = [],\r\n  customClass = '',\r\n  request = false,\r\n  noLabel = false,\r\n  listItem,\r\n}: Props) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const DropdownIndicator = (props) => {\r\n    setIsActive(props?.selectProps?.menuIsOpen);\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <div className=\"d-none\" />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      className={`customer-select ${customClass.length > 0 ? customClass : ''}`}\r\n    >\r\n      {!!label && (\r\n        <p className=\"input__label\">\r\n          {label}\r\n          {request && <span className=\"request\">*</span>}\r\n        </p>\r\n      )}\r\n      <div className={`input__box ${isActive ? 'down' : ''}`}>\r\n        <Select\r\n          placeholder={placeholder}\r\n          components={{ DropdownIndicator }}\r\n          ref={innerRef}\r\n          value={option || null}\r\n          onChange={onChange}\r\n          noOptionsMessage={noOptionsMessage}\r\n          // menuIsOpen\r\n          options={\r\n            noLabel\r\n              ? listOptionString.map((item) => ({\r\n                  id: item.id,\r\n                  value: item.name,\r\n                  label: item.name,\r\n                }))\r\n              : listItem\r\n          }\r\n          blurInputOnSelect={onBlur}\r\n          isDisabled={disabled}\r\n          isSearchable={isSearchable}\r\n        />\r\n      </div>\r\n      {errorMsg && <p className=\"error-msg\">{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\nSelectDropdown.defaultProps = {\r\n  placeholder: '',\r\n  errorMsg: '',\r\n  label: '',\r\n  disabled: false,\r\n  isSearchable: false,\r\n  // icon: '',\r\n  noLabel: false,\r\n  onBlur: null,\r\n  onChange: () => {},\r\n  innerRef: null,\r\n  listItem: [],\r\n  listOptionString: [],\r\n  option: {},\r\n  noOptionsMessage: () => {},\r\n  customClass: '',\r\n  request: false,\r\n};\r\nexport default SelectDropdown;\r\n","/* eslint-disable no-nested-ternary */\r\n// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Button from 'commons/components/Button';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title?: string,\r\n  children: any,\r\n  animation?: boolean,\r\n  isOpen: boolean,\r\n  size?: string,\r\n  handleClose: Function,\r\n  customClass?: string,\r\n  isShowIconClose?: boolean,\r\n  isShowHeader?: boolean,\r\n  isShowFooter?: boolean,\r\n  isShowTwoBtn?: boolean,\r\n  customClassButton?: string,\r\n  classNameBtnLeft?: string,\r\n  textBtnLeft?: string,\r\n  classNameBtnRight?: string,\r\n  textBtnRight?: string,\r\n  handleSubmit?: Function,\r\n  isDisabledButton?: boolean,\r\n  handleCloseIcon?: Function,\r\n};\r\n\r\nexport const ModalPopup = ({\r\n  title = '',\r\n  children,\r\n  animation = false,\r\n  isOpen,\r\n  size,\r\n  handleClose,\r\n  customClass,\r\n  isShowIconClose,\r\n  isShowHeader,\r\n  isShowFooter,\r\n  isShowTwoBtn,\r\n  customClassButton = '',\r\n  classNameBtnLeft = '',\r\n  textBtnLeft = '',\r\n  classNameBtnRight = '',\r\n  textBtnRight = 'OK',\r\n  handleSubmit = () => {},\r\n  isDisabledButton,\r\n  handleCloseIcon = () => {},\r\n}: Props) => (\r\n  <Modal\r\n    animation={animation}\r\n    onHide={() => {\r\n      return true;\r\n    }}\r\n    show={isOpen}\r\n    size={size}\r\n    className={customClass}\r\n  >\r\n    {isShowIconClose && (\r\n      <div\r\n        className=\"modal-content__iconClose\"\r\n        onClick={handleCloseIcon}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onKeyUp={handleCloseIcon}\r\n      >\r\n        <img src={images.icon_close} alt=\"\" />\r\n      </div>\r\n    )}\r\n\r\n    {isShowHeader && <h3 className=\"modal-title\">{title}</h3>}\r\n\r\n    <Modal.Body>\r\n      {!isShowHeader ? (\r\n        <div className=\"modal-body__no-header\">{children}</div>\r\n      ) : (\r\n        <div className=\"modal-body__has-header\">{children}</div>\r\n      )}\r\n    </Modal.Body>\r\n    {isShowFooter && (\r\n      <Modal.Footer>\r\n        {!isShowTwoBtn ? (\r\n          <Button\r\n            type=\"button\"\r\n            customClass={customClassButton}\r\n            onClick={handleClose}\r\n          >\r\n            {textBtnRight}\r\n          </Button>\r\n        ) : (\r\n          <div className=\"group-button\">\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnLeft}`}\r\n              onClick={handleSubmit}\r\n              isDisabled={isDisabledButton}\r\n            >\r\n              {textBtnLeft}\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnRight}`}\r\n              onClick={handleClose}\r\n            >\r\n              {textBtnRight}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Modal.Footer>\r\n    )}\r\n  </Modal>\r\n);\r\n\r\nModalPopup.defaultProps = {\r\n  title: '',\r\n  animation: false,\r\n  size: '',\r\n  customClass: '',\r\n  isShowIconClose: false,\r\n  isShowHeader: false,\r\n  isShowFooter: false,\r\n  isShowTwoBtn: false,\r\n  customClassButton: '',\r\n  classNameBtnLeft: '',\r\n  textBtnLeft: '',\r\n  classNameBtnRight: '',\r\n  textBtnRight: 'OK',\r\n  handleSubmit: () => {},\r\n  isDisabledButton: false,\r\n  handleCloseIcon: () => {},\r\n};\r\nexport default memo<Props>(ModalPopup);\r\n","const listType = [\r\n  {\r\n    id: 1,\r\n    value: 0,\r\n    label: '실증단지',\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 1,\r\n    label: 'RTU(목업)',\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 2,\r\n    label: '테스트(실증단지)',\r\n  },\r\n  {\r\n    id: 4,\r\n    value: 3,\r\n    label: '테스트(목업)',\r\n  },\r\n];\r\n\r\nconst listPaginationType = [\r\n  {\r\n    id: 1,\r\n    value: 6,\r\n    label: '6 개씩 보기',\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 12,\r\n    label: '12 개씩 보기',\r\n  },\r\n  {\r\n    id: 3,\r\n    value: 18,\r\n    label: '18 개씩 보기',\r\n  },\r\n  {\r\n    id: 4,\r\n    value: 24,\r\n    label: '14 개씩 보기',\r\n  },\r\n  {\r\n    id: 4,\r\n    value: 30,\r\n    label: '30 개씩 보기',\r\n  },\r\n];\r\n\r\nexport { listType, listPaginationType };\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  name?: string,\r\n  onChange: Function,\r\n  disabled?: boolean,\r\n  labelRadio: string,\r\n  isChecked: boolean,\r\n  id?: string,\r\n};\r\n\r\nexport const Radio = ({\r\n  labelRadio,\r\n  name = '',\r\n  isChecked,\r\n  onChange,\r\n  id = '',\r\n  disabled = false,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"wrap-radio\">\r\n      <label className=\"custom-radio d-flex\" htmlFor={id}>\r\n        <input\r\n          type=\"radio\"\r\n          checked={`${isChecked ? 'checked' : ''}`}\r\n          name={name}\r\n          onChange={(e) => onChange(e)}\r\n          id={id}\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"checkmark\" />\r\n        <span className=\"label\">{labelRadio}</span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadio.defaultProps = {\r\n  name: '',\r\n  disabled: false,\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(Radio);\r\n","// @flow\r\n\r\nimport React, { memo } from 'react';\r\nimport IMAGES from 'themes/images';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  value?: any,\r\n  errorMsg?: any,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  inputMode?: string,\r\n  type?: string,\r\n  onBlur?: Function,\r\n  onBlurWrapper?: Function,\r\n  onFocusWrapper?: Function,\r\n  onClickWrapper?: Function,\r\n  onChange?: Function,\r\n  onFocus?: Function,\r\n  onKeyPress?: Function,\r\n  onPaste?: Function,\r\n  readOnly?: boolean,\r\n  variant?: string,\r\n  customClassName?: string,\r\n  customClassLabel?: string,\r\n  customClassWrap?: string,\r\n  isShowIcon?: boolean,\r\n  deleteValue?: Function,\r\n  name?: string,\r\n  request?: boolean,\r\n  innerRef?: any,\r\n  customClass?: string,\r\n  innerRef?: any,\r\n  pattern?: string,\r\n  maxLength?: string,\r\n  autocomplete?: string,\r\n  autoFocus?: boolean,\r\n};\r\n\r\nexport const Input = ({\r\n  placeholder = '',\r\n  value = '',\r\n  errorMsg = '',\r\n  label = '',\r\n  disabled = false,\r\n  readOnly = false,\r\n  type = 'text',\r\n  onBlur = () => {},\r\n  onBlurWrapper = () => {},\r\n  onFocusWrapper = () => {},\r\n  onClickWrapper = () => {},\r\n  onChange = () => {},\r\n  customClassName = null,\r\n  customClassWrap = null,\r\n  customClassLabel = null,\r\n  onFocus = () => {},\r\n  onKeyPress = () => {},\r\n  onPaste = () => {},\r\n  variant = 'outline',\r\n  isShowIcon = false,\r\n  deleteValue = () => {},\r\n  name = '',\r\n  request = false,\r\n  customClass = '',\r\n  innerRef = null,\r\n  pattern = '',\r\n  inputMode = '',\r\n  maxLength = '',\r\n  autocomplete = '',\r\n  autoFocus,\r\n}: Props) => {\r\n  return (\r\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\r\n    <div\r\n      className={`input ${\r\n        variant !== 'outline' ? ` input__wrapper--${variant}` : ''\r\n      }`}\r\n      onBlur={(e) => onBlurWrapper(e)}\r\n      onFocus={(e) => onFocusWrapper(e)}\r\n      onClick={(e) => onClickWrapper(e)}\r\n      onKeyUp={() => {}}\r\n    >\r\n      {!!label && (\r\n        <p className={`${customClassLabel} input__label`}>\r\n          {label}\r\n          {request && <span className=\"request\">*</span>}\r\n        </p>\r\n      )}\r\n      <div\r\n        className={`input__box ${customClassWrap} ${\r\n          isShowIcon ? 'input__box__custom' : ''\r\n        }`}\r\n      >\r\n        <input\r\n          className={`input-change ${\r\n            customClass.length > 0 ? customClass : ''\r\n          } ${\r\n            variant !== 'outline' ? `input--${variant}` : ''\r\n          } ${customClassName}`}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          disabled={disabled}\r\n          type={type}\r\n          ref={innerRef}\r\n          onPaste={onPaste}\r\n          onKeyPress={onKeyPress}\r\n          readOnly={readOnly}\r\n          onBlur={(e) => onBlur(e)}\r\n          onFocus={(e) => onFocus(e)}\r\n          onChange={(e) => onChange(e)}\r\n          autoCapitalize=\"none\"\r\n          inputMode={inputMode}\r\n          maxLength={maxLength}\r\n          name={name}\r\n          pattern={pattern}\r\n          autoComplete={autocomplete}\r\n          // eslint-disable-next-line jsx-a11y/no-autofocus\r\n          autoFocus={autoFocus}\r\n        />\r\n        {isShowIcon && value.length > 0 && (\r\n          <div\r\n            className=\"input__box__icon input__box__icon__right\"\r\n            onClick={deleteValue}\r\n            onKeyUp={deleteValue}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <img src={IMAGES.icon_close} alt=\"\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {errorMsg && <p className=\"input__error-msg\">{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  placeholder: '',\r\n  value: '',\r\n  errorMsg: '',\r\n  label: '',\r\n  disabled: false,\r\n  readOnly: false,\r\n  type: 'text',\r\n  onBlur: () => {},\r\n  onBlurWrapper: () => {},\r\n  onFocusWrapper: () => {},\r\n  onClickWrapper: () => {},\r\n  onFocus: () => {},\r\n  onChange: () => {},\r\n  onKeyPress: () => {},\r\n  onPaste: () => {},\r\n  inputMode: '',\r\n  maxLength: '',\r\n  variant: 'outline',\r\n  customClassName: '',\r\n  customClassLabel: '',\r\n  customClassWrap: '',\r\n  isShowIcon: false,\r\n  deleteValue: () => {},\r\n  name: '',\r\n  request: false,\r\n  innerRef: null,\r\n  customClass: '',\r\n  pattern: '',\r\n  autocomplete: '',\r\n  autoFocus: false,\r\n};\r\n\r\nexport default memo<Props>(Input);\r\n","const REGEX = {\r\n  EMAIL: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n  PASSWORD: /^(?=.*[a-zA-Z])([A-Z]?)((?=.*\\d)([!@#$%^&*()'\"<>:;.,=-]?))(?!\\s).{6,13}$/,\r\n  // PASSWORD: /^(?=.*[a-z])((?=.*\\d)|(?=.*[!@#$%^&*()'\"]))[A-Za-z\\d!@#$%^&*()'\"](?!\\s).{6,}$/,\r\n  NUMBER: /^[-]?(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\r\n  PHONE_NUMBER: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/,\r\n  // USER_NAME: /^[0-9a-zA-Z]{6,20}$\\S*$/\r\n  USER_NAME: /^[0-9a-zA-Z]{3,20}$\\S*$/,\r\n  FLOAT_INPUT: /^[0-9.]*$/,\r\n  VALIDATE_PASSWORD: /^[0-9a-zA-Z]{4,20}$\\S*$/,\r\n};\r\n\r\nexport default REGEX;\r\n","const ERROR_MESSAGE = {\r\n  EMAIL_FORMAT: '이메일 형식이 일치하지 않습니다.',\r\n  EMAIL_REQUIRED: 'Email does not exist.',\r\n  NICK_NAME_REQUIRED: 'Nickname does not exist.',\r\n  PASSWORD_REQUIRED: 'Password does not exist.',\r\n  PASSWORD_FORMAT: `Up to 13 digits, including one special character. It doesn't fit`,\r\n  PASSWORD_NOT_MATCH: `The password you want to change does not match.`,\r\n  PASSWORD_CONFIRM_REQUIRED: 'Password confirm does not exist.',\r\n  EMAIL_NOT_EXSIST: 'Please enter your email.',\r\n  PASSWORD_INVALID: `Invalid password`,\r\n  ENQUIRY_TYPE_REQUIRED: 'Enquiry Type does not exist.',\r\n  TITLE_REQUIRED: 'Title does not exist.',\r\n  CONTENT_REQUIRED: 'Content does not exist.',\r\n  VERIFY_EMAIL:\r\n    'Email authentication is not complete.<br /> Would you like me to resend you<br /> the authentication email?',\r\n  UN_AUTHENTICATED: 'Unauthenticated.',\r\n  PHONE_NUMBER: '숫자 11자리를 입력해주세요.',\r\n  REQUIRED: '이 필드는 필수입니다.',\r\n};\r\n\r\nexport default ERROR_MESSAGE;\r\n","/* eslint-disable no-plusplus */\r\n/* eslint-disable prefer-template */\r\n// @flow\r\nimport REGEX from '../constants/regexs';\r\nimport ERROR_MESSAGE from '../constants/errorMsg';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const Validator = (objectVal: Object, validate: Object) => {\r\n  const error = {};\r\n  const keys = Object.keys(objectVal);\r\n  for (let i = 0, { length } = keys; i < length; i += 1) {\r\n    const key = keys[i];\r\n    const rules = validate[key];\r\n    const value = objectVal[key];\r\n    let errorMsg = '';\r\n\r\n    for (let j = 0; j < rules.length; j += 1) {\r\n      switch (rules[j]) {\r\n        case 'required':\r\n          if (value === '' || value === null || value === undefined) {\r\n            errorMsg = ERROR_MESSAGE.REQUIRED;\r\n          }\r\n          break;\r\n        case 'email':\r\n          if (!REGEX.EMAIL.test(value)) {\r\n            errorMsg = ERROR_MESSAGE.EMAIL_FORMAT;\r\n          }\r\n          break;\r\n\r\n        case 'phoneNumber':\r\n          if (!REGEX.PHONE_NUMBER.test(value)) {\r\n            errorMsg = ERROR_MESSAGE.PHONE_NUMBER;\r\n          }\r\n          break;\r\n        case 'password':\r\n          if (!REGEX.PASSWORD.test(value)) {\r\n            errorMsg = ERROR_MESSAGE.PASSWORD_FORMAT;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (errorMsg) {\r\n        error[key] = errorMsg;\r\n      }\r\n    }\r\n  }\r\n\r\n  return error;\r\n};\r\n","// @flow\r\nimport React, { memo } from 'react';\r\nimport SelectDropdown from 'commons/components/Select';\r\nimport Button from 'commons/components/Button';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  handleChangeOptionCompany: Function,\r\n  optionDevice: Object,\r\n  listCompany: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  listArea: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  listInverter: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  listType: Array<{ id: number, value: any, label: string }>,\r\n  handleRemove: Function,\r\n  handleAddListDevice: Function,\r\n  idx: any,\r\n  isAccountPage?: boolean,\r\n};\r\n\r\nexport const ItemDevice = ({\r\n  handleChangeOptionCompany,\r\n  optionDevice,\r\n  listCompany,\r\n  listArea,\r\n  listInverter,\r\n  handleRemove,\r\n  handleAddListDevice,\r\n  idx,\r\n  listType,\r\n  isAccountPage = false,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"item-role mt-2\">\r\n      <div className=\"group-select\">\r\n        <div className=\"group-item\">\r\n          {!isAccountPage && (\r\n            <>\r\n              <SelectDropdown\r\n                placeholder=\"구분\"\r\n                listItem={listType}\r\n                onChange={(option) =>\r\n                  handleChangeOptionCompany(option, 'type', optionDevice?.idx)\r\n                }\r\n                option={optionDevice?.type || null}\r\n                disabled={idx !== 0}\r\n                noOptionsMessage={() => '옵션 없음'}\r\n              />\r\n              <img src={images.icon_next} alt=\"\" />\r\n            </>\r\n          )}\r\n        </div>\r\n        <div className=\"group-item\">\r\n          <SelectDropdown\r\n            placeholder=\"업체 선택\"\r\n            listItem={listCompany}\r\n            onChange={(option) =>\r\n              handleChangeOptionCompany(option, 'company', optionDevice?.idx)\r\n            }\r\n            option={optionDevice?.company || null}\r\n            noOptionsMessage={() => '옵션 없음'}\r\n          />\r\n          <img src={images.icon_next} alt=\"\" />\r\n        </div>\r\n        <div className=\"group-item\">\r\n          <SelectDropdown\r\n            placeholder=\"구역 선택\"\r\n            listItem={listArea}\r\n            disabled={\r\n              optionDevice?.type?.value\r\n                ? optionDevice?.type?.value !== 0\r\n                : false\r\n            }\r\n            onChange={(option) =>\r\n              handleChangeOptionCompany(option, 'area', optionDevice?.idx)\r\n            }\r\n            noOptionsMessage={() => '옵션 없음'}\r\n            option={\r\n              optionDevice?.type?.value ? null : optionDevice?.area || null\r\n            }\r\n          />\r\n          <img src={images.icon_next} alt=\"\" />\r\n        </div>\r\n        <div className=\"group-item\">\r\n          <SelectDropdown\r\n            placeholder=\"인버터 선택\"\r\n            listItem={listInverter}\r\n            onChange={(option) =>\r\n              handleChangeOptionCompany(option, 'inverter', optionDevice?.idx)\r\n            }\r\n            option={optionDevice?.inverter || null}\r\n            noOptionsMessage={() => '옵션 없음'}\r\n          />\r\n        </div>\r\n      </div>\r\n      {idx === 0 ? (\r\n        <Button onClick={handleAddListDevice}>추가</Button>\r\n      ) : (\r\n        <Button onClick={() => handleRemove(optionDevice)}>삭제</Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nItemDevice.defaultProps = {\r\n  isAccountPage: false,\r\n};\r\n\r\nexport default memo<Props>(ItemDevice);\r\n","// @flow\r\nimport React, { memo } from 'react';\r\nimport Input from 'commons/components/Input';\r\nimport Radio from 'commons/components/Radio';\r\nimport { isNumberKey, isOnPasteNumber } from 'helpers/index';\r\nimport ItemDevice from './ItemDevice';\r\n\r\ntype Props = {\r\n  dataRegister: Object,\r\n  handleKeyDown: Function,\r\n  handleChangeRegister: Function,\r\n  handleChangeOptionCompany: Function,\r\n  listCompany: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  texTerror: Object,\r\n  listArea: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  listInverter: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  listType: Array<{ id: number, value: any, label: string }>,\r\n  handleRemove: Function,\r\n  listItemDevice: Array<{\r\n    idx: any,\r\n    company: Object,\r\n    area: Object,\r\n    inverter: Object,\r\n    type: Object,\r\n  }>,\r\n  handleAddListDevice: Function,\r\n};\r\n\r\nconst SignIn = ({\r\n  dataRegister,\r\n  handleKeyDown,\r\n  handleChangeRegister,\r\n  handleChangeOptionCompany,\r\n  listCompany,\r\n  texTerror,\r\n  listArea,\r\n  listInverter,\r\n  handleRemove,\r\n  listItemDevice,\r\n  handleAddListDevice,\r\n  listType,\r\n}: Props) => {\r\n  const { username, email, phone, person, role } = dataRegister;\r\n  const renderListItemDevice =\r\n    listItemDevice &&\r\n    listItemDevice.map((item, index) => (\r\n      <ItemDevice\r\n        key={item.idx}\r\n        {...item}\r\n        optionDevice={item}\r\n        idx={index}\r\n        handleChangeOptionCompany={handleChangeOptionCompany}\r\n        listCompany={listCompany}\r\n        listArea={listArea}\r\n        listInverter={listInverter}\r\n        listType={listType}\r\n        handleRemove={handleRemove}\r\n        handleAddListDevice={handleAddListDevice}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <div className=\"page-register\">\r\n      <div className=\"sign-in\">\r\n        <div className=\"sign-desc mb-3\">\r\n          등록 요청시 담당자가 관련 내용을 확인 후 서버에 계정 등록을 도와드릴\r\n          예정입니다.\r\n          <br />\r\n          비밀번호의 경우 임시발급 비밀번호가 발급됩니다.\r\n        </div>\r\n        <div className=\"form-register\">\r\n          <div className=\"item\">\r\n            <div className=\"item-label\">\r\n              권한<span>*</span>\r\n            </div>\r\n            <div className=\"item-content\">\r\n              <div className=\"group-radio\">\r\n                <Radio\r\n                  onChange={() => handleChangeRegister('admin', 'admin')}\r\n                  isChecked={role === 'admin'}\r\n                  name=\"role\"\r\n                  labelRadio=\"최고 관리자\"\r\n                  id=\"admin\"\r\n                />\r\n                <Radio\r\n                  onChange={() => handleChangeRegister('company', 'company')}\r\n                  isChecked={role === 'company'}\r\n                  labelRadio=\"업체\"\r\n                  name=\"role\"\r\n                  id=\"company\"\r\n                />\r\n                <Radio\r\n                  onChange={() =>\r\n                    handleChangeRegister('monitoring', 'monitoring')\r\n                  }\r\n                  isChecked={role === 'monitoring'}\r\n                  name=\"role\"\r\n                  labelRadio=\"모니터링\"\r\n                  id=\"monitoring\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"item-label\">\r\n              이메일<span>*</span>\r\n            </div>\r\n            <div className=\"item-content\">\r\n              <Input\r\n                placeholder=\"이메일을 입력해주세요.\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => handleChangeRegister(e.target.value, 'email')}\r\n                onKeyPress={(e) => handleKeyDown(e)}\r\n                errorMsg={texTerror && texTerror?.email}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"item-label\">\r\n              아이디<span>*</span>\r\n            </div>\r\n            <div className=\"item-content\">\r\n              <Input\r\n                placeholder=\"영문 + 숫자 4~13자리를 입력해주세요.\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={username}\r\n                onChange={(e) =>\r\n                  handleChangeRegister(e.target.value, 'username')\r\n                }\r\n                onKeyPress={(e) => handleKeyDown(e)}\r\n                errorMsg={texTerror && texTerror?.username}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"item-label\">\r\n              전화번호<span>*</span>\r\n            </div>\r\n            <div className=\"item-content\">\r\n              <Input\r\n                placeholder=\"숫자 11자리를 입력해주세요. \"\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                onKeyPress={(e) => {\r\n                  isNumberKey(e);\r\n                  handleKeyDown(e);\r\n                }}\r\n                maxLength=\"13\"\r\n                onPaste={(e) => isOnPasteNumber(e)}\r\n                value={phone}\r\n                onChange={(e) => handleChangeRegister(e.target.value, 'phone')}\r\n                errorMsg={texTerror && texTerror?.phone}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"item-label\">\r\n              담당자<span>*</span>\r\n            </div>\r\n            <div className=\"item-content\">\r\n              <Input\r\n                placeholder=\"담당자를 입력해주세요.\"\r\n                type=\"text\"\r\n                name=\"person\"\r\n                value={person}\r\n                onChange={(e) => handleChangeRegister(e.target.value, 'person')}\r\n                onKeyPress={(e) => handleKeyDown(e)}\r\n                errorMsg={texTerror && texTerror?.person}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"item-label\">\r\n              관리기기<span>*</span>\r\n            </div>\r\n            <div className=\"item-content\">{renderListItemDevice}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(SignIn);\r\n","// @flow\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ModalPopup from 'commons/components/Modal';\r\nimport Input from 'commons/components/Input';\r\nimport Button from 'commons/components/Button';\r\nimport Loading from 'commons/components/Loading';\r\nimport { API } from 'apis';\r\nimport ROUTERS from 'constants/routers';\r\nimport { listType } from 'constants/listKey';\r\nimport { Validator } from '../../../helpers/validator';\r\nimport SignIn from './signIn';\r\nimport * as SignInAction from '../redux';\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  const {\r\n    type,\r\n    isProcessing,\r\n    errorMsg,\r\n    token,\r\n    listCompany,\r\n    listArea,\r\n    listInverter,\r\n  } = useSelector((state) => state?.account);\r\n\r\n  const dispatch = useDispatch();\r\n  const [dataLogin, setDataLogin] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const dataRegisterDefault = {\r\n    username: '',\r\n    passwords: '',\r\n    email: '',\r\n    phone: '',\r\n    person: '',\r\n    role: 'admin',\r\n  };\r\n  const itemDeviceDefault = {\r\n    idx: Math.random(),\r\n    area: null,\r\n    company: null,\r\n    inverter: null,\r\n    type: null,\r\n  };\r\n  const [dataRegister, setDataRegister] = useState(dataRegisterDefault);\r\n  const [error, setError] = useState({\r\n    username: '',\r\n    passwords: '',\r\n    email: '',\r\n    phone: '',\r\n    person: '',\r\n    role: '',\r\n  });\r\n\r\n  const [isModalRegisterSuccess, setIsModalRegisterSuccess] = useState(false);\r\n  const [isShowModalRegister, setIsShowModalRegister] = useState(false);\r\n\r\n  const [modalLogin, setModalLogin] = useState({\r\n    isShow: false,\r\n    content: '',\r\n  });\r\n\r\n  const [listItemDevice, setListItemDevice] = useState([itemDeviceDefault]);\r\n\r\n  /** Show popup sign in success */\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case SignInAction.signInRequestSuccess:\r\n        API.setHeader('Authorization', `Bearer ${token}`);\r\n        history.push(ROUTERS.ROOT);\r\n        break;\r\n      case SignInAction.signInRequestFailed:\r\n        setModalLogin({\r\n          ...modalLogin,\r\n          isShow: true,\r\n          content: errorMsg,\r\n        });\r\n        break;\r\n      case SignInAction.signUpRequestSuccess:\r\n        setIsModalRegisterSuccess(true);\r\n        break;\r\n      case SignInAction.signUpRequestFailed:\r\n        setModalLogin({\r\n          ...modalLogin,\r\n          isShow: true,\r\n          content: '등록 요청이 완료되지 않았습니다.',\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [type, token]);\r\n\r\n  // get list getListCompany\r\n\r\n  useEffect(() => {\r\n    if (isShowModalRegister) {\r\n      dispatch(SignInAction.getListCompany());\r\n      dispatch(SignInAction.getListArea());\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [isShowModalRegister]);\r\n\r\n  const handleChange = (value, name) => {\r\n    switch (name) {\r\n      case 'username':\r\n        setDataLogin({\r\n          ...dataLogin,\r\n          username: value,\r\n        });\r\n        break;\r\n      case 'password':\r\n        setDataLogin({\r\n          ...dataLogin,\r\n          password: value,\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const { username, password } = dataLogin;\r\n  const { email, phone, person } = dataRegister;\r\n\r\n  const handleSubmit = () => {\r\n    if (!username && !password) {\r\n      setModalLogin({\r\n        ...modalLogin,\r\n        isShow: true,\r\n        content: '아이디와 비밀번호를 입력해주세요.',\r\n      });\r\n      return;\r\n    }\r\n    if (!username) {\r\n      setModalLogin({\r\n        ...modalLogin,\r\n        isShow: true,\r\n        content: '아이디를 입력 해주세요.',\r\n      });\r\n      return;\r\n    }\r\n    if (!password) {\r\n      setModalLogin({\r\n        ...modalLogin,\r\n        isShow: true,\r\n        content: '아이디를 입력 해주세요.',\r\n      });\r\n    }\r\n    dispatch(SignInAction.signInRequest(dataLogin));\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handleChangeRegister = (value, name) => {\r\n    switch (name) {\r\n      case 'username':\r\n        setDataRegister({\r\n          ...dataRegister,\r\n          username: value,\r\n        });\r\n        setError({\r\n          ...error,\r\n          username: '',\r\n        });\r\n        break;\r\n      case 'email':\r\n        setDataRegister({\r\n          ...dataRegister,\r\n          email: value,\r\n        });\r\n        setError({\r\n          ...error,\r\n          email: '',\r\n        });\r\n        break;\r\n      case 'phone':\r\n        setDataRegister({\r\n          ...dataRegister,\r\n          phone: value,\r\n        });\r\n        setError({\r\n          ...error,\r\n          phone: '',\r\n        });\r\n        break;\r\n      case 'person':\r\n        setDataRegister({\r\n          ...dataRegister,\r\n          person: value,\r\n        });\r\n        setError({\r\n          ...error,\r\n          person: '',\r\n        });\r\n        break;\r\n      case 'admin':\r\n        setDataRegister({\r\n          ...dataRegister,\r\n          role: 'admin',\r\n        });\r\n\r\n        break;\r\n      case 'company':\r\n        setDataRegister({\r\n          ...dataRegister,\r\n          role: 'company',\r\n        });\r\n\r\n        break;\r\n      case 'monitoring':\r\n        setDataRegister({\r\n          ...dataRegister,\r\n          role: 'monitoring',\r\n        });\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleChangeOptionCompany = (option, name, idx) => {\r\n    const itemChange = listItemDevice.find((item) => item.idx === idx);\r\n    const listItemChange = listItemDevice.map((item) => {\r\n      return {\r\n        ...item,\r\n        area: null,\r\n        company: null,\r\n        inverter: null,\r\n        type: (name === 'type' ? option : item.type) || null,\r\n      };\r\n    });\r\n    const listItemCompany = listItemDevice.map((item) => {\r\n      return item.idx === itemChange?.idx\r\n        ? {\r\n            ...item,\r\n            area: null,\r\n            company: (name === 'company' ? option : item.company) || null,\r\n            inverter: null,\r\n          }\r\n        : item;\r\n    });\r\n\r\n    const listItemArea = listItemDevice.map((item) => {\r\n      return item.idx === itemChange?.idx\r\n        ? {\r\n            ...item,\r\n            area: (name === 'area' ? option : item.area) || null,\r\n            inverter: null,\r\n          }\r\n        : item;\r\n    });\r\n\r\n    const listItemChange2 = listItemDevice.map((item) => {\r\n      return item.idx === itemChange?.idx\r\n        ? {\r\n            ...item,\r\n            area: (name === 'area' ? option : item.area) || null,\r\n            company: (name === 'company' ? option : item.company) || null,\r\n            inverter: (name === 'inverter' ? option : item.inverter) || null,\r\n            type: (name === 'type' ? option : item.type) || null,\r\n          }\r\n        : item;\r\n    });\r\n    switch (name) {\r\n      case 'type':\r\n        setListItemDevice(listItemChange);\r\n        dispatch(\r\n          SignInAction.getListInverter({\r\n            per_page: 999999,\r\n            type: option?.value,\r\n          })\r\n        );\r\n        break;\r\n      case 'company':\r\n        setListItemDevice(listItemCompany);\r\n        dispatch(\r\n          SignInAction.getListInverter({\r\n            per_page: 999999,\r\n            type: itemChange?.type?.value,\r\n            com_id: option?.value,\r\n          })\r\n        );\r\n        break;\r\n      case 'area':\r\n        setListItemDevice(listItemArea);\r\n        dispatch(\r\n          SignInAction.getListInverter({\r\n            per_page: 999999,\r\n            type: itemChange?.type?.value,\r\n            com_id: itemChange?.company?.value,\r\n            pos_id: option?.value,\r\n          })\r\n        );\r\n        break;\r\n      default:\r\n        setListItemDevice(listItemChange2);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleRegisterSubmit = () => {\r\n    let validation = {};\r\n    const rules = {\r\n      username: ['required'],\r\n      email: ['required', 'email'],\r\n      phone: ['required', 'phoneNumber'],\r\n      person: ['required'],\r\n    };\r\n\r\n    const dataValidate = {\r\n      username: dataRegister.username,\r\n      email,\r\n      phone,\r\n      person,\r\n    };\r\n    validation = Validator(dataValidate, rules);\r\n    if (Object.keys(validation).length > 0) {\r\n      setError(validation);\r\n      return;\r\n    }\r\n\r\n    const checkValidator = listItemDevice.filter(\r\n      (item) =>\r\n        item.type === null || item.company === null || item.inverter === null\r\n    );\r\n\r\n    if (checkValidator && checkValidator.length > 0) {\r\n      setModalLogin({\r\n        ...modalLogin,\r\n        isShow: true,\r\n        content: `관리기기 정보 입력을 완료해주세요.`,\r\n      });\r\n      return;\r\n    }\r\n    const listItemDevices = listItemDevice.map((item) => item.area?.value);\r\n    const dataSubmit = {\r\n      role: dataRegister.role,\r\n      username: dataRegister.username || '',\r\n      email,\r\n      name: person || '',\r\n      phone,\r\n      inverter_ids: listItemDevices,\r\n    };\r\n    // submit data\r\n    dispatch(SignInAction.signUpRequest(dataSubmit));\r\n  };\r\n\r\n  const handleKeyDownRegister = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleRegisterSubmit();\r\n    }\r\n  };\r\n\r\n  const handleAddListDevice = () => {\r\n    setListItemDevice([\r\n      ...listItemDevice,\r\n      {\r\n        idx: Math.random(),\r\n        company: null,\r\n        area: null,\r\n        type:\r\n          (listItemDevice && listItemDevice[0] && listItemDevice[0].type) ||\r\n          null,\r\n        inverter: null,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  //  Remove list device\r\n  const handleRemove = (itemRemove) => {\r\n    const removedItems = listItemDevice.filter(\r\n      (item) => itemRemove.idx !== item.idx\r\n    );\r\n    setListItemDevice(removedItems);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-login\">\r\n      {isProcessing && <Loading />}\r\n\r\n      <div className=\"sign-up\">\r\n        <div className=\"login-name\">LOGIN</div>\r\n        <div className=\"from-login\">\r\n          <div className=\"login-title\">실증단지</div>\r\n          <div className=\"input-wrapper\">\r\n            <Input\r\n              placeholder=\"아이디를 입력하세요.\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={(e) => handleChange(e.target.value, 'username')}\r\n              onKeyPress={handleKeyDown}\r\n            />\r\n            <Input\r\n              placeholder=\"비밀번호를 입력하세요.\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => handleChange(e.target.value, 'password')}\r\n              onKeyPress={handleKeyDown}\r\n            />\r\n          </div>\r\n          <div className=\"btn-wrapper\">\r\n            <Button onClick={() => handleSubmit()} customClass=\"bg-primary\">\r\n              로그인\r\n            </Button>\r\n          </div>\r\n\r\n          <div\r\n            className=\"register-wrapper\"\r\n            onClick={() => setIsShowModalRegister(true)}\r\n            onKeyPress={() => {}}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <div className=\"name\">계정 등록 요청</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ModalPopup\r\n        isOpen={modalLogin.isShow}\r\n        isShowHeader\r\n        title=\"알림\"\r\n        isShowIconClose\r\n        isShowFooter\r\n        handleCloseIcon={() =>\r\n          setModalLogin({\r\n            ...modalLogin,\r\n            isShow: false,\r\n            content: '',\r\n          })\r\n        }\r\n        handleClose={() =>\r\n          setModalLogin({\r\n            ...modalLogin,\r\n            isShow: false,\r\n            content: '',\r\n          })\r\n        }\r\n        textBtnRight=\"확인\"\r\n      >\r\n        {modalLogin.content}\r\n      </ModalPopup>\r\n      <ModalPopup\r\n        isOpen={isShowModalRegister}\r\n        isShowHeader\r\n        size=\"lg\"\r\n        title=\"실증단지 계정 등록 양식\"\r\n        isShowIconClose\r\n        handleCloseIcon={() => setIsShowModalRegister(false)}\r\n        isShowFooter\r\n        handleClose={() => handleRegisterSubmit()}\r\n        textBtnRight=\"등록요청\"\r\n      >\r\n        <SignIn\r\n          dataRegister={dataRegister}\r\n          handleKeyDown={handleKeyDownRegister}\r\n          handleChangeRegister={handleChangeRegister}\r\n          handleChangeOptionCompany={handleChangeOptionCompany}\r\n          listCompany={listCompany}\r\n          texTerror={error}\r\n          listItemDevice={listItemDevice}\r\n          handleAddListDevice={handleAddListDevice}\r\n          handleRemove={handleRemove}\r\n          listInverter={listInverter}\r\n          listArea={listArea}\r\n          listType={listType}\r\n        />\r\n      </ModalPopup>\r\n      {/* Modal register success */}\r\n      <ModalPopup\r\n        isOpen={isModalRegisterSuccess}\r\n        isShowHeader\r\n        title=\"알림\"\r\n        isShowIconClose\r\n        customClass=\"z-index9999\"\r\n        isShowFooter\r\n        handleCloseIcon={() => {\r\n          setIsModalRegisterSuccess(false);\r\n          setIsShowModalRegister(false);\r\n          setListItemDevice(itemDeviceDefault);\r\n          setDataRegister([dataRegisterDefault]);\r\n        }}\r\n        handleClose={() => {\r\n          setIsModalRegisterSuccess(false);\r\n          setIsShowModalRegister(false);\r\n          setListItemDevice([itemDeviceDefault]);\r\n          setDataRegister(dataRegisterDefault);\r\n        }}\r\n        textBtnRight=\"확인\"\r\n      >\r\n        등록 요청이 완료되었습니다.\r\n      </ModalPopup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"sourceRoot":""}