{"version":3,"sources":["commons/components/TitleHeader/index.js","commons/components/Card/CardItem.js","commons/components/Card/index.js","modules/solarDashboard/components/index.js"],"names":["TitleHeader","title","onClick","className","id","descSub","onKeyPress","role","tabIndex","src","images","icon_title_header","alt","defaultProps","memo","CardItem","name","specifications","unit","formatNumber","Card","isLogoTop","listCompany","logoClick","titleClick","customClass","isCardCompany","isEvent","amountElectricDay","amountElectricMonth","electricRealtime","ratePower","cumulativeElectric","logo","IMAGES","icon_event_card","map","item","key","com_logo_path","thumbnail","SolarDashboard","history","useHistory","dispatch","useDispatch","useSelector","state","solarDashboard","listDevice","total","isLoading","useState","activePage","setActivePage","useEffect","getListDeviceTestSolarDashboard","renderInverter","event","push","ROUTERS","TEST_SOLAR_STATUS_DEVELOP","setCompanyId","handleCardClick","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","pageNumber","itemClass","linkClass","firstPageText","double_arrow_left","lastPageText","double_arrow_right","prevPageText","arrow_left","nextPageText","arrow_right1"],"mappings":"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","file":"static/js/38.c4d0eda4.chunk.js","sourcesContent":["// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  descSub?: string,\r\n};\r\n\r\nexport const TitleHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  descSub = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title ${className}`}>\r\n      <div\r\n        className=\"wrap-title__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_title_header} alt=\"\" />\r\n        <div className=\"wrap-title__header__name\">\r\n          {title}\r\n          <span>{descSub}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  id: '',\r\n  descSub: '',\r\n};\r\n\r\nexport default memo<Props>(TitleHeader);\r\n","// @flow\nimport React from 'react';\nimport { formatNumber } from 'helpers';\n\ntype Props = {\n  name?: string,\n  specifications?: string,\n  unit?: string,\n};\n\nconst CardItem = ({ name = '', specifications = '', unit = '' }: Props) => {\n  return (\n    <div className=\"card__item\">\n      <p className=\"card__item__name\">{name}</p>\n      <div className=\"card__item__group-specifications\">\n        <span className=\"card__item__number\">\n          {formatNumber(specifications)}\n        </span>\n        <span className=\"card__item__unit\">{unit}</span>\n      </div>\n    </div>\n  );\n};\n\nCardItem.defaultProps = {\n  name: '',\n  specifications: '',\n  unit: '',\n};\n\nexport default CardItem;\n","// @flow\r\nimport React, { memo } from 'react';\r\nimport IMAGES from 'themes/images';\r\n\r\nimport CardItem from './CardItem';\r\n\r\ntype Props = {\r\n  isLogoTop?: boolean,\r\n  title?: string,\r\n  listCompany?: any,\r\n  logoClick: Function,\r\n  titleClick: Function,\r\n  onClick: Function,\r\n  customClass?: string,\r\n  isCardCompany?: boolean,\r\n  isEvent?: boolean,\r\n  amountElectricDay?: number,\r\n  amountElectricMonth?: number,\r\n  electricRealtime?: number,\r\n  ratePower?: number,\r\n  cumulativeElectric?: number,\r\n};\r\n\r\nexport const Card = ({\r\n  isLogoTop = false,\r\n  title = '',\r\n  listCompany = [],\r\n  logoClick,\r\n  titleClick,\r\n  onClick,\r\n  customClass = '',\r\n  isCardCompany = false,\r\n  isEvent = false,\r\n  amountElectricDay = 0,\r\n  amountElectricMonth = 0,\r\n  electricRealtime = 0,\r\n  ratePower = 0,\r\n  cumulativeElectric = 0,\r\n}: Props) => {\r\n  return (\r\n    <div\r\n      className={`card ${customClass}`}\r\n      onClick={onClick}\r\n      role=\"presentation\"\r\n    >\r\n      {isLogoTop && (\r\n        <div className=\"card__company card__company--top\">\r\n          <img\r\n            src={listCompany.logo}\r\n            alt=\"logocompany\"\r\n            className=\"card__company__item\"\r\n          />\r\n        </div>\r\n      )}\r\n      <div className={`card__header ${isEvent ? 'header-event' : ''}`}>\r\n        <p\r\n          className={`card__title ${isEvent ? 'card__event' : ''}`}\r\n          onClick={titleClick}\r\n          role=\"presentation\"\r\n        >\r\n          {title}\r\n        </p>\r\n        {isEvent && (\r\n          <img\r\n            src={IMAGES.icon_event_card}\r\n            alt=\"\"\r\n            className=\"card__logo-event\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div\r\n        className={\r\n          isCardCompany ? 'card__body card__body--company' : 'card__body'\r\n        }\r\n      >\r\n        {/* list item in card */}\r\n        <div className=\"card__list\">\r\n          <CardItem\r\n            name=\"실시간 발전량\"\r\n            specifications={electricRealtime}\r\n            unit=\"kWh\"\r\n          />\r\n          <CardItem name=\"성능비\" specifications={ratePower} unit=\"%\" />\r\n          <CardItem name=\"금일\" specifications={amountElectricDay} unit=\"kWh\" />\r\n          <CardItem\r\n            name=\"금월\"\r\n            specifications={amountElectricMonth}\r\n            unit=\"kWh\"\r\n          />\r\n          <CardItem\r\n            name=\"누적발전량\"\r\n            specifications={cumulativeElectric}\r\n            unit=\"MW\"\r\n          />\r\n        </div>\r\n\r\n        {!isLogoTop && (\r\n          <div className=\"card__company\">\r\n            {/* list company in card */}\r\n            {listCompany.map((item) => (\r\n              <img\r\n                key={item.id}\r\n                // src={IMAGES.default_logo}\r\n                src={item?.com_logo_path?.thumbnail}\r\n                alt=\"logocompany\"\r\n                className=\"card__company__item\"\r\n                onClick={() => logoClick(item?.id)}\r\n                role=\"presentation\"\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.defaultProps = {\r\n  title: '',\r\n  listCompany: [],\r\n  isLogoTop: false,\r\n  customClass: '',\r\n  isCardCompany: false,\r\n  isEvent: false,\r\n  amountElectricDay: 0,\r\n  amountElectricMonth: 0,\r\n  electricRealtime: 0,\r\n  ratePower: 0,\r\n  cumulativeElectric: 0,\r\n};\r\n\r\nexport default memo<Props>(Card);\r\n","import { Card } from 'commons/components/Card';\r\nimport Loading from 'commons/components/Loading';\r\nimport { TitleHeader } from 'commons/components/TitleHeader';\r\n// import MainLayout from 'layout/MainLayout';\r\nimport ROUTERS from 'constants/routers';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Pagination from 'react-js-pagination';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport IMAGES from 'themes/images';\r\nimport { getListDeviceTestSolarDashboard, setCompanyId } from '../redux';\r\n\r\nconst SolarDashboard = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const { listDevice, total, isLoading } = useSelector(\r\n    (state) => state?.solarDashboard\r\n  );\r\n\r\n  const [activePage, setActivePage] = useState(1);\r\n  const perPage = 10;\r\n\r\n  // pagination page\r\n  const handlePageChange = (pageNumber) => {\r\n    setActivePage(pageNumber);\r\n  };\r\n\r\n  // get list device of company\r\n  useEffect(() => {\r\n    dispatch(getListDeviceTestSolarDashboard());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleCardClick = (id) => {\r\n    history.push(ROUTERS.TEST_SOLAR_STATUS_DEVELOP);\r\n    dispatch(setCompanyId({ id }));\r\n  };\r\n\r\n  const renderInverter =\r\n    listDevice &&\r\n    listDevice.map((item) => {\r\n      const {\r\n        id,\r\n        name,\r\n        amountElectricDay,\r\n        amountElectricMonth,\r\n        electricRealtime,\r\n        ratePower,\r\n        cumulativeElectric,\r\n        event,\r\n      } = item;\r\n      return (\r\n        <Card\r\n          key={id}\r\n          customClass=\"card-company\"\r\n          isCardCompany\r\n          title={name}\r\n          isEvent={!!event}\r\n          amountElectricDay={amountElectricDay}\r\n          amountElectricMonth={amountElectricMonth}\r\n          electricRealtime={electricRealtime}\r\n          ratePower={ratePower}\r\n          cumulativeElectric={cumulativeElectric}\r\n          onClick={() => handleCardClick(id)}\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n      <div className=\"content-wrap\">\r\n        <TitleHeader\r\n          title=\"테스트(실증단지)\"\r\n          descSub=\"설치된 목업들에 데이터를 확인하실 수 있습니다.\"\r\n        />\r\n\r\n        <div className=\"list-company test-dashboard\">{renderInverter}</div>\r\n\r\n        <div className=\"opacity d-block pagination\">\r\n          {total > perPage && (\r\n            <div className=\"wrapper-device__pagination\">\r\n              <Pagination\r\n                activePage={activePage}\r\n                itemsCountPerPage={perPage}\r\n                totalItemsCount={total}\r\n                pageRangeDisplayed={9}\r\n                onChange={handlePageChange}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n                firstPageText={\r\n                  <img\r\n                    src={IMAGES.double_arrow_left}\r\n                    alt=\"\"\r\n                    className=\"double-prev\"\r\n                  />\r\n                }\r\n                lastPageText={\r\n                  <img\r\n                    src={IMAGES.double_arrow_right}\r\n                    alt=\"\"\r\n                    className=\"double-prev\"\r\n                  />\r\n                }\r\n                prevPageText={\r\n                  <img src={IMAGES.arrow_left} alt=\"\" className=\"double-prev\" />\r\n                }\r\n                nextPageText={\r\n                  <img\r\n                    src={IMAGES.arrow_right1}\r\n                    alt=\"\"\r\n                    className=\"double-prev\"\r\n                  />\r\n                }\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SolarDashboard;\r\n"],"sourceRoot":""}