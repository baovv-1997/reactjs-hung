{"version":3,"sources":["commons/components/TitleHeader/titleSub.js","customHooks/useClickOutSide.js","customHooks/useDebounce.js","commons/components/Search/AutoSuggest.js","commons/components/Search/index.js","commons/components/Header/ModalEvent.js","commons/components/Header/index.js","constants/listMenu.js","layout/Menu/Submenu.js","layout/Menu/MenuItem.js","layout/Menu/index.js","layout/MainLayout/index.js","commons/components/TitleHeader/index.js","commons/components/CheckBox/index.js","constants/listKey.js","commons/components/MultipleCheckbox/index.js","commons/components/Table/ModalSortTable.js","commons/components/Table/TableHead.js","commons/components/Table/TableRow.js","commons/components/Table/index.js","commons/components/GroupSelectSidebar/index.js","commons/components/LengthChart/index.js","../node_modules/react-bootstrap/esm/Table.js","constants/index.js","constants/label.js","commons/components/Label/LabelStatus/index.js","modules/testSolarMonitoringStatus/components/constant.js","modules/testSolarMonitoringStatus/components/statusDevelop/BoxGroup.js","modules/testSolarMonitoringStatus/components/statusDevelop/GroupCompareChart.js","modules/testSolarMonitoringStatus/components/statusDevelop/GroupActionDownload.js","modules/testSolarMonitoringStatus/components/statusDevelop/ItemContentTab.js","modules/testSolarMonitoringStatus/components/statusDevelop/index.js"],"names":["TitleSubHeader","title","onClick","className","id","titleLight","onKeyPress","role","tabIndex","src","images","icon_arrow","alt","defaultProps","memo","useClickOutside","ref","handler","rest","useEffect","listener","event","current","contains","target","iconRef","document","addEventListener","removeEventListener","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","setTimeout","clearTimeout","AutoSuggest","options","map","option","index","key","label","Search","placeholder","handleIconClick","customClass","onChange","setSearchTerm","handleKeyDown","isSpinner","display","setDisplay","wrapperRef","useRef","handleClickOutside","wrap","window","e","icon_search","length","search","searchValue","console","log","ModalEvent","isShow","Header","isSearch","isSelect","eventCount","dispatch","useDispatch","useSelector","state","main","listPositions","optionsCompany","optionsPosition","optionDropdown","setOptionDropdown","setIsShow","searchTerm","content","modal","setModal","debouncedSearchTerm","getCompanySearchMain","keyword","getPositionSearchMain","indexDefault","findIndex","item","includes","searchSubmit","getCardMeasureSearchPosition","type","pos_id","getCardMeasureSearchCompany","com_id","Select","listItem","ops","disabled","isSearchable","blurInputOnSelect","icon_event","Modal","isOpen","isShowHeader","isShowIconClose","isShowFooter","handleCloseIcon","handleClose","textBtnRight","DASHBOARD","icon","IMAGES","iconGraph","to","ROUTERS","ROOT","items","name","sub","DASHBOARD_AREA","DASHBOARD_COMPANY","STATUS_COMPANY","STATUS_COMPANY_BY_AREA","OPERATION_STATUS_BY_COMPANY","OPERATION_STATUS_BY_AREA","STATISTICS_DEVELOP","STATISTICS_DEVELOP_AREA","OPERATION_STATISTICS_COMPANY","OPERATION_STATISTICS_AREA","SETUP","setup","MOCKUP","mockUp","TEST_DASHBOARD","TEST_MOCKUP_STATUS","TEST_MOCKUP_OPERATION","TEST_MOCKUP_STATISTICS_DEVELOP","TEST_MOCKUP_STATISTICS_OPERATION","SOLAR_DASHBOARD","TEST_SOLAR_STATUS_DEVELOP","TEST_SOLAR_STATUS_OPERATION","TEST_SOLAR_STATISTICS_DEVELOP","TEST_SOLAR_STATISTICS_OPERATION","itemSub","listNestSub","isActiveNestSub","handleClickItemSub","location","nestSubClicking","setNestSubClicking","renderNestedSub","activeNestItem","pathname","stopPropagation","handleClickNestSub","faChevronRight","listSub","handleClickItem","isActive","subMenuClicking","commons","setListNestSub","activeSub","setActiveSub","active","renderSub","nestSub","withRouter","menuClicking","setMenuClicking","renderMenuList","listMenu","Button","btn_logout","MainLayout","children","isProcessing","setIsOpen","refMenu","mainContent","showHeader","classHeight","innerHeight","Loading","innerRef","TitleHeader","descSub","icon_title_header","CheckBox","handleToggleCheckbox","isChecked","subLabel","htmlFor","checked","listType","listPaginationType","listCheckBox","submitValue","optionDefault","checkedItems","setCheckedItems","handleChange","filter","toString","ModalSortTable","handleCheckboxSort","listOption","listValueOption","setListValueOption","list","TableHead","listItems","showModalSort","handleShowModalSorting","keyItem","ico_event2","TableRow","rowItem","onClickTableRow","isClickTableColumn","isShowId","rowActive","onClickTableColumn","activeClass","Object","keys","TableData","tableHeads","tableBody","onClickRow","handleClickBtnDetail","renderBodyTable","Table","striped","bordered","hover","responsive","colSpan","GroupSelect","paramsSearch","listStatusCompanySelect","handleChangeSearch","renderListCompany","company","posSelected","listMockupType","listParkingLot","dataLengthChart","style","borderColor","color","React","forwardRef","_ref","bsPrefix","borderless","size","variant","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","TIME_REQUEST","COLOR_LABEL","POWER","TEMPERATURE","INSOLATION","LabelStatus","data","isPower","isTemperature","isInsolation","unit","icon_power","icon_temperature","icon_insolation","itemUnit","headTestMockupStatus","headTestSolarMonitoringOperationStatus","headTestMockupStatisticsOfModule","powerData","performanceData","insolationData","power","insolation","performance","handleDownloadTrend","pagination","noOptionsMessage","listMockupDataCompany","dataChart","LengthChart","StatusByAreaCompany","testSolarMonitoringStatus","dataBox","listDataTableRaw","total","randomNumber","setRandomNumber","comList","defaultSearch","page","mockupType","parkingLot","setParamsSearch","interval","setInterval","Math","random","clearInterval","avg_prod","toLocaleString","prod_ratio","max_module_temp","module_temp","max_rad","current_rad","CommonAction","handleGetCardInformation","useCallback","ActionStatusGenerator","handleGetDataTrendChart","params","handleGetDataRawTable","per_page","GroupSelectSidebar","slice","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass"],"mappings":"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,CACExH,GAAI,EACJwH,KAAM,4BAER,CACExH,GAAI,EACJwH,KAAM,6BAER,CACExH,GAAI,EACJwH,KAAM,6BAER,CACExH,GAAI,EACJwH,KAAM,mCAER,CACExH,GAAI,EACJwH,KAAM,sBAER,CACExH,GAAI,EACJwH,KAAM,mCAER,CACExH,GAAI,GACJwH,KAAM,uBAIGuK,EAAyC,CACpD,CACE/R,GAAI,EACJwH,KAAM,OAER,CACExH,GAAI,EACJwH,KAAM,6BAER,CACExH,GAAI,EACJwH,KAAM,4BAER,CACExH,GAAI,EACJwH,KAAM,wBAER,CACExH,GAAI,EACJwH,KAAM,4BAER,CACExH,GAAI,EACJwH,KAAM,sBAER,CACExH,GAAI,EACJwH,KAAM,sBAER,CACExH,GAAI,EACJwH,KAAM,gCAER,CACExH,GAAI,EACJwH,KAAM,gCAER,CACExH,GAAI,EACJwH,KAAM,mBAER,CACExH,GAAI,EACJwH,KAAM,gBAER,CACExH,GAAI,GACJwH,KAAM,uBAIGwK,EAAmC,CAC9C,CACEhS,GAAI,EACJwH,KAAM,OAER,CACExH,GAAI,EACJwH,KAAM,6BAER,CACExH,GAAI,EACJwH,KAAM,4BAER,CACExH,GAAI,EACJwH,KAAM,wBAER,CACExH,GAAI,EACJwH,KAAM,6BAGR,CACExH,GAAI,EACJwH,KAAM,4BAER,CACExH,GAAI,EACJwH,KAAM,4BAER,CACExH,GAAI,EACJwH,KAAM,mCAER,CACExH,GAAI,EACJwH,KAAM,qC,+LCvGK9G,kBApBS,SAAC,GAAD,IACtBuR,EADsB,EACtBA,UACAC,EAFsB,EAEtBA,gBACAC,EAHsB,EAGtBA,eAHsB,OAKtB,yBAAKpS,UAAU,aACb,kBAACqR,EAAA,EAAD,CAAavL,KAAI,OAAEoM,QAAF,IAAEA,OAAF,EAAEA,EAAWpM,KAAMwL,KAAI,OAAEY,QAAF,IAAEA,OAAF,EAAEA,EAAWZ,KAAMC,SAAO,IAClE,kBAACF,EAAA,EAAD,CACEvL,KAAI,OAAEqM,QAAF,IAAEA,OAAF,EAAEA,EAAiBrM,KACvBwL,KAAI,OAAEa,QAAF,I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","file":"static/js/26.a7fa57ea.chunk.js","sourcesContent":["// @flow\n// libs\nimport React, { memo } from 'react';\nimport images from 'themes/images';\n\ntype Props = {\n  title: string,\n  onClick?: Function,\n  className?: string,\n  id?: string,\n  titleLight?: string,\n};\n\nexport const TitleSubHeader = ({\n  title,\n  onClick = () => {},\n  className = '',\n  id,\n  titleLight = '',\n}: Props) => {\n  return (\n    <div id={id} className={`wrap-title-sub ${className}`}>\n      <div\n        className=\"wrap-title-sub__header\"\n        onClick={onClick}\n        onKeyPress={() => {}}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <img src={images.icon_arrow} alt=\"\" />\n        <div className=\"wrap-title-sub__header__name\">\n          {title}\n          <span>{titleLight}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTitleSubHeader.defaultProps = {\n  className: '',\n  onClick: () => {},\n  titleLight: '',\n  id: '',\n};\n\nexport default memo<Props>(TitleSubHeader);\n","import { useEffect } from 'react';\n\n/**\n * Function: useOnClickOutside\n * A custom hook that use to trigger an event if have action click outside a ref's element.\n * @param {object} ref: a reference of element that we need to detect\n * @param {function} handler: a function that used to trigger event if have click event outside of element\n */\nconst useClickOutside = (ref, handler, { ...rest }) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element\n      if (\n        !ref.current ||\n        ref.current.contains(event.target) ||\n        !rest.iconRef.current ||\n        rest.iconRef.current.contains(event.target)\n      ) {\n        return;\n      }\n\n      // Fire event if clicking outside ref's element\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n    };\n  }, [ref, handler, rest.iconRef]);\n};\n\nexport default useClickOutside;\n","import { useEffect, useState } from 'react';\n\n/**\n * Function: useDebounce\n * @param {string} value \n * @param {number} delay \n * @returns \n */\n\nconst useDebounce = (value, delay) => {\n\n    // State and setter for debounce value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        // update debounced value after delay\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        // cancel the timeout if value changes\n        return () => {\n            clearTimeout(handler);\n        }\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;","// @flow\nimport React, { memo } from 'react';\n\ntype Props = {\n  onClick: Function,\n  options?: Array<{ id: number, value: number, label: string }>\n};\n\nconst AutoSuggest = ({ onClick, options = [] }: Props) => {\n  return (\n    <div className=\"auto-suggest\">\n      {options\n        .map((option, index) => (\n          <p\n            className=\"auto-suggest__item\"\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            onClick={() => onClick(option)}\n            role=\"presentation\"\n          >\n            {option.label}\n          </p>\n        ))}\n    </div>\n  );\n};\n\nAutoSuggest.defaultProps = {\n  options: [],\n};\n\nexport default memo < Props > (AutoSuggest);\n","// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport AutoSuggest from './AutoSuggest';\n\ntype Props = {\n  placeholder?: string,\n  handleIconClick?: Function,\n  customClass?: string,\n  value?: string,\n  onChange?: Function,\n  setSearchTerm?: Function,\n  options?: Array<{ id: number, value: number, label: string }>,\n  handleKeyDown: Function,\n  isSpinner?: boolean,\n};\n\nconst Search = ({\n  placeholder,\n  handleIconClick = () => { },\n  customClass = '',\n  value = '',\n  onChange = () => { },\n  setSearchTerm = () => { },\n  options = [],\n  handleKeyDown,\n  isSpinner = false\n}: Props) => {\n  const [display, setDisplay] = useState(false);\n\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      window.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n\n  const updateSearchInput = (searchValue) => {\n    console.log(searchValue, \"searchValue\");\n    setSearchTerm(searchValue);\n    setDisplay(false);\n  };\n\n  return (\n    <div ref={wrapperRef} className={`search ${customClass}`}>\n      <input\n        className=\"search__input\"\n        onClick={() => setDisplay(true)}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onKeyPress={(e) => handleKeyDown(e)}\n      />\n\n      {isSpinner && <div className=\"spinner\" />}\n\n      <img\n        src={images.icon_search}\n        alt=\"Icon Search\"\n        className=\"search__icon\"\n        onClick={handleIconClick}\n        role=\"presentation\"\n      />\n      {(display && options.length) ? <AutoSuggest search={value} onClick={updateSearchInput} options={options} /> : null}\n    </div>\n  );\n};\n\nSearch.defaultProps = {\n  placeholder: '',\n  customClass: '',\n  value: '',\n  onChange: () => { },\n  setSearchTerm: () => { },\n  handleIconClick: () => { },\n  options: [],\n  isSpinner: false,\n};\n\nexport default memo < Props > (Search);\n","// @flow\nimport React from 'react';\n\ntype Props = {\n  isShow?: boolean,\n  wrapperRef: any,\n};\nconst ModalEvent = ({ isShow = false, wrapperRef }: Props) => {\n  return (\n    <div\n      className={`modal__event ${isShow ? 'show-modal-event' : ''}`}\n      ref={wrapperRef}\n    >\n      <div className=\"modal__event-title\">이벤트 알림</div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n    </div>\n  );\n};\n\nModalEvent.defaultProps = {\n  isShow: false,\n};\n\nexport default ModalEvent;\n","/* eslint-disable react-hooks/exhaustive-deps */\n// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport useClickOutside from 'customHooks/useClickOutSide';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useDebounce from 'customHooks/useDebounce';\nimport { getCompanySearchMain, getPositionSearchMain, getCardMeasureSearchPosition, getCardMeasureSearchCompany } from 'modules/main/redux';\nimport Search from '../Search';\nimport SelectDropdown from '../Select';\nimport ModalEvent from './ModalEvent';\nimport ModalPopup from '../Modal';\n\ntype Props = {\n  isSearch?: boolean,\n  isSelect?: boolean,\n  eventCount?: number,\n};\n\nconst Header = ({\n  isSearch = false,\n  isSelect = false,\n  eventCount = 0,\n}: Props) => {\n\n  const dispatch = useDispatch();\n  const { listPositions, optionsCompany, optionsPosition, isSpinner } = useSelector(state => state?.main);\n  const [optionDropdown, setOptionDropdown] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const [searchTerm, setSearchTerm] = useState({ label: '', value: '', key: '', id: '' });\n  const [modal, setModal] = useState({ isShow: false, content: '' });\n\n  const wrapperRef = useRef(null);\n  const iconRef = useRef(null);\n\n  const debouncedSearchTerm = useDebounce(searchTerm.label, 500);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      dispatch(getCompanySearchMain({ keyword: debouncedSearchTerm }));\n      dispatch(getPositionSearchMain({ keyword: debouncedSearchTerm }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchTerm])\n\n  // set option dropdown value when listposition != [];\n  useEffect(() => {\n    const indexDefault = listPositions.findIndex((item) => item?.label.includes('본관 남측'));\n    setOptionDropdown(listPositions[indexDefault]);\n  }, [listPositions])\n\n  const searchSubmit = () => {\n    const type = searchTerm?.key;\n    switch (type) {\n      case 'posId':\n        console.log('getposId');\n        dispatch(getCardMeasureSearchPosition({ type: 'summary', pos_id: searchTerm.id }));\n        break;\n      case 'comId':\n        dispatch(getCardMeasureSearchCompany({ type: 'summary', com_id: searchTerm.id }));\n        break;\n      default:\n        setModal({ ...modal, isShow: true, content: '구역명이나 업체명을 정확히 입력해주세요' });\n        break;\n    }\n  }\n\n  // Handle Icon search Click\n  const handleIconClick = () => {\n    searchSubmit();\n  }\n\n  // Handle event press key enter search\n  const handleKeyDownSearch = (e) => {\n    if (e.key === 'Enter') {\n      searchSubmit();\n    }\n  }\n\n  // when input search change set value\n  const handleSearchChange = (e) => {\n    const { value } = e.target;\n    setSearchTerm({ label: value });\n  };\n\n  // handle click outside event\n  useClickOutside(\n    wrapperRef,\n    () => {\n      if (isShow) {\n        setIsShow(false);\n      }\n    },\n    { iconRef }\n  );\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        {isSearch ? (\n          <Search\n            placeholder=\"회사명이나 구역명으로 검색해보세요.\"\n            value={searchTerm.label}\n            onChange={handleSearchChange}\n            setSearchTerm={setSearchTerm}\n            options={[...optionsPosition, ...optionsCompany]}\n            handleIconClick={handleIconClick}\n            handleKeyDown={handleKeyDownSearch}\n            isSpinner={isSpinner}\n          />\n        ) : (\n          ''\n        )}\n        {isSelect ? (\n          <SelectDropdown\n            placeholder=\"List Selects\"\n            listItem={listPositions}\n            onChange={(ops) => {\n              setOptionDropdown(ops);\n            }}\n            option={optionDropdown}\n            disabled={false}\n            isSearchable={false}\n            blurInputOnSelect={false}\n            customClass=\"header__select\"\n          />\n        ) : (\n          ''\n        )}\n      </div>\n      <div className=\"header__right\">\n        <div className=\"header__event\">\n          <img\n            src={images.icon_event}\n            alt=\"Icon Event\"\n            className=\"header__icon\"\n            onClick={() => setIsShow(!isShow)}\n            role=\"presentation\"\n            ref={iconRef}\n          />\n          {eventCount > 0 ? (\n            <span className=\"header__notification\">{eventCount}</span>\n          ) : (\n            ''\n          )}\n        </div>\n\n        <div className=\"header__label-event\">\n          <span className=\"header__label-content\">이벤트발생</span>\n\n          {/* Modal event */}\n\n          <ModalEvent isShow={isShow} wrapperRef={wrapperRef} />\n        </div>\n      </div>\n      <ModalPopup\n        isOpen={modal.isShow}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() =>\n          setModal({\n            ...modal,\n            isShow: false,\n            content: '',\n          })\n        }\n        handleClose={() =>\n          setModal({\n            ...modal,\n            isShow: false,\n            content: '',\n          })\n        }\n        textBtnRight=\"확인\"\n      >\n        {modal.content}\n      </ModalPopup>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  eventCount: 0,\n};\n\nexport default memo < Props > (Header);\n","import IMAGES from 'themes/images';\nimport ROUTERS from './routers';\n\nexport const DASHBOARD = {\n  id: 1,\n  label: '실증단지',\n  icon: IMAGES.iconGraph,\n  to: ROUTERS.ROOT,\n  items: [\n    {\n      id: 1,\n      name: '대시보드',\n      sub: [\n        {\n          id: 1,\n          name: '통합 대시보드',\n          to: ROUTERS.ROOT,\n        },\n        {\n          id: 2,\n          name: '구역 대시보드',\n          to: ROUTERS.DASHBOARD_AREA,\n        },\n        {\n          id: 3,\n          name: '업체 대시보드',\n          to: ROUTERS.DASHBOARD_COMPANY,\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '현황',\n      sub: [\n        {\n          id: 1,\n          name: '발전 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.STATUS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.STATUS_COMPANY_BY_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_AREA,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: '통계',\n      sub: [\n        {\n          id: 1,\n          name: '발전 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_AREA,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nexport const SETUP = {\n  id: 2,\n  label: '기기 관리',\n  icon: IMAGES.setup,\n  items: [\n    { id: 1, name: '계정 관리', to: '/accounts' },\n    { id: 2, name: '기기 관리', to: '/devices' },\n  ],\n};\n\nexport const MOCKUP = {\n  id: 1,\n  label: '실증테스트',\n  icon: IMAGES.mockUp,\n  items: [\n    {\n      id: 1,\n      name: '테스트(목업)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.TEST_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_MOCKUP_STATUS,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_MOCKUP_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '테스트(실증단지)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.SOLAR_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n  itemSub: {\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listNestSub: Array<{\n    id: any,\n    to: string,\n    name: string,\n  }>,\n  isActiveNestSub: boolean,\n  handleClickItemSub: Function,\n  location: {\n    pathname: string,\n  },\n};\n\nconst Submenu = ({\n  itemSub,\n  listNestSub,\n  isActiveNestSub,\n  handleClickItemSub,\n  location,\n}: Props) => {\n  const [nestSubClicking, setNestSubClicking] = useState({});\n\n  const handleClickNestSub = (e, item) => {\n    e.stopPropagation();\n    setNestSubClicking(item);\n  };\n\n  const renderNestedSub =\n    listNestSub &&\n    listNestSub.length > 0 &&\n    listNestSub.map((item) => {\n      const activeNestItem =\n        item.name === nestSubClicking.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <li\n          className=\"item\"\n          onClick={(e) => handleClickNestSub(e, item)}\n          tabIndex={0}\n          role=\"menuitem\"\n          onKeyPress={() => {}}\n          key={item.id}\n        >\n          <Link\n            to={item?.to || '#'}\n            className={`item__link item-link-nest-sub ${\n              activeNestItem ? 'active-link' : ''\n            }`}\n          >\n            <p className=\"item__link__label item-link-label-nest-sub\">\n              {item.name}\n            </p>\n          </Link>\n        </li>\n      );\n    });\n\n  const { to, name, sub } = itemSub;\n\n  return (\n    <li\n      className=\"item\"\n      onClick={(e) => handleClickItemSub(e, itemSub, isActiveNestSub)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to || '#'}\n        className={`item__link ${\n          isActiveNestSub ? 'active' : ''\n        } item-link-sub ${isActiveNestSub && !sub ? 'active-link' : ''}`}\n      >\n        <p className=\"item__link__label item-link-label-sub\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n\n      <ul className={`menu__listsub ${isActiveNestSub ? 'open' : ''}`}>\n        {renderNestedSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(Submenu);\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { setNestSubClicking } from 'commons/redux';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport Submenu from './Submenu';\n\ntype Props = {\n  item: {\n    id: number,\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listSub: Array<{\n    id: number,\n    name: string,\n    to: string,\n    sub: Array<{}>,\n  }>,\n  handleClickItem: Function,\n  isActive: boolean,\n  location: {\n    pathname: string,\n  },\n};\n\nconst MenuItem = ({\n  item,\n  listSub,\n  handleClickItem,\n  isActive,\n  location,\n}: Props) => {\n  const dispatch = useDispatch();\n\n  const subMenuClicking = useSelector((state) => state.commons.subMenuClicking);\n  const { to, name, sub } = item;\n  const [listNestSub, setListNestSub] = useState(subMenuClicking?.sub);\n  const [activeSub, setActiveSub] = useState(false);\n\n  const handleClickItemSub = (e, itemSub, active) => {\n    e.stopPropagation();\n    setActiveSub(active);\n\n    dispatch(setNestSubClicking(itemSub));\n    setListNestSub(itemSub.sub);\n    console.log('itemSub', itemSub);\n    if (itemSub.name === subMenuClicking.name && active) {\n      setNestSubClicking({});\n    }\n  };\n  console.log('listSub', listSub);\n  const renderSub =\n    listSub &&\n    listSub.length > 0 &&\n    listSub.map((itemSub) => {\n      const isActiveNestSub =\n        subMenuClicking.name === itemSub.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <Submenu\n          key={itemSub.id}\n          itemSub={itemSub}\n          nestSub={itemSub.sub}\n          handleClickItemSub={handleClickItemSub}\n          listNestSub={listNestSub}\n          isActiveNestSub={isActiveNestSub}\n          location={location}\n        />\n      );\n    });\n\n  return (\n    <li\n      className=\"item\"\n      onClick={() => handleClickItem(item, isActive)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to || '#'}\n        className={`item__link ${isActive ? 'active' : ''} ${\n          isActive && !sub ? 'active-link' : ''\n        }`}\n      >\n        <p className=\"item__link__label\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n      <ul className={`menu__listsub ${isActive || activeSub ? 'open' : ''}`}>\n        {renderSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(MenuItem);\n","// @flow\n// libs\nimport React, { memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DASHBOARD, SETUP, MOCKUP } from 'constants/listMenu';\nimport { setMenuClicking, setNestSubClicking } from 'commons/redux';\nimport IMAGES from 'themes/images';\nimport { Button } from 'commons/components/Button';\nimport MenuItem from './MenuItem';\n\ntype Props = {\n  location: {\n    pathname: string,\n  },\n};\n\nconst Menu = ({ location }: Props) => {\n  const dispatch = useDispatch();\n  const menuClicking = useSelector((state) => state?.commons?.menuClicking);\n\n  const handleClickItem = (item, active) => {\n    dispatch(setMenuClicking(item));\n\n    if (item.name === menuClicking.name && active) {\n      dispatch(setMenuClicking({}));\n    }\n\n    if (item.id !== menuClicking?.id) {\n      dispatch(setNestSubClicking({}));\n    }\n  };\n\n  const renderMenuList = (listMenu) => {\n    return listMenu.items.map((item) => {\n      const isActive =\n        menuClicking.name === item.name || location.pathname.includes(item.to);\n      return (\n        <MenuItem\n          key={item.id}\n          item={item}\n          listSub={item?.sub}\n          handleClickItem={handleClickItem}\n          menuClicking={menuClicking}\n          isActive={isActive}\n          location={location}\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      <div className=\"menu\">\n        <div className=\"wrap-menu\">\n          <h1 className=\"menu__head\">실증단지</h1>\n          <div className=\"wrapper-menu\">\n            <div className=\"menu__wraper-head\">\n              <p className=\"menu__info\">\n                <img src={DASHBOARD?.icon} alt=\"menu\" />\n                <span>{DASHBOARD?.label}</span>\n              </p>\n            </div>\n            <ul className=\"menu__list\">{renderMenuList(DASHBOARD)}</ul>\n\n            <div className=\"menu__wraper-head\">\n              <p className=\"menu__info\">\n                <img src={MOCKUP?.icon} alt=\"menu\" />\n                <span>{MOCKUP?.label}</span>\n              </p>\n            </div>\n            <ul className=\"menu__list\">{renderMenuList(MOCKUP)}</ul>\n\n            <div className=\"menu__wraper-head\">\n              <p className=\"menu__info\">\n                <img src={SETUP?.icon} alt=\"menu\" />\n                <span>{SETUP?.label}</span>\n              </p>\n            </div>\n            <ul className=\"menu__list\">{renderMenuList(SETUP)}</ul>\n          </div>\n        </div>\n        <div className=\"logout\">\n          <div className=\"name-user\">마스터님</div>\n          <Button customClass=\"btn-logout\">\n            <img src={IMAGES.btn_logout} alt=\"\" />\n            <div>로그아웃</div>\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(memo<Props>(Menu));\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useRef } from 'react';\nimport useClickOutside from 'customHooks/useClickOutSide';\n// import Header from '../../components/Header';\nimport Loading from 'commons/components/Loading';\nimport Header from 'commons/components/Header';\n\nimport SidebarMenu from '../Menu';\n\n\ntype Props = {\n  children: React.AbstractComponent<{}>,\n  isSearch?: boolean,\n  isSelect?: boolean,\n  isProcessing?: boolean,\n};\n\nexport const MainLayout = ({\n  children,\n  isSearch = false,\n  isSelect = false,\n  isProcessing = false,\n}: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const refMenu = useRef(null);\n  const iconRef = useRef(null);\n  const mainContent = useRef(null);\n\n  useClickOutside(\n    refMenu,\n    () => {\n      if (isOpen) {\n        setIsOpen(false);\n      }\n    },\n    { iconRef }\n  );\n  let classHeight = '';\n  if (window.innerHeight < 900) {\n    classHeight = 'heightMenu';\n  }\n\n  let showHeader;\n  if (isSearch) showHeader = <Header isSearch />;\n  else if (isSelect) showHeader = <Header isSelect />;\n  else showHeader = <Header />;\n\n  return (\n    <>\n      {isProcessing && <Loading />}\n      <div className={`wrapper-content ${isOpen ? 'open' : ''}`}>\n        <div className=\"wrapper-mobile\">\n          <div\n            className={`d-mobile btn-menu  ${isOpen ? 'show' : ''}`}\n            onClick={() => {\n              setIsOpen(!isOpen);\n            }}\n            tabIndex={0}\n            role=\"menuitem\"\n            onKeyPress={() => {}}\n            ref={iconRef}\n          >\n            <span className=\"icon\" />\n          </div>\n        </div>\n        <div className={`sidebar ${isOpen ? 'show' : ''} ${classHeight}`}>\n          <SidebarMenu innerRef={refMenu} />\n        </div>\n        <div className=\"main-content\" ref={mainContent}>\n          {showHeader}\n          <div className=\"content\">\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMainLayout.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  isProcessing: false,\n};\n\nexport default MainLayout;\n","// @flow\n// libs\nimport React, { memo } from 'react';\nimport images from 'themes/images';\n\ntype Props = {\n  title: string,\n  onClick?: Function,\n  className?: string,\n  id?: string,\n  descSub?: string,\n};\n\nexport const TitleHeader = ({\n  title,\n  onClick = () => {},\n  className = '',\n  id,\n  descSub = '',\n}: Props) => {\n  return (\n    <div id={id} className={`wrap-title ${className}`}>\n      <div\n        className=\"wrap-title__header\"\n        onClick={onClick}\n        onKeyPress={() => {}}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <img src={images.icon_title_header} alt=\"\" />\n        <div className=\"wrap-title__header__name\">\n          {title}\n          <span>{descSub}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTitleHeader.defaultProps = {\n  className: '',\n  onClick: () => {},\n  id: '',\n  descSub: '',\n};\n\nexport default memo<Props>(TitleHeader);\n","// @flow\nimport React, { memo } from 'react';\n\ntype Props = {\n  id?: any,\n  name?: string,\n  label?: string,\n  disabled?: boolean,\n  customClass?: string,\n  handleToggleCheckbox: Function,\n  isChecked?: boolean,\n  onKeyPress?: Function,\n  subLabel?: string,\n};\n\nexport const CheckBox = ({\n  id,\n  name,\n  label,\n  disabled,\n  customClass = '',\n  handleToggleCheckbox,\n  isChecked = false,\n  onKeyPress = () => {},\n  subLabel = '',\n}: Props) => {\n  return (\n    <div\n      className={`${customClass} checkbox ${\n        isChecked ? 'checkbox--checked' : ''\n      }`}\n    >\n      <label className=\"checkbox__label\" htmlFor={id}>\n        <input\n          className=\"checkbox__input\"\n          type=\"checkbox\"\n          id={id}\n          name={name}\n          value={label}\n          checked={isChecked}\n          disabled={disabled}\n          onKeyPress={onKeyPress}\n          onChange={handleToggleCheckbox}\n        />\n        <span>\n          {label}\n          <i>{subLabel}</i>\n        </span>\n      </label>\n    </div>\n  );\n};\n\nCheckBox.defaultProps = {\n  id: '',\n  name: '',\n  label: '',\n  disabled: false,\n  customClass: '',\n  isChecked: false,\n  onKeyPress: () => {},\n  subLabel: '',\n};\n\nexport default memo<Props>(CheckBox);\n","const listType = [\n  {\n    id: 1,\n    value: 0,\n    label: '실증단지',\n  },\n  {\n    id: 2,\n    value: 1,\n    label: 'RTU(목업)',\n  },\n  {\n    id: 3,\n    value: 2,\n    label: '테스트(실증단지)',\n  },\n  {\n    id: 4,\n    value: 3,\n    label: '테스트(목업)',\n  },\n];\n\nconst listPaginationType = [\n  {\n    id: 1,\n    value: 6,\n    label: '6 개씩 보기',\n  },\n  {\n    id: 2,\n    value: 12,\n    label: '12 개씩 보기',\n  },\n  {\n    id: 3,\n    value: 18,\n    label: '18 개씩 보기',\n  },\n  {\n    id: 4,\n    value: 24,\n    label: '14 개씩 보기',\n  },\n  {\n    id: 4,\n    value: 30,\n    label: '30 개씩 보기',\n  },\n];\n\nexport { listType, listPaginationType };\n","// @flow\nimport React, { useState, memo } from 'react';\nimport CheckBox from '../CheckBox';\n\ntype Props = {\n  listCheckBox: Array<{\n    name: string,\n    key: string,\n    label: string,\n  }>,\n  label: string,\n  handleCheckboxDefault: Function,\n  customClass: string,\n  optionDefault: Array<string>,\n};\nexport const MutipleCheckbox = ({\n  listCheckBox,\n  label,\n  customClass,\n  submitValue,\n  optionDefault,\n}: Props) => {\n  const [checkedItems, setCheckedItems] = useState(optionDefault);\n  console.log('optionDefault', optionDefault);\n  const handleChange = (event) => {\n    const { id } = event.target;\n\n    if (!checkedItems.includes(id)) {\n      setCheckedItems([...checkedItems, id]);\n      submitValue([...checkedItems, id]);\n    } else {\n      setCheckedItems(checkedItems.filter((item) => item !== id));\n      submitValue(checkedItems.filter((item) => item !== id));\n    }\n  };\n\n  return (\n    <>\n      <div>{label}</div>\n      {listCheckBox.map((item) => (\n        <div className={`${customClass}`}>\n          <CheckBox\n            name={item.name}\n            isChecked={checkedItems.includes(item.key.toString())}\n            handleToggleCheckbox={handleChange}\n            id={item.key}\n            label={item?.label}\n          />\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default memo<Props>(MutipleCheckbox);\n","// @flow\nimport React, { memo, useState } from 'react';\nimport Button from 'commons/components/Button';\nimport MutipleCheckbox from 'commons/components/MultipleCheckbox';\n\ntype Props = {\n  handleCheckboxSort: Function,\n  listOption?: Array<{}>,\n  optionDefault?: Array<string>,\n};\n\nconst ModalSortTable = ({\n  handleCheckboxSort,\n  listOption = [],\n  optionDefault = [],\n}: Props) => {\n  const [listValueOption, setListValueOption] = useState([]);\n  const handleGetValue = (list) => {\n    setListValueOption(list);\n  };\n  return (\n    <div className=\"modal-sorting\">\n      <div className=\"checkbox-header\">이벤트명 필터</div>\n      <div className=\"list-checkbox\">\n        <MutipleCheckbox\n          listCheckBox={listOption}\n          submitValue={handleGetValue}\n          optionDefault={optionDefault}\n        />\n      </div>\n      <Button onClick={() => handleCheckboxSort(listValueOption)}>등록</Button>\n    </div>\n  );\n};\n\nModalSortTable.defaultProps = {\n  optionDefault: [],\n  listOption: [],\n};\n\nexport default memo<Props>(ModalSortTable);\n","// @flow\nimport React, { memo } from 'react';\nimport images from 'themes/images';\nimport ModalSortTable from './ModalSortTable';\n\ntype Props = {\n  listItems: Array<{ id: number, name: string }>,\n  showModalSort?: any,\n  handleCheckboxSort?: Function,\n  handleShowModalSorting?: Function,\n  listOption: Array<{}>,\n  optionDefault?: Array<string>,\n};\n\nconst TableHead = ({\n  listItems,\n  showModalSort,\n  handleCheckboxSort,\n  handleShowModalSorting,\n  listOption,\n  optionDefault = [],\n}: Props) => (\n  <tr>\n    {listItems &&\n      listItems.map((item, index) => (\n        <th\n          key={item.id}\n          className={`${\n            showModalSort && showModalSort.keyItem === index\n              ? 'cursor-pointer w-188'\n              : ''\n          }`}\n        >\n          <div\n            onKeyPress={() => {}}\n            role=\"button\"\n            tabIndex={index}\n            onClick={() =>\n              showModalSort && showModalSort.keyItem === index\n                ? handleShowModalSorting && handleShowModalSorting()\n                : {}\n            }\n          >\n            {item && item.name}\n            {showModalSort && showModalSort.keyItem === index && (\n              <img src={images.ico_event2} alt=\"\" />\n            )}\n          </div>\n          {showModalSort &&\n            showModalSort.isShow &&\n            showModalSort.keyItem === index && (\n              <div>\n                <ModalSortTable\n                  handleCheckboxSort={handleCheckboxSort}\n                  listOption={listOption}\n                  optionDefault={optionDefault}\n                />\n              </div>\n            )}\n        </th>\n      ))}\n  </tr>\n);\n\nTableHead.defaultProps = {\n  showModalSort: null,\n  handleCheckboxSort: () => {},\n  handleShowModalSorting: () => {},\n  optionDefault: [],\n};\n\nexport default memo<Props>(TableHead);\n","// @flow\n\nimport React, { memo } from 'react';\n\ntype Props = {\n  rowItem: Object,\n  onClickTableRow?: Function,\n  isShowId?: boolean,\n  rowActive?: Object,\n  isClickTableColumn?: boolean,\n  onClickTableColumn?: Function,\n};\n\nconst TableRow = ({\n  rowItem,\n  onClickTableRow = () => {},\n  isClickTableColumn = false,\n  isShowId = false,\n  rowActive = {},\n  onClickTableColumn = () => {},\n}: Props) => {\n  const fieldId = 'id';\n  let activeClass = '';\n  if (onClickTableRow) {\n    activeClass = 'row-cursor-pointer';\n  } else if (rowActive && rowActive.id === rowItem.id) {\n    activeClass = 'row-active';\n  }\n  return (\n    <tr\n      onClick={() => onClickTableRow && onClickTableRow(rowItem)}\n      className={activeClass}\n    >\n      {Object.keys(rowItem).map((item) => (\n        <td\n          key={item}\n          className={`${\n            // eslint-disable-next-line no-nested-ternary\n            isShowId && item === fieldId\n              ? 'd-none'\n              : isClickTableColumn\n              ? 'row-cursor-pointer'\n              : ''\n          }`}\n          onClick={() => isClickTableColumn && onClickTableColumn(rowItem)}\n          onKeyPress={() => isClickTableColumn && onClickTableColumn(rowItem)}\n          role=\"presentation\"\n        >\n          {rowItem[item]}\n        </td>\n      ))}\n    </tr>\n  );\n};\nTableRow.defaultProps = {\n  onClickTableRow: null,\n  isShowId: false,\n  onClickTableColumn: () => {},\n  isClickTableColumn: false,\n  rowActive: {},\n};\nexport default memo<Props>(TableRow);\n","// @flow\nimport React, { memo } from 'react';\nimport { Table } from 'react-bootstrap';\nimport TableHead from './TableHead';\nimport TableRow from './TableRow';\n\ntype Props = {\n  tableHeads: Array<{ id: number, name: string }>,\n  tableBody: Array<{ id: number }>,\n  onClickRow?: Function,\n  handleClickBtnDetail?: Function,\n  isShowId?: boolean,\n  rowActive?: Function,\n  onClickTableColumn?: Function,\n  showModalSort?: any,\n  handleCheckboxSort?: Function,\n  handleShowModalSorting?: Function,\n  listOption?: Array<{}>,\n  optionDefault?: Array<string>,\n};\n\nconst TableData = ({\n  tableHeads,\n  tableBody,\n  onClickRow = () => {},\n  handleClickBtnDetail = () => {},\n  isShowId = false,\n  rowActive = {},\n  onClickTableColumn = () => {},\n  showModalSort = '',\n  handleCheckboxSort = () => {},\n  handleShowModalSorting = () => {},\n  listOption = [],\n  optionDefault = [],\n}: Props) => {\n  const renderBodyTable =\n    tableBody &&\n    tableBody.map((item, index) => (\n      <TableRow\n        onClickTableRow={onClickRow}\n        rowItem={item}\n        key={item.id || index}\n        rowActive={rowActive}\n        handleClickBtnDetail={handleClickBtnDetail}\n        isShowId={isShowId}\n        onClickTableColumn={onClickTableColumn}\n      />\n    ));\n\n  const renderBody = () => {\n    if (renderBodyTable && renderBodyTable.length > 0) {\n      return renderBodyTable;\n    }\n    return (\n      <tr className=\"p-3 text-center table-no-data w-100\">\n        <td colSpan={tableHeads && tableHeads.length}>\n          <p className=\"mb-0 text-center\">데이터가 존재하지 않습니다.</p>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <Table striped bordered hover responsive>\n      <thead>\n        <TableHead\n          listItems={tableHeads}\n          showModalSort={showModalSort}\n          handleCheckboxSort={handleCheckboxSort}\n          handleShowModalSorting={handleShowModalSorting}\n          listOption={listOption}\n          optionDefault={optionDefault}\n        />\n      </thead>\n      <tbody>{renderBody()}</tbody>\n    </Table>\n  );\n};\n\nTableData.defaultProps = {\n  onClickRow: null,\n  rowActive: null,\n  handleClickBtnDetail: () => {},\n  isShowId: false,\n  onClickTableColumn: () => {},\n  showModalSort: '',\n  handleCheckboxSort: () => {},\n  handleShowModalSorting: () => {},\n  listOption: [],\n  optionDefault: [],\n};\nexport default memo<Props>(TableData);\n","// @flow\n// libs\nimport React, { memo } from 'react';\nimport TitleSubHeader from 'commons/components/TitleHeader/titleSub';\n\ntype Props = {\n  paramsSearch: Object,\n  listStatusCompanySelect: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  // listInverter?: Array<{\n  //   id: number,\n  //   value: any,\n  //   label: string,\n  // }>,\n  // listParkingLot?: Array<{\n  //   id: number,\n  //   value: any,\n  //   label: string,\n  // }>,\n  handleChangeSearch: Function,\n};\n\nexport const GroupSelect = ({\n  paramsSearch,\n  listStatusCompanySelect,\n  // listInverter = [],\n  // listParkingLot = [],\n  handleChangeSearch,\n}: Props) => {\n  const renderListCompany =\n    listStatusCompanySelect &&\n    listStatusCompanySelect.map((item) => (\n      <li\n        key={item.id}\n        onClick={() => handleChangeSearch(item, 'statusCompany')}\n        onKeyPress={() => {}}\n        role=\"menuitem\"\n        className={`${\n          paramsSearch?.company === item.id ||\n          paramsSearch?.posSelected === item.id\n            ? 'active'\n            : ''\n        }`}\n      >\n        {item.label}\n      </li>\n    ));\n\n  // const renderListInverter =\n  //   listInverter &&\n  //   listInverter.map((item) => (\n  //     <li\n  //       key={item.id}\n  //       onClick={() => handleChangeSearch(item, 'mockupType')}\n  //       onKeyPress={() => {}}\n  //       role=\"menuitem\"\n  //       className={`${paramsSearch?.mockupType === item.id ? 'active' : ''}`}\n  //     >\n  //       {item.label}\n  //     </li>\n  //   ));\n\n  // const renderListParkingLot =\n  //   listParkingLot &&\n  //   listParkingLot.map((item) => (\n  //     <li\n  //       key={item.id}\n  //       onClick={() => handleChangeSearch(item, 'parkingLot')}\n  //       onKeyPress={() => {}}\n  //       role=\"menuitem\"\n  //       className={`${paramsSearch?.parkingLot === item.id ? 'active' : ''}`}\n  //     >\n  //       {item.label}\n  //     </li>\n  //   ));\n  return (\n    <div>\n      {listStatusCompanySelect && listStatusCompanySelect.length > 0 && (\n        <div className=\"content-select-sidebar\">\n          <TitleSubHeader title=\"실증단지\" />\n          <ul className=\"list-item-select overflowY\">{renderListCompany}</ul>\n        </div>\n      )}\n      {/* {listInverter && listInverter.length > 0 && (\n        <>\n          <TitleSubHeader title=\"목업\" titleLight=\"RTU\" className=\"mt-5\" />\n          <ul className=\"list-item-select overflowY\">{renderListInverter}</ul>\n        </>\n      )} */}\n      {/* {listParkingLot && listParkingLot.length > 0 && (\n        <>\n          <TitleSubHeader title=\"주차장\" className=\"mt-5\" />\n          <ul className=\"list-item-select overflowY\">{renderListParkingLot}</ul>\n        </>\n      )} */}\n    </div>\n  );\n};\n\nGroupSelect.defaultProps = {\n  listMockupType: [],\n  listParkingLot: [],\n};\n\nexport default memo<Props>(GroupSelect);\n","// @flow\n// libs\nimport React, { memo } from 'react';\n\ntype Props = {\n  dataLengthChart: Array<{\n    id: number,\n    name: string,\n    color: string,\n  }>,\n};\n\nexport const LengthChart = ({ dataLengthChart }: Props) => (\n  <div className=\"length-chart\">\n    {dataLengthChart &&\n      dataLengthChart.map((item) => (\n        <div className=\"item\" key={item.id}>\n          <span style={{ borderColor: item.color }} />\n          <div className=\"name-length\">{item?.name}</div>\n        </div>\n      ))}\n  </div>\n);\n\nexport default memo<Props>(LengthChart);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","/* eslint-disable import/prefer-default-export */\nconst TIME_REQUEST = 300000000;\n\nexport { TIME_REQUEST };\n","const COLOR_LABEL = {\n  POWER: '#97c95e',\n  TEMPERATURE: '#ab47bc',\n  INSOLATION: '#3b74e7',\n};\n\nexport default COLOR_LABEL;\n","// @flow\nimport React, { memo } from 'react';\nimport COLOR_LABEL from 'constants/label';\nimport images from 'themes/images';\n\ntype Props = {\n  data?: any,\n  isPower?: boolean,\n  isTemperature?: boolean,\n  isInsolation?: boolean,\n};\n\nexport const LabelStatus = ({\n  data = [],\n  isPower = false,\n  isTemperature = false,\n  isInsolation = false,\n}: Props) => {\n  let unit = '';\n  let icon;\n  let color = '';\n\n  // set icon, unit and color label\n  if (isPower) {\n    icon = images.icon_power;\n    unit = '';\n    color = COLOR_LABEL.POWER;\n  }\n  if (isTemperature) {\n    icon = images.icon_temperature;\n    unit = '단위 : ℃';\n    color = COLOR_LABEL.TEMPERATURE;\n  }\n  if (isInsolation) {\n    icon = images.icon_insolation;\n    unit = '단위 : kWh/㎡·10초';\n    color = COLOR_LABEL.INSOLATION;\n  }\n\n  return (\n    <div className=\"label-status\" style={{ color: `${color}` }}>\n      <img src={icon} alt=\"Icon\" className=\"label-status__icon\" />\n      <div className=\"label-status__body\">\n        {data &&\n          data.map((item) => {\n            let itemUnit = '';\n            if (isPower && item === data[0]) itemUnit = 'kWh';\n            else if (isPower && item === data[1]) itemUnit = '%';\n            return (\n              <div className=\"label-status__content\">\n                <p className=\"label-status__title\">{item.title}</p>\n                <div className=\"label-status__group-value\">\n                  <p className=\"label-status__value\">{item.value}</p>\n                  <p className=\"label-status__unit\">{itemUnit}</p>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n      <div className=\"label-status__group-unit\">{unit}</div>\n    </div>\n  );\n};\n\nLabelStatus.defaultProps = {\n  data: [],\n  isPower: false,\n  isTemperature: false,\n  isInsolation: false,\n};\n\nexport default memo<Props>(LabelStatus);\n","export const headTestMockupStatus = [\n  {\n    id: 0,\n    name: 'No.',\n  },\n  {\n    id: 1,\n    name: '발생일시',\n  },\n  {\n    id: 2,\n    name: '설치업체',\n  },\n  {\n    id: 3,\n    name: '인버터 ID',\n  },\n  {\n    id: 4,\n    name: '인버터명',\n  },\n  {\n    id: 5,\n    name: '모듈 온도',\n  },\n  {\n    id: 6,\n    name: '외기 온도',\n  },\n  {\n    id: 7,\n    name: '수평 일사량',\n  },\n  {\n    id: 8,\n    name: '발전량',\n  },\n  {\n    id: 9,\n    name: '누적 발전량',\n  },\n  {\n    id: 10,\n    name: '성능비',\n  },\n];\n\nexport const headTestSolarMonitoringOperationStatus = [\n  {\n    id: 0,\n    name: 'No.',\n  },\n  {\n    id: 1,\n    name: '발생 일시',\n  },\n  {\n    id: 2,\n    name: '설치업체',\n  },\n  {\n    id: 3,\n    name: '인버터ID',\n  },\n  {\n    id: 4,\n    name: '인버터명',\n  },\n  {\n    id: 4,\n    name: 'PV전압(V1)',\n  },\n  {\n    id: 5,\n    name: 'PV전류(l1)',\n  },\n  {\n    id: 6,\n    name: '출력전압(V2)',\n  },\n  {\n    id: 7,\n    name: '출력전류(l2)',\n  },\n  {\n    id: 8,\n    name: '출력(P)',\n  },\n  {\n    id: 9,\n    name: '역률',\n  },\n  {\n    id: 10,\n    name: '주파수',\n  },\n];\n\nexport const headTestMockupStatisticsOfModule = [\n  {\n    id: 0,\n    name: 'No.',\n  },\n  {\n    id: 1,\n    name: '발생 일시',\n  },\n  {\n    id: 2,\n    name: '설치업체',\n  },\n  {\n    id: 3,\n    name: '인버터ID',\n  },\n  {\n    id: 4,\n    name: '인버터 명',\n  },\n\n  {\n    id: 5,\n    name: '모듈온도',\n  },\n  {\n    id: 6,\n    name: '외기온도',\n  },\n  {\n    id: 7,\n    name: '현재 일사량',\n  },\n  {\n    id: 8,\n    name: '최고 일사량',\n  },\n];\nexport default {\n  headTestMockupStatus,\n  headTestSolarMonitoringOperationStatus,\n  headTestMockupStatisticsOfModule,\n};\n","// @flow\n// libs\nimport React, { memo } from 'react';\nimport { LabelStatus } from 'commons/components/Label/LabelStatus';\n\ntype Props = {\n  powerData: Object,\n  performanceData: Object,\n  insolationData: Object,\n};\n\nexport const BoxGroup = ({\n  powerData,\n  performanceData,\n  insolationData,\n}: Props) => (\n  <div className=\"box-group\">\n    <LabelStatus type={powerData?.type} data={powerData?.data} isPower />\n    <LabelStatus\n      type={performanceData?.type}\n      data={performanceData?.data}\n      isTemperature\n    />\n    <LabelStatus\n      type={insolationData?.type}\n      data={insolationData?.data}\n      isInsolation\n    />\n  </div>\n);\n\nexport default memo<Props>(BoxGroup);\n","// @flow\n// libs\nimport React, { memo } from 'react';\nimport CheckBox from 'commons/components/CheckBox';\n\ntype Props = {\n  paramsSearch: Object,\n  handleChangeSearch: Function,\n};\n\nexport const GroupCompareChart = ({\n  paramsSearch,\n  handleChangeSearch,\n}: Props) => (\n  <div className=\"group-char-checkbox\">\n    <div className=\"checkbox-header\">차트 비교</div>\n    <div className=\"list-checkbox\">\n      <CheckBox\n        name=\"power\"\n        isChecked={paramsSearch?.power}\n        label=\"발전량\"\n        id=\"power\"\n        handleToggleCheckbox={() =>\n          handleChangeSearch(paramsSearch?.power, 'power')\n        }\n      />\n      <CheckBox\n        name=\"insolation\"\n        id=\"insolation\"\n        isChecked={paramsSearch?.insolation}\n        label=\"일사량\"\n        handleToggleCheckbox={() =>\n          handleChangeSearch(paramsSearch?.insolation, 'insolation')\n        }\n      />\n      <CheckBox\n        name=\"performance\"\n        id=\"performance\"\n        isChecked={paramsSearch?.performance}\n        label=\"성능비\"\n        handleToggleCheckbox={() =>\n          handleChangeSearch(paramsSearch?.performance, 'performance')\n        }\n      />\n    </div>\n  </div>\n);\n\nexport default memo<Props>(GroupCompareChart);\n","// @flow\n// libs\nimport React, { memo } from 'react';\nimport SelectDropdown from 'commons/components/Select';\nimport Button from 'commons/components/Button';\nimport { listPaginationType } from 'constants/listKey';\n\ntype Props = {\n  paramsSearch: Object,\n  handleChangeSearch: Function,\n  handleDownloadTrend: Function,\n};\n\nexport const GroupActionDownload = ({\n  paramsSearch,\n  handleChangeSearch,\n  handleDownloadTrend,\n}: Props) => (\n  <div className=\"group-option-table d-flex  justify-content-between mb-3\">\n    <SelectDropdown\n      placeholder=\"구분\"\n      listItem={listPaginationType}\n      onChange={(option) => handleChangeSearch(option, 'pagination')}\n      option={paramsSearch?.pagination || null}\n      noOptionsMessage={() => '옵션 없음'}\n    />\n    <div className=\"group-btn-download\">\n      <Button onClick={() => handleDownloadTrend('trend')} customClass=\"mr-2\">\n        Trend 이미지 다운\n      </Button>\n      <Button onClick={() => handleDownloadTrend('raw')}>Raw Date 다운</Button>\n    </div>\n  </div>\n);\n\nexport default memo<Props>(GroupActionDownload);\n","// @flow\nimport React, { memo } from 'react';\nimport Table from 'commons/components/Table';\nimport LengthChart from 'commons/components/LengthChart';\nimport TitleSubHeader from 'commons/components/TitleHeader/titleSub';\nimport { headTestMockupStatus } from '../constant';\n// import LineSeriesChart from 'commons/components/LineChart';\nimport BoxGroup from './BoxGroup';\nimport GroupCompareChart from './GroupCompareChart';\nimport GroupActionDownload from './GroupActionDownload';\n\ntype Props = {\n  listMockupDataCompany: any,\n  powerData: Object,\n  handleDownloadTrend: Function,\n  handleChangeSearch: Function,\n  paramsSearch: Object,\n  performanceData: Object,\n  insolationData: Object,\n  dataChart: Object,\n};\n\nconst ItemContentTab = ({\n  listMockupDataCompany,\n  powerData,\n  handleDownloadTrend,\n  handleChangeSearch,\n  performanceData,\n  insolationData,\n  paramsSearch,\n  dataChart,\n}: Props) => {\n  const dataLengthChart = [\n    {\n      id: 1,\n      name: '발전량 kWh',\n      color: '#8567b4',\n    },\n    {\n      id: 2,\n      name: '일사량 ℃',\n      color: '#c05e13',\n    },\n    {\n      id: 3,\n      name: '성능비 kWh/㎡·10초',\n      color: '#fe8224',\n    },\n  ];\n\n  return (\n    <div className=\"content-wrap-tab\">\n      <BoxGroup\n        powerData={powerData}\n        performanceData={performanceData}\n        insolationData={insolationData}\n      />\n\n      <div className=\"group-char\">\n        <div className=\"group-char-left\">\n          <GroupCompareChart\n            paramsSearch={paramsSearch}\n            handleChangeSearch={handleChangeSearch}\n          />\n          <div className=\"group-length-chart\">\n            <LengthChart dataLengthChart={dataLengthChart} />\n          </div>\n        </div>\n        <div className=\"group-char-right\">\n          {/* <LineSeriesChart width={1200} height={400} dataChart={dataChart} /> */}\n        </div>\n      </div>\n      <TitleSubHeader title=\"발전 현황\" />\n      <GroupActionDownload\n        handleDownloadTrend={handleDownloadTrend}\n        paramsSearch={paramsSearch}\n        handleChangeSearch={handleChangeSearch}\n      />\n      <div>\n        <Table\n          tableHeads={headTestMockupStatus}\n          tableBody={listMockupDataCompany}\n          isShowId\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo<Props>(ItemContentTab);\n","// @flow\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TIME_REQUEST } from 'constants/index';\nimport Pagination from 'react-js-pagination';\nimport MainLayout from 'layout/MainLayout';\nimport TitleHeader from 'commons/components/TitleHeader';\nimport * as ActionStatusGenerator from '../../redux';\nimport * as CommonAction from 'commons/redux';\nimport ItemContentTab from './ItemContentTab';\nimport GroupSelectSidebar from 'commons/components/GroupSelectSidebar';\n\nconst StatusByAreaCompany = () => {\n  const {\n    isProcessing,\n    dataBox,\n    listDataTableRaw,\n    total,\n    dataChart,\n  } = useSelector((state) => state?.testSolarMonitoringStatus);\n  const [randomNumber, setRandomNumber] = useState(null);\n  const { comList } = useSelector((state) => state?.commons);\n  const defaultOption = {\n    id: 1,\n    value: 6,\n    label: '6 개씩 보기',\n  };\n\n  const defaultSearch = {\n    page: 1,\n    company: (comList && comList[1] && comList[1]?.id) || null,\n    mockupType: null,\n    parkingLot: null,\n    power: false,\n    performance: false,\n    insolation: false,\n    pagination: defaultOption,\n  };\n\n  const [paramsSearch, setParamsSearch] = useState(defaultSearch);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRandomNumber(Math.random());\n    }, TIME_REQUEST);\n    return () => clearInterval(interval);\n  }, []);\n  const powerData = {\n    type: 'power',\n    data: [\n      {\n        title: '일일 평균 1시간 발전량',\n        value:\n          (dataBox &&\n            dataBox?.avg_prod &&\n            dataBox?.avg_prod.toLocaleString('en')) ||\n          '0',\n      },\n      {\n        title: '일일발전량 달성율',\n        value:\n          (dataBox &&\n            dataBox?.prod_ratio &&\n            dataBox?.prod_ratio.toLocaleString('en')) ||\n          '0',\n      },\n    ],\n  };\n\n  const performanceData = {\n    type: 'performance',\n    data: [\n      {\n        title: '현재 모듈 온도',\n        value:\n          (dataBox &&\n            dataBox?.max_module_temp &&\n            dataBox?.max_module_temp.toLocaleString('en')) ||\n          '0',\n      },\n      {\n        title: '최고 모듈 온도',\n        value:\n          (dataBox &&\n            dataBox?.module_temp &&\n            dataBox?.module_temp.toLocaleString('en')) ||\n          '0',\n      },\n    ],\n  };\n\n  const insolationData = {\n    type: 'insolation',\n    data: [\n      {\n        title: '수평 일사량',\n        value:\n          (dataBox &&\n            dataBox?.max_rad &&\n            dataBox?.max_rad.toLocaleString('en')) ||\n          '0',\n      },\n      {\n        title: '경사 일사량',\n        value:\n          (dataBox &&\n            dataBox?.current_rad &&\n            dataBox?.current_rad.toLocaleString('en')) ||\n          '0',\n      },\n    ],\n  };\n\n  useEffect(() => {\n    dispatch(CommonAction.getCompanyList());\n  }, []);\n\n  const dispatch = useDispatch();\n  // call api getCardInformation\n  const handleGetCardInformation = useCallback(\n    (company) => {\n      dispatch(\n        ActionStatusGenerator.getCardInformation({\n          com_id: company,\n        })\n      );\n    },\n    [dispatch]\n  );\n  // call api getDataTrend chart\n  const handleGetDataTrendChart = useCallback(\n    (params) => {\n      dispatch(ActionStatusGenerator.getDataTrendChart(params));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    handleGetCardInformation(paramsSearch?.company);\n    handleGetDataTrendChart({\n      com_id: paramsSearch?.company,\n    });\n  }, [handleGetCardInformation, paramsSearch?.company, randomNumber]);\n\n  // call api getDataRawTable\n  const handleGetDataRawTable = useCallback(\n    (params) => {\n      dispatch(ActionStatusGenerator.getDataRawTable(params));\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    handleGetDataRawTable({\n      per_page: paramsSearch?.pagination?.value,\n      page: paramsSearch?.page,\n      com_id: paramsSearch?.company,\n    });\n  }, [\n    handleGetDataRawTable,\n    paramsSearch?.page,\n    paramsSearch?.pagination?.value,\n    randomNumber,\n  ]);\n\n  // console.log('type', paramsSearch);\n  const handleChangeSearch = (item, name) => {\n    switch (name) {\n      case 'statusCompany':\n        setParamsSearch({\n          ...paramsSearch,\n          company: item.id,\n          page: 1,\n        });\n        handleGetDataRawTable({\n          per_page: paramsSearch?.pagination?.value,\n          page: 1,\n          com_id: item.id,\n        });\n        break;\n      case 'power':\n        setParamsSearch({\n          ...paramsSearch,\n          power: !item,\n        });\n        break;\n      case 'performance':\n        setParamsSearch({\n          ...paramsSearch,\n          performance: !item,\n        });\n        break;\n      case 'insolation':\n        setParamsSearch({\n          ...paramsSearch,\n          insolation: !item,\n        });\n        break;\n      case 'pagination':\n        setParamsSearch({\n          ...paramsSearch,\n          pagination: item,\n          page: 1,\n        });\n        break;\n      case 'page':\n        setParamsSearch({\n          ...paramsSearch,\n          page: item,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleDownloadTrend = (name) => {\n    console.log('download Trend', name);\n  };\n\n  return (\n    <MainLayout isProcessing={isProcessing}>\n      <div className=\"content-wrap\">\n        <TitleHeader title=\"테스트(실증단지) 발전 현황\" />\n        <div className=\"content-body page-company\">\n          <GroupSelectSidebar\n            handleChangeSearch={handleChangeSearch}\n            paramsSearch={paramsSearch}\n            listStatusCompanySelect={comList && comList.slice(1)}\n          />\n          <div className=\"content-body-left w-100 border-pd-20\">\n            <ItemContentTab\n              listMockupDataCompany={listDataTableRaw}\n              powerData={powerData}\n              handleDownloadTrend={handleDownloadTrend}\n              handleChangeSearch={handleChangeSearch}\n              performanceData={performanceData}\n              insolationData={insolationData}\n              paramsSearch={paramsSearch}\n              dataChart={dataChart}\n            />\n            <div className=\"opacity d-block pagination\">\n              {total > paramsSearch?.pagination?.value && (\n                <div className=\"wrapper-device__pagination mt-0\">\n                  <Pagination\n                    activePage={paramsSearch?.page}\n                    itemsCountPerPage={paramsSearch?.pagination?.value}\n                    totalItemsCount={total}\n                    pageRangeDisplayed={5}\n                    onChange={(e) => handleChangeSearch(e, 'page')}\n                    itemClass=\"page-item\"\n                    linkClass=\"page-link\"\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default StatusByAreaCompany;\n"],"sourceRoot":""}