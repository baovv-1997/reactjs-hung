{"version":3,"sources":["commons/components/TitleHeader/titleSub.js","customHooks/useClickOutSide.js","customHooks/useDebounce.js","commons/components/Search/AutoSuggest.js","commons/components/Search/index.js","commons/components/Header/ModalEvent.js","commons/components/Header/index.js","constants/listMenu.js","layout/Menu/Submenu.js","layout/Menu/MenuItem.js","layout/Menu/index.js","layout/MainLayout/index.js","commons/components/TitleHeader/index.js","commons/components/Modal/index.js","modules/accounts/components/management/FormDetail.js","modules/accounts/components/management/AccountDetail.js"],"names":["TitleSubHeader","title","onClick","className","id","titleLight","onKeyPress","role","tabIndex","src","images","icon_arrow","alt","defaultProps","memo","useClickOutside","ref","handler","rest","useEffect","listener","event","current","contains","target","iconRef","document","addEventListener","removeEventListener","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","setTimeout","clearTimeout","AutoSuggest","options","map","option","index","key","label","Search","placeholder","handleIconClick","customClass","onChange","setSearchTerm","handleKeyDown","isSpinner","display","setDisplay","wrapperRef","useRef","handleClickOutside","wrap","window","e","icon_search","length","search","searchValue","console","log","ModalEvent","isShow","Header","isSearch","isSelect","eventCount","dispatch","useDispatch","useSelector","state","main","listPositions","listCompany","optionDropdown","setOptionDropdown","setIsShow","searchTerm","debouncedSearchTerm","getListCompany","keyword","getListPosition","indexDefault","findIndex","item","includes","Select","listItem","ops","disabled","isSearchable","blurInputOnSelect","icon_event","DASHBOARD","icon","IMAGES","iconGraph","to","ROUTERS","ROOT","items","name","sub","DASHBOARD_AREA","DASHBOARD_COMPANY","STATUS_COMPANY","STATUS_COMPANY_BY_AREA","OPERATION_STATUS_BY_COMPANY","OPERATION_STATUS_BY_AREA","STATISTICS_DEVELOP","STATISTICS_DEVELOP_AREA","OPERATION_STATISTICS_COMPANY","OPERATION_STATISTICS_AREA","SETUP","setup","MOCKUP","mockUp","TEST_DASHBOARD","TEST_MOCKUP_STATUS","TEST_MOCKUP_OPERATION","TEST_MOCKUP_STATISTICS_DEVELOP","TEST_MOCKUP_STATISTICS_OPERATION","SOLAR_DASHBOARD","TEST_SOLAR_STATUS_DEVELOP","TEST_SOLAR_STATUS_OPERATION","TEST_SOLAR_STATISTICS_DEVELOP","TEST_SOLAR_STATISTICS_OPERATION","itemSub","listNestSub","isActiveNestSub","handleClickItemSub","location","nestSubClicking","setNestSubClicking","renderNestedSub","activeNestItem","pathname","stopPropagation","handleClickNestSub","faChevronRight","listSub","handleClickItem","isActive","subMenuClicking","commons","setListNestSub","activeSub","setActiveSub","active","renderSub","nestSub","withRouter","menuClicking","setListSub","setMenuClicking","renderMenuList","listMenu","Button","btn_logout","MainLayout","children","isProcessing","isOpen","setIsOpen","refMenu","mainContent","showHeader","classHeight","innerHeight","Loading","innerRef","TitleHeader","descSub","icon_title_header","ModalPopup","animation","size","handleClose","isShowIconClose","isShowHeader","isShowFooter","isShowTwoBtn","customClassButton","classNameBtnLeft","textBtnLeft","classNameBtnRight","textBtnRight","handleSubmit","isDisabledButton","handleCloseIcon","onHide","show","onKeyUp","icon_close","Body","Footer","type","isDisabled","accountDetail","history","errors","account","isUpdateFailed","setIsUpdateFailed","isDelete","setIsDelete","renderListDeviceMaintain","devices","company","com_name","arrow_right","position","pos_name","ds_name","errorsMessage","Object","values","push","ACCOUNT_MANAGEMENT","roles","display_name","moment","created_at","format","email","formatValue","phone","username","Modal","deleteAccount","resetAccountType","AccountDetail","match","params","getAccountList","isDetail"],"mappings":"6GACA,+DAYaA,EAAiB,SAAC,GAMjB,IALZC,EAKW,EALXA,MAKW,IAJXC,eAIW,MAJD,aAIC,MAHXC,iBAGW,MAHC,GAGD,EAFXC,EAEW,EAFXA,GAEW,IADXC,kBACW,MADE,GACF,EACX,OACE,yBAAKD,GAAIA,EAAID,UAAS,yBAAoBA,IACxC,yBACEA,UAAU,yBACVD,QAASA,EACTI,WAAY,aACZC,KAAK,SACLC,SAAS,KAET,yBAAKC,IAAKC,IAAOC,WAAYC,IAAI,KACjC,yBAAKT,UAAU,gCACZF,EACD,8BAAOI,OAOjBL,EAAea,aAAe,CAC5BV,UAAW,GACXD,QAAS,aACTG,WAAY,GACZD,GAAI,IAGSU,mBAAYd,I,8DCXZe,EA3BS,SAACC,EAAKC,EAAN,GAAgC,IAAZC,EAAW,oBACrDC,qBAAU,WACR,IAAMC,EAAW,SAACC,GAGbL,EAAIM,UACLN,EAAIM,QAAQC,SAASF,EAAMG,SAC1BN,EAAKO,QAAQH,UACdJ,EAAKO,QAAQH,QAAQC,SAASF,EAAMG,SAMtCP,EAAQI,IAMV,OAHAK,SAASC,iBAAiB,YAAaP,GACvCM,SAASC,iBAAiB,aAAcP,GAEjC,WACLM,SAASE,oBAAoB,YAAaR,GAC1CM,SAASC,iBAAiB,aAAcP,MAEzC,CAACJ,EAAKC,EAASC,EAAKO,W,yCCHVI,EApBK,SAACC,EAAOC,GAAU,MAGUC,mBAASF,GAHnB,mBAG3BG,EAH2B,KAGXC,EAHW,KAiBlC,OAZAf,qBAAU,WAEN,IAAMF,EAAUkB,YAAW,WACvBD,EAAkBJ,KACnBC,GAGH,OAAO,WACHK,aAAanB,MAElB,CAACa,EAAOC,IAEJE,G,QClBLI,EAAc,SAAC,GAAsC,IAApCnC,EAAmC,EAAnCA,QAAmC,IAA1BoC,eAA0B,MAAhB,GAAgB,EACxD,OACE,yBAAKnC,UAAU,gBACZmC,EACEC,KAAI,SAACC,EAAQC,GAAT,OACH,uBACEtC,UAAU,qBAEVuC,IAAKD,EACLvC,QAAS,kBAAMA,EAAQsC,IACvBjC,KAAK,gBAEJiC,EAAOG,YAOpBN,EAAYxB,aAAe,CACzByB,QAAS,IAGIxB,qBAAgBuB,GCdzBO,EAAS,SAAC,GAUF,IATZC,EASW,EATXA,YASW,IARXC,uBAQW,MARO,aAQP,MAPXC,mBAOW,MAPG,GAOH,MANXjB,aAMW,MANH,GAMG,MALXkB,gBAKW,MALA,aAKA,MAJXC,qBAIW,MAJK,aAIL,MAHXX,eAGW,MAHD,GAGC,EAFXY,EAEW,EAFXA,cAEW,IADXC,iBACW,WACmBnB,oBAAS,GAD5B,mBACJoB,EADI,KACKC,EADL,KAGLC,EAAaC,iBAAO,MAEpBC,EAAqB,SAACnC,GAAW,IACpBoC,EAASH,EAAlBhC,QACJmC,IAASA,EAAKlC,SAASF,EAAMG,SAC/B6B,GAAW,IAIflC,qBAAU,WAER,OADAuC,OAAO/B,iBAAiB,YAAa6B,GAC9B,WACLE,OAAO9B,oBAAoB,YAAa4B,OAU5C,OACE,yBAAKxC,IAAKsC,EAAYnD,UAAS,iBAAY4C,IACzC,2BACE5C,UAAU,gBACVD,QAAS,kBAAMmD,GAAW,IAC1BR,YAAaA,EACbf,MAAOA,EACPkB,SAAUA,EACV1C,WAAY,SAACqD,GAAD,OAAOT,EAAcS,MAGlCR,GAAa,yBAAKhD,UAAU,YAE7B,yBACEM,IAAKC,IAAOkD,YACZhD,IAAI,cACJT,UAAU,eACVD,QAAS4C,EACTvC,KAAK,iBAEL6C,GAAWd,EAAQuB,OAAU,kBAAC,EAAD,CAAaC,OAAQhC,EAAO5B,QA1BrC,SAAC6D,GACzBC,QAAQC,IAAIF,EAAa,eACzBd,EAAcc,GACdV,GAAW,IAuB8Ef,QAASA,IAAc,OAKpHM,EAAO/B,aAAe,CACpBgC,YAAa,GACbE,YAAa,GACbjB,MAAO,GACPkB,SAAU,aACVC,cAAe,aACfH,gBAAiB,aACjBR,QAAS,GACTa,WAAW,GAGErC,qBAAgB8B,G,SCjFzBsB,EAAa,SAAC,GAA2C,IAAD,IAAxCC,cAAwC,SAAxBb,EAAwB,EAAxBA,WACpC,OACE,yBACEnD,UAAS,uBAAkBgE,EAAS,mBAAqB,IACzDnD,IAAKsC,GAEL,yBAAKnD,UAAU,sBAAf,mCAEA,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,4BAAf,4BACA,uBAAGA,UAAU,4BACX,2EADF,yCAKF,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,4BAAf,4BACA,uBAAGA,UAAU,4BACX,2EADF,2CAQR+D,EAAWrD,aAAe,CACxBsD,QAAQ,GAGKD,QClBTE,EAAS,SAAC,GAIF,IAAD,IAHXC,gBAGW,aAFXC,gBAEW,aADXC,kBACW,MADE,EACF,EAELC,EAAWC,cAFN,EAGuCC,aAAY,SAAAC,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOC,QAAtEC,EAHG,EAGHA,cAAeC,EAHZ,EAGYA,YAAa3B,EAHzB,EAGyBA,UAHzB,EAIiCnB,mBAAS,MAJ1C,mBAIJ+C,EAJI,KAIYC,EAJZ,OAKiBhD,oBAAS,GAL1B,mBAKJmC,EALI,KAKIc,EALJ,OAMyBjD,mBAAS,CAAEW,MAAO,GAAIb,MAAO,GAAIY,IAAK,GAAItC,GAAI,KANvE,mBAMJ8E,EANI,KAMQjC,EANR,KAQLK,EAAaC,iBAAO,MACpB9B,EAAU8B,iBAAO,MAEjB4B,EAAsBtD,EAAYqD,EAAWvC,MAAO,KAE1DxB,qBAAU,WACJgE,IACFX,EAASY,YAAe,CAAEC,QAASF,KACnCX,EAASc,YAAgB,CAAED,QAASF,QAGrC,CAACA,IAGJhE,qBAAU,WACR,IAAMoE,EAAeV,EAAcW,WAAU,SAACC,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM9C,MAAM+C,SAAS,gCAC5EV,EAAkBH,EAAcU,MAC/B,CAACV,IA+BJ,OAVA9D,EACEuC,GACA,WACMa,GACFc,GAAU,KAGd,CAAExD,YAIF,yBAAKtB,UAAU,UACb,yBAAKA,UAAU,gBACZkE,EACC,kBAAC,EAAD,CACExB,YAAY,sGACZf,MAAOoD,EAAWvC,MAClBK,SAvBiB,SAACW,GAAO,IACzB7B,EAAU6B,EAAEnC,OAAZM,MACRmB,EAAc,eAAKiC,EAAN,CAAkBvC,MAAOb,MAsB9BmB,cAAeA,EACfX,QAAO,sBAAMuC,GAAN,YAAwBC,IAC/BhC,gBAtCc,WACtBkB,QAAQC,IAAIiB,IAsCJhC,cAlCkB,SAACS,GACb,UAAVA,EAAEjB,KACJsB,QAAQC,IAAIiB,IAiCN/B,UAAWA,IAGb,GAEDmB,EACC,kBAACqB,EAAA,EAAD,CACE9C,YAAY,eACZ+C,SAAUf,EACV7B,SAAU,SAAC6C,GACTb,EAAkBa,IAEpBrD,OAAQuC,EACRe,UAAU,EACVC,cAAc,EACdC,mBAAmB,EACnBjD,YAAY,mBAGd,IAGJ,yBAAK5C,UAAU,iBACb,yBAAKA,UAAU,iBACb,yBACEM,IAAKC,IAAOuF,WACZrF,IAAI,aACJT,UAAU,eACVD,QAAS,kBAAM+E,GAAWd,IAC1B5D,KAAK,eACLS,IAAKS,IAEN8C,EAAa,EACZ,0BAAMpE,UAAU,wBAAhB,cAEA,IAIJ,yBAAKA,UAAU,uBACb,0BAAMA,UAAU,yBAAhB,kCAIA,kBAAC,EAAD,CAAYgE,OAAQA,EAAQb,WAAYA,QAOlDc,EAAOvD,aAAe,CACpBwD,UAAU,EACVC,UAAU,EACVC,WAAY,GAGCzD,qBAAgBsD,G,eChJlB8B,EAAY,CACvB9F,GAAI,EACJuC,MAAO,2BACPwD,KAAMC,IAAOC,UACbC,GAAIC,IAAQC,KACZC,MAAO,CACL,CACErG,GAAI,EACJsG,KAAM,2BACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,wCACNJ,GAAIC,IAAQC,MAEd,CACEpG,GAAI,EACJsG,KAAM,wCACNJ,GAAIC,IAAQK,gBAEd,CACExG,GAAI,EACJsG,KAAM,wCACNJ,GAAIC,IAAQM,qBAIlB,CACEzG,GAAI,EACJsG,KAAM,eACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,4BACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,kCACNJ,GAAIC,IAAQO,gBAEd,CACE1G,GAAI,EACJsG,KAAM,kCACNJ,GAAIC,IAAQQ,0BAIlB,CACE3G,GAAI,EACJsG,KAAM,4BACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,kCACNJ,GAAIC,IAAQS,6BAEd,CACE5G,GAAI,EACJsG,KAAM,kCACNJ,GAAIC,IAAQU,8BAMtB,CACE7G,GAAI,EACJsG,KAAM,eACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,4BACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,kCACNJ,GAAIC,IAAQW,oBAEd,CACE9G,GAAI,EACJsG,KAAM,kCACNJ,GAAIC,IAAQY,2BAIlB,CACE/G,GAAI,EACJsG,KAAM,4BACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,kCACNJ,GAAIC,IAAQa,8BAEd,CACEhH,GAAI,EACJsG,KAAM,kCACNJ,GAAIC,IAAQc,iCASbC,EAAQ,CACnBlH,GAAI,EACJuC,MAAO,4BACPwD,KAAMC,IAAOmB,MACbd,MAAO,CACL,CAAErG,GAAI,EAAGsG,KAAM,4BAASJ,GAAI,aAC5B,CAAElG,GAAI,EAAGsG,KAAM,4BAASJ,GAAI,cAInBkB,EAAS,CACpBpH,GAAI,EACJuC,MAAO,iCACPwD,KAAMC,IAAOqB,OACbhB,MAAO,CACL,CACErG,GAAI,EACJsG,KAAM,mCACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,2BACNJ,GAAIC,IAAQmB,gBAEd,CACEtH,GAAI,EACJsG,KAAM,eACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,4BACNJ,GAAIC,IAAQoB,oBAEd,CACEvH,GAAI,EACJsG,KAAM,4BACNJ,GAAIC,IAAQqB,yBAIlB,CACExH,GAAI,EACJsG,KAAM,eACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,4BACNJ,GAAIC,IAAQsB,gCAEd,CACEzH,GAAI,EACJsG,KAAM,4BACNJ,GAAIC,IAAQuB,sCAMtB,CACE1H,GAAI,EACJsG,KAAM,+CACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,2BACNJ,GAAIC,IAAQwB,iBAEd,CACE3H,GAAI,EACJsG,KAAM,eACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,4BACNJ,GAAIC,IAAQyB,2BAEd,CACE5H,GAAI,EACJsG,KAAM,4BACNJ,GAAIC,IAAQ0B,+BAIlB,CACE7H,GAAI,EACJsG,KAAM,eACNC,IAAK,CACH,CACEvG,GAAI,EACJsG,KAAM,4BACNJ,GAAIC,IAAQ2B,+BAEd,CACE9H,GAAI,EACJsG,KAAM,4BACNJ,GAAIC,IAAQ4B,uC,kCC3GXrH,kBAxEC,SAAC,GAMH,IALZsH,EAKW,EALXA,QACAC,EAIW,EAJXA,YACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,mBACAC,EACW,EADXA,SACW,EACmCxG,mBAAS,IAD5C,mBACJyG,EADI,KACaC,EADb,KAQLC,EACJN,GACAA,EAAYxE,OAAS,GACrBwE,EAAY9F,KAAI,SAACkD,GACf,IAAMmD,EACJnD,EAAKiB,OAAS+B,EAAgB/B,MAC9B8B,EAASK,SAASnD,SAASD,EAAKa,IAElC,OACE,wBACEnG,UAAU,OACVD,QAAS,SAACyD,GAAD,OAhBU,SAACA,EAAG8B,GAC7B9B,EAAEmF,kBACFJ,EAAmBjD,GAcGsD,CAAmBpF,EAAG8B,IACtCjF,SAAU,EACVD,KAAK,WACLD,WAAY,aACZoC,IAAK+C,EAAKrF,IAEV,kBAAC,IAAD,CACEkG,GAAE,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAMa,GACVnG,UAAS,wCACPyI,EAAiB,cAAgB,KAGnC,uBAAGzI,UAAU,8CACVsF,EAAKiB,WAOVJ,EAAkB8B,EAAlB9B,GAAII,EAAc0B,EAAd1B,KAAMC,EAAQyB,EAARzB,IAElB,OACE,wBACExG,UAAU,OACVD,QAAS,SAACyD,GAAD,OAAO4E,EAAmB5E,EAAGyE,EAASE,IAC/C9H,SAAU,EACVD,KAAK,WACLD,WAAY,cAEZ,kBAAC,IAAD,CACEgG,GAAIA,EACJnG,UAAS,qBACPmI,EAAkB,SAAW,GADtB,0BAESA,IAAoB3B,EAAM,cAAgB,KAE5D,uBAAGxG,UAAU,yCAAyCuG,GACrDC,GAAO,kBAAC,IAAD,CAAiBR,KAAM6C,OAGjC,wBAAI7I,UAAS,wBAAmBmI,EAAkB,OAAS,KACxDK,OCQM7H,kBApEE,SAAC,GAMJ,IALZ2E,EAKW,EALXA,KACAwD,EAIW,EAJXA,QACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,SACAX,EACW,EADXA,SAEMhE,EAAWC,cAEX2E,EAAkB1E,aAAY,SAACC,GAAD,OAAWA,EAAM0E,QAAQD,mBACrD9C,EAAkBb,EAAlBa,GAAII,EAAcjB,EAAdiB,KAAMC,EAAQlB,EAARkB,IAJP,EAK2B3E,mBAAQ,OAACoH,QAAD,IAACA,OAAD,EAACA,EAAiBzC,KALrD,mBAKJ0B,EALI,KAKSiB,EALT,OAMuBtH,oBAAS,GANhC,mBAMJuH,EANI,KAMOC,EANP,KAQLjB,EAAqB,SAAC5E,EAAGyE,EAASqB,GACtC9F,EAAEmF,kBACFU,EAAaC,GACbjF,EAASkE,YAAmBN,IAC5BkB,EAAelB,EAAQzB,KACnByB,EAAQ1B,OAAS0C,EAAgB1C,MAAQ+C,GAC3Cf,YAAmB,KAGjBgB,EACJT,GACAA,EAAQpF,OAAS,GACjBoF,EAAQ1G,KAAI,SAAC6F,GACX,IAAME,EACJc,EAAgB1C,OAAS0B,EAAQ1B,MACjC8B,EAASK,SAASnD,SAASD,EAAKa,IAElC,OACE,kBAAC,EAAD,CACE5D,IAAK0F,EAAQhI,GACbgI,QAASA,EACTuB,QAASvB,EAAQzB,IACjB4B,mBAAoBA,EACpBF,YAAaA,EACbC,gBAAiBA,EACjBE,SAAUA,OAKlB,OACE,wBACErI,UAAU,OACVD,QAAS,kBAAMgJ,EAAgBzD,EAAM0D,IACrC3I,SAAU,EACVD,KAAK,WACLD,WAAY,cAEZ,kBAAC,IAAD,CACEgG,GAAIA,GAAM,IACVnG,UAAS,qBAAgBgJ,EAAW,SAAW,GAAtC,YACPA,IAAaxC,EAAM,cAAgB,KAGrC,uBAAGxG,UAAU,qBAAqBuG,GACjCC,GAAO,kBAAC,IAAD,CAAiBR,KAAM6C,OAEjC,wBAAI7I,UAAS,wBAAmBgJ,GAAYI,EAAY,OAAS,KAC9DG,O,SCFME,cAAW9I,gBA1Eb,SAAC,GAAyB,IAAvB0H,EAAsB,EAAtBA,SACRhE,EAAWC,cACXoF,EAAenF,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAO0E,eAAlB,aAAW,EAAgBQ,gBAFxB,EAGN7H,mBAAQ,OAAC6H,QAAD,IAACA,OAAD,EAACA,EAAclD,KAHjB,mBAG7BsC,EAH6B,KAGpBa,EAHoB,KAI9BZ,EAAkB,SAACzD,EAAMgE,GAC7BK,EAAWrE,EAAKkB,KAEhBnC,EAASuF,YAAgBtE,IAErBA,EAAKiB,OAASmD,EAAanD,MAAQ+C,GACrCjF,EAASuF,YAAgB,KAEvBtE,EAAKrF,MAAL,OAAYyJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAczJ,KAC5BoE,EAASkE,YAAmB,MAI1BsB,EAAiB,SAACC,GACtB,OAAOA,EAASxD,MAAMlE,KAAI,SAACkD,GACzB,IAAM0D,EACJU,EAAanD,OAASjB,EAAKiB,MAAQ8B,EAASK,SAASnD,SAASD,EAAKa,IACrE,OACE,kBAAC,EAAD,CACE5D,IAAK+C,EAAKrF,GACVqF,KAAMA,EACNwD,QAASA,EACTC,gBAAiBA,EACjBW,aAAcA,EACdV,SAAUA,EACVX,SAAUA,QAMlB,OACE,yBAAKrI,UAAU,QACb,wBAAIA,UAAU,cAAd,4BACA,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,qBACb,uBAAGA,UAAU,cACX,yBAAKM,IAAG,OAAEyF,QAAF,IAAEA,OAAF,EAAEA,EAAWC,KAAMvF,IAAI,SAC/B,qCAAOsF,QAAP,IAAOA,OAAP,EAAOA,EAAWvD,SAGtB,wBAAIxC,UAAU,cAAc6J,EAAe9D,IAE3C,yBAAK/F,UAAU,qBACb,uBAAGA,UAAU,cACX,yBAAKM,IAAG,OAAE+G,QAAF,IAAEA,OAAF,EAAEA,EAAQrB,KAAMvF,IAAI,SAC5B,qCAAO4G,QAAP,IAAOA,OAAP,EAAOA,EAAQ7E,SAGnB,wBAAIxC,UAAU,cAAc6J,EAAexC,IAE3C,yBAAKrH,UAAU,qBACb,uBAAGA,UAAU,cACX,yBAAKM,IAAG,OAAE6G,QAAF,IAAEA,OAAF,EAAEA,EAAOnB,KAAMvF,IAAI,SAC3B,qCAAO0G,QAAP,IAAOA,OAAP,EAAOA,EAAO3E,SAGlB,wBAAIxC,UAAU,cAAc6J,EAAe1C,IAC3C,yBAAKnH,UAAU,UACb,yBAAKA,UAAU,aAAf,4BACA,kBAAC+J,EAAA,EAAD,CAAQnH,YAAY,cAClB,yBAAKtC,IAAK2F,IAAO+D,WAAYvJ,IAAI,KACjC,iEClECwJ,EAAa,SAAC,GAKb,IAJZC,EAIW,EAJXA,SAIW,IAHXhG,gBAGW,aAFXC,gBAEW,aADXgG,oBACW,WACiBtI,oBAAS,GAD1B,mBACJuI,EADI,KACIC,EADJ,KAELC,EAAUlH,iBAAO,MACjB9B,EAAU8B,iBAAO,MACjBmH,EAAcnH,iBAAO,MAE3BxC,EACE0J,GACA,WACMF,GACFC,GAAU,KAGd,CAAE/I,YAEJ,IAKIkJ,EALAC,EAAc,GAUlB,OATIlH,OAAOmH,YAAc,MACvBD,EAAc,cAIFD,EAAVtG,EAAuB,kBAAC,EAAD,CAAQA,UAAQ,IAClCC,EAAuB,kBAAC,EAAD,CAAQA,UAAQ,IAC9B,kBAAC,EAAD,MAGhB,oCACGgG,GAAgB,kBAACQ,EAAA,EAAD,MACjB,yBAAK3K,UAAS,0BAAqBoK,EAAS,OAAS,KACnD,yBAAKpK,UAAU,kBACb,yBACEA,UAAS,6BAAwBoK,EAAS,OAAS,IACnDrK,QAAS,WACPsK,GAAWD,IAEb/J,SAAU,EACVD,KAAK,WACLD,WAAY,aACZU,IAAKS,GAEL,0BAAMtB,UAAU,WAGpB,yBAAKA,UAAS,kBAAaoK,EAAS,OAAS,GAA/B,YAAqCK,IACjD,kBAAC,EAAD,CAAaG,SAAUN,KAEzB,yBAAKtK,UAAU,eAAea,IAAK0J,GAChCC,EACD,yBAAKxK,UAAU,WACb,6BAAMkK,QAQlBD,EAAWvJ,aAAe,CACxBwD,UAAU,EACVC,UAAU,EACVgG,cAAc,GAGDF,O,iCCpFf,+DAYaY,EAAc,SAAC,GAMd,IALZ/K,EAKW,EALXA,MAKW,IAJXC,eAIW,MAJD,aAIC,MAHXC,iBAGW,MAHC,GAGD,EAFXC,EAEW,EAFXA,GAEW,IADX6K,eACW,MADD,GACC,EACX,OACE,yBAAK7K,GAAIA,EAAID,UAAS,qBAAgBA,IACpC,yBACEA,UAAU,qBACVD,QAASA,EACTI,WAAY,aACZC,KAAK,SACLC,SAAS,KAET,yBAAKC,IAAKC,IAAOwK,kBAAmBtK,IAAI,KACxC,yBAAKT,UAAU,4BACZF,EACD,8BAAOgL,OAOjBD,EAAYnK,aAAe,CACzBV,UAAW,GACXD,QAAS,aACTE,GAAI,GACJ6K,QAAS,IAGInK,mBAAYkK,I,iCC9C3B,+CA8BaG,EAAa,SAAC,GAAD,QACxBlL,aADwB,MAChB,GADgB,EAExBoK,EAFwB,EAExBA,SAFwB,IAGxBe,iBAHwB,SAIxBb,EAJwB,EAIxBA,OACAc,EALwB,EAKxBA,KACAC,EANwB,EAMxBA,YACAvI,EAPwB,EAOxBA,YACAwI,EARwB,EAQxBA,gBACAC,EATwB,EASxBA,aACAC,EAVwB,EAUxBA,aACAC,EAXwB,EAWxBA,aAXwB,IAYxBC,yBAZwB,MAYJ,GAZI,MAaxBC,wBAbwB,MAaL,GAbK,MAcxBC,mBAdwB,MAcV,GAdU,MAexBC,yBAfwB,MAeJ,GAfI,MAgBxBC,oBAhBwB,MAgBT,KAhBS,MAiBxBC,oBAjBwB,MAiBT,aAjBS,EAkBxBC,EAlBwB,EAkBxBA,iBAlBwB,IAmBxBC,uBAnBwB,MAmBN,aAnBM,SAqBxB,kBAAC,IAAD,CACEd,UAAWA,EACXe,OAAQ,WACN,OAAO,GAETC,KAAM7B,EACNc,KAAMA,EACNlL,UAAW4C,GAEVwI,GACC,yBACEpL,UAAU,2BACVD,QAASgM,EACT3L,KAAK,SACLC,SAAU,EACV6L,QAASH,GAET,yBAAKzL,IAAKC,IAAO4L,WAAY1L,IAAI,MAIpC4K,GAAgB,wBAAIrL,UAAU,eAAeF,GAE9C,kBAAC,IAAMsM,KAAP,KACIf,EAGA,yBAAKrL,UAAU,0BAA0BkK,GAFzC,yBAAKlK,UAAU,yBAAyBkK,IAK3CoB,GACC,kBAAC,IAAMe,OAAP,KACId,EASA,yBAAKvL,UAAU,gBACb,kBAAC,IAAD,CACEsM,KAAK,SACL1J,YAAW,uBAAkB4I,EAAlB,YAAuCC,GAClD1L,QAAS8L,EACTU,WAAYT,GAEXJ,GAEH,kBAAC,IAAD,CACEY,KAAK,SACL1J,YAAW,uBAAkB4I,EAAlB,YAAuCG,GAClD5L,QAASoL,GAERS,IAtBL,kBAAC,IAAD,CACEU,KAAK,SACL1J,YAAa4I,EACbzL,QAASoL,GAERS,MA0BbZ,EAAWtK,aAAe,CACxBZ,MAAO,GACPmL,WAAW,EACXC,KAAM,GACNtI,YAAa,GACbwI,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,kBAAmB,GACnBC,iBAAkB,GAClBC,YAAa,GACbC,kBAAmB,GACnBC,aAAc,KACdC,aAAc,aACdC,kBAAkB,EAClBC,gBAAiB,cAEJpL,mBAAYqK,I,kLCuGZrK,kBA/MI,SAAC,GAAuC,IAAD,EAApC6L,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,QAC7BpI,EAAWC,cAEXoI,EAASnI,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOmI,eAAlB,aAAW,EAAgBD,UAChDJ,EAAO/H,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOmI,eAAlB,aAAW,EAAgBL,QAJI,EAMZzK,oBAAS,GANG,mBAMjD+K,EANiD,KAMjCC,EANiC,OAQxBhL,oBAAS,GARe,mBAQjDiL,EARiD,KAQvCC,EARuC,KAUxD/L,qBAAU,WACRqD,EAASY,eACTZ,EAASc,iBACR,IAEH,IAAM6H,EACJR,GACAA,EAAcS,SACdT,EAAcS,QAAQvJ,OAAS,GAC/B8I,EAAcS,QAAQ7K,KAAI,SAACkD,GAAU,IAAD,IAElC,OADAzB,QAAQC,IAAR,OAAYwB,QAAZ,IAAYA,OAAZ,EAAYA,EAAM4H,SAEhB,uBAAGlN,UAAU,wBACX,qCAAOsF,QAAP,IAAOA,GAAP,UAAOA,EAAM4H,eAAb,aAAO,EAAeC,UACtB,yBACE7M,IAAK2F,IAAOmH,YACZ3M,IAAI,GACJT,UAAU,wBAEZ,qCAAOsF,QAAP,IAAOA,GAAP,UAAOA,EAAM+H,gBAAb,aAAO,EAAgBC,UACvB,yBACEhN,IAAK2F,IAAOmH,YACZ3M,IAAI,GACJT,UAAU,wBAEZ,qCAAOsF,QAAP,IAAOA,OAAP,EAAOA,EAAMiI,aAKfC,EACJd,GACAe,OAAOC,OAAOhB,GAAQtK,KAAI,SAACkD,EAAMhD,GAC/B,OACE,wBAAItC,UAAU,aAAauC,IAAKD,GAC9B,4BAAKgD,GAAQA,EAAK,QAkB1B,OAbAtE,qBAAU,WACR,OAAQsL,GACN,IAAK,+BACHO,GAAkB,GAClB,MACF,IAAK,gCACHJ,EAAQkB,KAAKvH,IAAQwH,uBAKxB,CAACtB,IAGF,6BACE,yBAAKtM,UAAU,SACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SAAf,gBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBACZwM,GACCA,EAAcqB,OACdrB,EAAcqB,MAAM,KAFrB,OAGCrB,QAHD,IAGCA,GAHD,UAGCA,EAAeqB,MAAM,UAHtB,aAGC,EAAyBC,gBAG/B,yBAAK9N,UAAU,SAAf,sBACA,yBAAKA,UAAU,SACZ+N,IAAM,OAACvB,QAAD,IAACA,OAAD,EAACA,EAAewB,YAAYC,OAAO,gBAG9C,yBAAKjO,UAAU,OACb,yBAAKA,UAAU,SAAf,sBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,mCAAf,OACGwM,QADH,IACGA,OADH,EACGA,EAAe0B,QAGpB,yBAAKlO,UAAU,SAAf,4BACA,yBAAKA,UAAU,SAASmO,YAAW,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAe4B,SAErD,yBAAKpO,UAAU,OACb,yBAAKA,UAAU,SAAf,sBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,mCAAf,OACGwM,QADH,IACGA,OADH,EACGA,EAAe6B,WAGpB,yBAAKrO,UAAU,SAAf,4BACA,yBAAKA,UAAU,SAAf,aAEF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SAAf,sBACA,yBAAKA,UAAU,sBAAf,OAAqCwM,QAArC,IAAqCA,OAArC,EAAqCA,EAAejG,MACpD,yBAAKvG,UAAU,SAAf,6BACA,yBAAKA,UAAU,SACb,6BAAMgN,KAIV,yBAAKhN,UAAU,sBACb,kBAAC+J,EAAA,EAAD,CACEnH,YAAY,aACZ7C,QAAS,WACPgN,GAAY,KAHhB,gBAQA,kBAAChD,EAAA,EAAD,CACEnH,YAAY,aACZ7C,QAAS,WACP0M,EAAQkB,KAAR,UACKvH,IAAQwH,mBADb,wBACwCpB,QADxC,IACwCA,OADxC,EACwCA,EAAevM,OAJ3D,gBAUA,kBAAC8J,EAAA,EAAD,CACEnH,YAAY,aACZ7C,QAAS,WACP0M,EAAQkB,KAAKvH,IAAQwH,sBAHzB,kBAgCJ,kBAACU,EAAA,EAAD,CACElE,OAAQ0C,EACRzB,cAAY,EACZvL,MAAM,eACNsL,iBAAe,EACfE,cAAY,EACZS,gBAAiB,WACfgB,GAAY,IAEd5B,YAAa,WACX4B,GAAY,IAEdrB,YAAY,eACZE,aAAa,eACbL,cAAY,EACZC,kBAAkB,aAClBK,aAAc,WACZxH,EAASkK,YAAa,OAAC/B,QAAD,IAACA,OAAD,EAACA,EAAevM,KACtC8M,GAAY,KAlBhB,mEAuBA,kBAACuB,EAAA,EAAD,CACElE,OAAQwC,EACRvB,cAAY,EACZvL,MAAM,QACNsL,iBAAe,EACfE,cAAY,EACZS,gBAAiB,WACfc,GAAkB,GAClBxI,EAASmK,gBAEXrD,YAAa,WACX0B,GAAkB,GAClBxI,EAASmK,gBAEX9C,YAAY,KACZF,kBAAkB,cAEjBgC,OCpLMiB,UA9BO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOjC,EAAqB,EAArBA,QACxBpI,EAAWC,cACXkI,EAAgBjI,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOmI,eAAlB,aAAW,EAAgBH,iBACvDrC,EAAe5F,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOmI,eAAlB,aAAW,EAAgBxC,gBAEpDlK,EAAOyO,EAAMC,OAAb1O,GAMR,OAJAe,qBAAU,WACRqD,EAASuK,YAAe,CAAE3O,KAAI4O,UAAU,OACvC,CAAC5O,IAGF,kBAACgK,EAAA,EAAD,CAAYE,aAAcA,GACxB,yBAAKnK,UAAU,WACb,kBAAC6K,EAAA,EAAD,CACE/K,MAAM,+CACNgL,QAAQ,iHAEV,kBAAC,IAAD,CAAgBhL,MAAM,8BAEtB,kBAAC,EAAD,CACE2M,QAASA,EACTD,cAAeA","file":"static/js/39.48c8296c.chunk.js","sourcesContent":["// @flow\n// libs\nimport React, { memo } from 'react';\nimport images from 'themes/images';\n\ntype Props = {\n  title: string,\n  onClick?: Function,\n  className?: string,\n  id?: string,\n  titleLight?: string,\n};\n\nexport const TitleSubHeader = ({\n  title,\n  onClick = () => {},\n  className = '',\n  id,\n  titleLight = '',\n}: Props) => {\n  return (\n    <div id={id} className={`wrap-title-sub ${className}`}>\n      <div\n        className=\"wrap-title-sub__header\"\n        onClick={onClick}\n        onKeyPress={() => {}}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <img src={images.icon_arrow} alt=\"\" />\n        <div className=\"wrap-title-sub__header__name\">\n          {title}\n          <span>{titleLight}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTitleSubHeader.defaultProps = {\n  className: '',\n  onClick: () => {},\n  titleLight: '',\n  id: '',\n};\n\nexport default memo<Props>(TitleSubHeader);\n","import { useEffect } from 'react';\n\n/**\n * Function: useOnClickOutside\n * A custom hook that use to trigger an event if have action click outside a ref's element.\n * @param {object} ref: a reference of element that we need to detect\n * @param {function} handler: a function that used to trigger event if have click event outside of element\n */\nconst useClickOutside = (ref, handler, { ...rest }) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element\n      if (\n        !ref.current ||\n        ref.current.contains(event.target) ||\n        !rest.iconRef.current ||\n        rest.iconRef.current.contains(event.target)\n      ) {\n        return;\n      }\n\n      // Fire event if clicking outside ref's element\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n    };\n  }, [ref, handler, rest.iconRef]);\n};\n\nexport default useClickOutside;\n","import { useEffect, useState } from 'react';\n\n/**\n * Function: useDebounce\n * @param {string} value \n * @param {number} delay \n * @returns \n */\n\nconst useDebounce = (value, delay) => {\n\n    // State and setter for debounce value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        // update debounced value after delay\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        // cancel the timeout if value changes\n        return () => {\n            clearTimeout(handler);\n        }\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;","// @flow\nimport React, { memo } from 'react';\n\ntype Props = {\n  onClick: Function,\n  options?: Array<{ id: number, value: number, label: string }>\n};\n\nconst AutoSuggest = ({ onClick, options = [] }: Props) => {\n  return (\n    <div className=\"auto-suggest\">\n      {options\n        .map((option, index) => (\n          <p\n            className=\"auto-suggest__item\"\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            onClick={() => onClick(option)}\n            role=\"presentation\"\n          >\n            {option.label}\n          </p>\n        ))}\n    </div>\n  );\n};\n\nAutoSuggest.defaultProps = {\n  options: [],\n};\n\nexport default memo < Props > (AutoSuggest);\n","// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport AutoSuggest from './AutoSuggest';\n\ntype Props = {\n  placeholder?: string,\n  handleIconClick?: Function,\n  customClass?: string,\n  value?: string,\n  onChange?: Function,\n  setSearchTerm?: Function,\n  options?: Array<{ id: number, value: number, label: string }>,\n  handleKeyDown: Function,\n  isSpinner?: boolean,\n};\n\nconst Search = ({\n  placeholder,\n  handleIconClick = () => { },\n  customClass = '',\n  value = '',\n  onChange = () => { },\n  setSearchTerm = () => { },\n  options = [],\n  handleKeyDown,\n  isSpinner = false\n}: Props) => {\n  const [display, setDisplay] = useState(false);\n\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      window.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n\n  const updateSearchInput = (searchValue) => {\n    console.log(searchValue, \"searchValue\");\n    setSearchTerm(searchValue);\n    setDisplay(false);\n  };\n\n  return (\n    <div ref={wrapperRef} className={`search ${customClass}`}>\n      <input\n        className=\"search__input\"\n        onClick={() => setDisplay(true)}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onKeyPress={(e) => handleKeyDown(e)}\n      />\n\n      {isSpinner && <div className=\"spinner\" />}\n\n      <img\n        src={images.icon_search}\n        alt=\"Icon Search\"\n        className=\"search__icon\"\n        onClick={handleIconClick}\n        role=\"presentation\"\n      />\n      {(display && options.length) ? <AutoSuggest search={value} onClick={updateSearchInput} options={options} /> : null}\n    </div>\n  );\n};\n\nSearch.defaultProps = {\n  placeholder: '',\n  customClass: '',\n  value: '',\n  onChange: () => { },\n  setSearchTerm: () => { },\n  handleIconClick: () => { },\n  options: [],\n  isSpinner: false,\n};\n\nexport default memo < Props > (Search);\n","// @flow\nimport React from 'react';\n\ntype Props = {\n  isShow?: boolean,\n  wrapperRef: any,\n};\nconst ModalEvent = ({ isShow = false, wrapperRef }: Props) => {\n  return (\n    <div\n      className={`modal__event ${isShow ? 'show-modal-event' : ''}`}\n      ref={wrapperRef}\n    >\n      <div className=\"modal__event-title\">이벤트 알림</div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n    </div>\n  );\n};\n\nModalEvent.defaultProps = {\n  isShow: false,\n};\n\nexport default ModalEvent;\n","/* eslint-disable react-hooks/exhaustive-deps */\n// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport useClickOutside from 'customHooks/useClickOutSide';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useDebounce from 'customHooks/useDebounce';\nimport { getListCompany, getListPosition } from 'modules/main/redux';\nimport Search from '../Search';\nimport SelectDropdown from '../Select';\nimport ModalEvent from './ModalEvent';\n\ntype Props = {\n  isSearch?: boolean,\n  isSelect?: boolean,\n  eventCount?: number,\n};\n\nconst Header = ({\n  isSearch = false,\n  isSelect = false,\n  eventCount = 0,\n}: Props) => {\n\n  const dispatch = useDispatch();\n  const { listPositions, listCompany, isSpinner } = useSelector(state => state?.main);\n  const [optionDropdown, setOptionDropdown] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const [searchTerm, setSearchTerm] = useState({ label: '', value: '', key: '', id: '' });\n\n  const wrapperRef = useRef(null);\n  const iconRef = useRef(null);\n\n  const debouncedSearchTerm = useDebounce(searchTerm.label, 500);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      dispatch(getListCompany({ keyword: debouncedSearchTerm }));\n      dispatch(getListPosition({ keyword: debouncedSearchTerm }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchTerm])\n\n  // set option dropdown value when listposition != [];\n  useEffect(() => {\n    const indexDefault = listPositions.findIndex((item) => item?.label.includes('본관 남측'));\n    setOptionDropdown(listPositions[indexDefault]);\n  }, [listPositions])\n\n  // Handle Icon search Click\n  const handleIconClick = () => {\n    console.log(searchTerm);\n  }\n\n  // Handle event press key enter search\n  const handleKeyDownSearch = (e) => {\n    if (e.key === 'Enter') {\n      console.log(searchTerm);\n    }\n  }\n\n  // when input search change set value\n  const handleSearchChange = (e) => {\n    const { value } = e.target;\n    setSearchTerm({ ...searchTerm, label: value });\n  };\n\n  // handle click outside event\n  useClickOutside(\n    wrapperRef,\n    () => {\n      if (isShow) {\n        setIsShow(false);\n      }\n    },\n    { iconRef }\n  );\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        {isSearch ? (\n          <Search\n            placeholder=\"회사명이나 구역명으로 검색해보세요.\"\n            value={searchTerm.label}\n            onChange={handleSearchChange}\n            setSearchTerm={setSearchTerm}\n            options={[...listPositions, ...listCompany]}\n            handleIconClick={handleIconClick}\n            handleKeyDown={handleKeyDownSearch}\n            isSpinner={isSpinner}\n          />\n        ) : (\n          ''\n        )}\n        {isSelect ? (\n          <SelectDropdown\n            placeholder=\"List Selects\"\n            listItem={listPositions}\n            onChange={(ops) => {\n              setOptionDropdown(ops);\n            }}\n            option={optionDropdown}\n            disabled={false}\n            isSearchable={false}\n            blurInputOnSelect={false}\n            customClass=\"header__select\"\n          />\n        ) : (\n          ''\n        )}\n      </div>\n      <div className=\"header__right\">\n        <div className=\"header__event\">\n          <img\n            src={images.icon_event}\n            alt=\"Icon Event\"\n            className=\"header__icon\"\n            onClick={() => setIsShow(!isShow)}\n            role=\"presentation\"\n            ref={iconRef}\n          />\n          {eventCount > 0 ? (\n            <span className=\"header__notification\">eventCount</span>\n          ) : (\n            ''\n          )}\n        </div>\n\n        <div className=\"header__label-event\">\n          <span className=\"header__label-content\">이벤트발생</span>\n\n          {/* Modal event */}\n\n          <ModalEvent isShow={isShow} wrapperRef={wrapperRef} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  eventCount: 0,\n};\n\nexport default memo < Props > (Header);\n","import IMAGES from 'themes/images';\nimport ROUTERS from './routers';\n\nexport const DASHBOARD = {\n  id: 1,\n  label: '실증단지',\n  icon: IMAGES.iconGraph,\n  to: ROUTERS.ROOT,\n  items: [\n    {\n      id: 1,\n      name: '대시보드',\n      sub: [\n        {\n          id: 1,\n          name: '통합 대시보드',\n          to: ROUTERS.ROOT,\n        },\n        {\n          id: 2,\n          name: '구역 대시보드',\n          to: ROUTERS.DASHBOARD_AREA,\n        },\n        {\n          id: 3,\n          name: '업체 대시보드',\n          to: ROUTERS.DASHBOARD_COMPANY,\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '현황',\n      sub: [\n        {\n          id: 1,\n          name: '발전 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.STATUS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.STATUS_COMPANY_BY_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_AREA,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: '통계',\n      sub: [\n        {\n          id: 1,\n          name: '발전 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_AREA,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nexport const SETUP = {\n  id: 2,\n  label: '기기 관리',\n  icon: IMAGES.setup,\n  items: [\n    { id: 1, name: '계정 관리', to: '/accounts' },\n    { id: 2, name: '기기 관리', to: '/devices' },\n  ],\n};\n\nexport const MOCKUP = {\n  id: 1,\n  label: '실증테스트',\n  icon: IMAGES.mockUp,\n  items: [\n    {\n      id: 1,\n      name: '테스트(목업)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.TEST_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_MOCKUP_STATUS,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_MOCKUP_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '테스트(실증단지)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.SOLAR_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n  itemSub: {\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listNestSub: Array<{\n    id: any,\n    to: string,\n    name: string,\n  }>,\n  isActiveNestSub: boolean,\n  handleClickItemSub: Function,\n  location: {\n    pathname: string,\n  },\n};\n\nconst Submenu = ({\n  itemSub,\n  listNestSub,\n  isActiveNestSub,\n  handleClickItemSub,\n  location,\n}: Props) => {\n  const [nestSubClicking, setNestSubClicking] = useState({});\n\n  const handleClickNestSub = (e, item) => {\n    e.stopPropagation();\n    setNestSubClicking(item);\n  };\n\n  const renderNestedSub =\n    listNestSub &&\n    listNestSub.length > 0 &&\n    listNestSub.map((item) => {\n      const activeNestItem =\n        item.name === nestSubClicking.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <li\n          className=\"item\"\n          onClick={(e) => handleClickNestSub(e, item)}\n          tabIndex={0}\n          role=\"menuitem\"\n          onKeyPress={() => {}}\n          key={item.id}\n        >\n          <Link\n            to={item?.to}\n            className={`item__link item-link-nest-sub ${\n              activeNestItem ? 'active-link' : ''\n            }`}\n          >\n            <p className=\"item__link__label item-link-label-nest-sub\">\n              {item.name}\n            </p>\n          </Link>\n        </li>\n      );\n    });\n\n  const { to, name, sub } = itemSub;\n\n  return (\n    <li\n      className=\"item\"\n      onClick={(e) => handleClickItemSub(e, itemSub, isActiveNestSub)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to}\n        className={`item__link ${\n          isActiveNestSub ? 'active' : ''\n        } item-link-sub ${isActiveNestSub && !sub ? 'active-link' : ''}`}\n      >\n        <p className=\"item__link__label item-link-label-sub\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n\n      <ul className={`menu__listsub ${isActiveNestSub ? 'open' : ''}`}>\n        {renderNestedSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(Submenu);\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { setNestSubClicking } from 'commons/redux';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport Submenu from './Submenu';\n\ntype Props = {\n  item: {\n    id: number,\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listSub: Array<{\n    id: number,\n    name: string,\n    to: string,\n    sub: Array<{}>,\n  }>,\n  handleClickItem: Function,\n  isActive: boolean,\n  location: {\n    pathname: string,\n  },\n};\n\nconst MenuItem = ({\n  item,\n  listSub,\n  handleClickItem,\n  isActive,\n  location,\n}: Props) => {\n  const dispatch = useDispatch();\n\n  const subMenuClicking = useSelector((state) => state.commons.subMenuClicking);\n  const { to, name, sub } = item;\n  const [listNestSub, setListNestSub] = useState(subMenuClicking?.sub);\n  const [activeSub, setActiveSub] = useState(false);\n\n  const handleClickItemSub = (e, itemSub, active) => {\n    e.stopPropagation();\n    setActiveSub(active);\n    dispatch(setNestSubClicking(itemSub));\n    setListNestSub(itemSub.sub);\n    if (itemSub.name === subMenuClicking.name && active) {\n      setNestSubClicking({});\n    }\n  };\n  const renderSub =\n    listSub &&\n    listSub.length > 0 &&\n    listSub.map((itemSub) => {\n      const isActiveNestSub =\n        subMenuClicking.name === itemSub.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <Submenu\n          key={itemSub.id}\n          itemSub={itemSub}\n          nestSub={itemSub.sub}\n          handleClickItemSub={handleClickItemSub}\n          listNestSub={listNestSub}\n          isActiveNestSub={isActiveNestSub}\n          location={location}\n        />\n      );\n    });\n\n  return (\n    <li\n      className=\"item\"\n      onClick={() => handleClickItem(item, isActive)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to || '#'}\n        className={`item__link ${isActive ? 'active' : ''} ${\n          isActive && !sub ? 'active-link' : ''\n        }`}\n      >\n        <p className=\"item__link__label\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n      <ul className={`menu__listsub ${isActive || activeSub ? 'open' : ''}`}>\n        {renderSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(MenuItem);\n","// @flow\n// libs\nimport React, { useState, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DASHBOARD, SETUP, MOCKUP } from 'constants/listMenu';\nimport { setMenuClicking, setNestSubClicking } from 'commons/redux';\nimport MenuItem from './MenuItem';\nimport IMAGES from 'themes/images';\nimport { Button } from 'commons/components/Button';\n\ntype Props = {\n  location: {\n    pathname: string,\n  },\n};\n\nconst Menu = ({ location }: Props) => {\n  const dispatch = useDispatch();\n  const menuClicking = useSelector((state) => state?.commons?.menuClicking);\n  const [listSub, setListSub] = useState(menuClicking?.sub);\n  const handleClickItem = (item, active) => {\n    setListSub(item.sub);\n\n    dispatch(setMenuClicking(item));\n\n    if (item.name === menuClicking.name && active) {\n      dispatch(setMenuClicking({}));\n    }\n    if (item.id !== menuClicking?.id) {\n      dispatch(setNestSubClicking({}));\n    }\n  };\n\n  const renderMenuList = (listMenu) => {\n    return listMenu.items.map((item) => {\n      const isActive =\n        menuClicking.name === item.name || location.pathname.includes(item.to);\n      return (\n        <MenuItem\n          key={item.id}\n          item={item}\n          listSub={listSub}\n          handleClickItem={handleClickItem}\n          menuClicking={menuClicking}\n          isActive={isActive}\n          location={location}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"menu\">\n      <h1 className=\"menu__head\">실증단지</h1>\n      <div className=\"wrapper-menu\">\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={DASHBOARD?.icon} alt=\"menu\" />\n            <span>{DASHBOARD?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(DASHBOARD)}</ul>\n\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={MOCKUP?.icon} alt=\"menu\" />\n            <span>{MOCKUP?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(MOCKUP)}</ul>\n\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={SETUP?.icon} alt=\"menu\" />\n            <span>{SETUP?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(SETUP)}</ul>\n        <div className=\"logout\">\n          <div className=\"name-user\">마스터님</div>\n          <Button customClass=\"btn-logout\">\n            <img src={IMAGES.btn_logout} alt=\"\" />\n            <div>로그아웃</div>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(memo<Props>(Menu));\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useRef } from 'react';\nimport useClickOutside from 'customHooks/useClickOutSide';\n// import Header from '../../components/Header';\nimport Loading from 'commons/components/Loading';\nimport Header from 'commons/components/Header';\n\nimport SidebarMenu from '../Menu';\n\n\ntype Props = {\n  children: React.AbstractComponent<{}>,\n  isSearch?: boolean,\n  isSelect?: boolean,\n  isProcessing?: boolean,\n};\n\nexport const MainLayout = ({\n  children,\n  isSearch = false,\n  isSelect = false,\n  isProcessing = false,\n}: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const refMenu = useRef(null);\n  const iconRef = useRef(null);\n  const mainContent = useRef(null);\n\n  useClickOutside(\n    refMenu,\n    () => {\n      if (isOpen) {\n        setIsOpen(false);\n      }\n    },\n    { iconRef }\n  );\n  let classHeight = '';\n  if (window.innerHeight < 900) {\n    classHeight = 'heightMenu';\n  }\n\n  let showHeader;\n  if (isSearch) showHeader = <Header isSearch />;\n  else if (isSelect) showHeader = <Header isSelect />;\n  else showHeader = <Header />;\n\n  return (\n    <>\n      {isProcessing && <Loading />}\n      <div className={`wrapper-content ${isOpen ? 'open' : ''}`}>\n        <div className=\"wrapper-mobile\">\n          <div\n            className={`d-mobile btn-menu  ${isOpen ? 'show' : ''}`}\n            onClick={() => {\n              setIsOpen(!isOpen);\n            }}\n            tabIndex={0}\n            role=\"menuitem\"\n            onKeyPress={() => {}}\n            ref={iconRef}\n          >\n            <span className=\"icon\" />\n          </div>\n        </div>\n        <div className={`sidebar ${isOpen ? 'show' : ''} ${classHeight}`}>\n          <SidebarMenu innerRef={refMenu} />\n        </div>\n        <div className=\"main-content\" ref={mainContent}>\n          {showHeader}\n          <div className=\"content\">\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMainLayout.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  isProcessing: false,\n};\n\nexport default MainLayout;\n","// @flow\n// libs\nimport React, { memo } from 'react';\nimport images from 'themes/images';\n\ntype Props = {\n  title: string,\n  onClick?: Function,\n  className?: string,\n  id?: string,\n  descSub?: string,\n};\n\nexport const TitleHeader = ({\n  title,\n  onClick = () => {},\n  className = '',\n  id,\n  descSub = '',\n}: Props) => {\n  return (\n    <div id={id} className={`wrap-title ${className}`}>\n      <div\n        className=\"wrap-title__header\"\n        onClick={onClick}\n        onKeyPress={() => {}}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <img src={images.icon_title_header} alt=\"\" />\n        <div className=\"wrap-title__header__name\">\n          {title}\n          <span>{descSub}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTitleHeader.defaultProps = {\n  className: '',\n  onClick: () => {},\n  id: '',\n  descSub: '',\n};\n\nexport default memo<Props>(TitleHeader);\n","/* eslint-disable no-nested-ternary */\n// @flow\n// libs\nimport React, { memo } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Button from 'commons/components/Button';\nimport images from 'themes/images';\n\ntype Props = {\n  title?: string,\n  children: any,\n  animation?: boolean,\n  isOpen: boolean,\n  size?: string,\n  handleClose: Function,\n  customClass?: string,\n  isShowIconClose?: boolean,\n  isShowHeader?: boolean,\n  isShowFooter?: boolean,\n  isShowTwoBtn?: boolean,\n  customClassButton?: string,\n  classNameBtnLeft?: string,\n  textBtnLeft?: string,\n  classNameBtnRight?: string,\n  textBtnRight?: string,\n  handleSubmit?: Function,\n  isDisabledButton?: boolean,\n  handleCloseIcon?: Function,\n};\n\nexport const ModalPopup = ({\n  title = '',\n  children,\n  animation = false,\n  isOpen,\n  size,\n  handleClose,\n  customClass,\n  isShowIconClose,\n  isShowHeader,\n  isShowFooter,\n  isShowTwoBtn,\n  customClassButton = '',\n  classNameBtnLeft = '',\n  textBtnLeft = '',\n  classNameBtnRight = '',\n  textBtnRight = 'OK',\n  handleSubmit = () => {},\n  isDisabledButton,\n  handleCloseIcon = () => {},\n}: Props) => (\n  <Modal\n    animation={animation}\n    onHide={() => {\n      return true;\n    }}\n    show={isOpen}\n    size={size}\n    className={customClass}\n  >\n    {isShowIconClose && (\n      <div\n        className=\"modal-content__iconClose\"\n        onClick={handleCloseIcon}\n        role=\"button\"\n        tabIndex={0}\n        onKeyUp={handleCloseIcon}\n      >\n        <img src={images.icon_close} alt=\"\" />\n      </div>\n    )}\n\n    {isShowHeader && <h3 className=\"modal-title\">{title}</h3>}\n\n    <Modal.Body>\n      {!isShowHeader ? (\n        <div className=\"modal-body__no-header\">{children}</div>\n      ) : (\n        <div className=\"modal-body__has-header\">{children}</div>\n      )}\n    </Modal.Body>\n    {isShowFooter && (\n      <Modal.Footer>\n        {!isShowTwoBtn ? (\n          <Button\n            type=\"button\"\n            customClass={customClassButton}\n            onClick={handleClose}\n          >\n            {textBtnRight}\n          </Button>\n        ) : (\n          <div className=\"group-button\">\n            <Button\n              type=\"button\"\n              customClass={`button--half ${customClassButton} ${classNameBtnLeft}`}\n              onClick={handleSubmit}\n              isDisabled={isDisabledButton}\n            >\n              {textBtnLeft}\n            </Button>\n            <Button\n              type=\"button\"\n              customClass={`button--half ${customClassButton} ${classNameBtnRight}`}\n              onClick={handleClose}\n            >\n              {textBtnRight}\n            </Button>\n          </div>\n        )}\n      </Modal.Footer>\n    )}\n  </Modal>\n);\n\nModalPopup.defaultProps = {\n  title: '',\n  animation: false,\n  size: '',\n  customClass: '',\n  isShowIconClose: false,\n  isShowHeader: false,\n  isShowFooter: false,\n  isShowTwoBtn: false,\n  customClassButton: '',\n  classNameBtnLeft: '',\n  textBtnLeft: '',\n  classNameBtnRight: '',\n  textBtnRight: 'OK',\n  handleSubmit: () => {},\n  isDisabledButton: false,\n  handleCloseIcon: () => {},\n};\nexport default memo<Props>(ModalPopup);\n","// @flow\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, memo } from 'react';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from 'commons/components/Button';\nimport ROUTERS from 'constants/routers';\nimport ModalPopup from 'commons/components/Modal';\nimport { formatValue } from 'helpers/';\nimport IMAGES from 'themes/images';\nimport { getListCompany, getListPosition } from '../../../device/redux';\nimport { resetAccountType, deleteAccount } from '../../redux';\n\ntype Props = {\n  accountDetail: {\n    name: string,\n    phone: string,\n    devices: [],\n    email: string,\n    username: string,\n    id: number,\n    roles: Array<{}>,\n    created_at: string,\n  },\n  history: {\n    push: Function,\n  },\n};\n\nconst FormDetail = ({ accountDetail, history }: Props) => {\n  const dispatch = useDispatch();\n\n  const errors = useSelector((state) => state?.account?.errors);\n  const type = useSelector((state) => state?.account?.type);\n\n  const [isUpdateFailed, setIsUpdateFailed] = useState(false);\n  // const [isCancel, setIsCancel] = useState(false);\n  const [isDelete, setIsDelete] = useState(false);\n\n  useEffect(() => {\n    dispatch(getListCompany());\n    dispatch(getListPosition());\n  }, []);\n\n  const renderListDeviceMaintain =\n    accountDetail &&\n    accountDetail.devices &&\n    accountDetail.devices.length > 0 &&\n    accountDetail.devices.map((item) => {\n      console.log(item?.company);\n      return (\n        <p className=\"item-device-maintain\">\n          <span>{item?.company?.com_name}</span>\n          <img\n            src={IMAGES.arrow_right}\n            alt=\"\"\n            className=\"mx-2 position-top-1\"\n          />\n          <span>{item?.position?.pos_name}</span>\n          <img\n            src={IMAGES.arrow_right}\n            alt=\"\"\n            className=\"mx-2 position-top-1\"\n          />\n          <span>{item?.ds_name}</span>\n        </p>\n      );\n    });\n\n  const errorsMessage =\n    errors &&\n    Object.values(errors).map((item, index) => {\n      return (\n        <ul className=\"error-list\" key={index}>\n          <li>{item && item[0]}</li>\n        </ul>\n      );\n    });\n\n  useEffect(() => {\n    switch (type) {\n      case 'accounts/updateAccountFailed':\n        setIsUpdateFailed(true);\n        break;\n      case 'accounts/deleteAccountSuccess':\n        history.push(ROUTERS.ACCOUNT_MANAGEMENT);\n        break;\n      default:\n        break;\n    }\n  }, [type]);\n\n  return (\n    <div>\n      <div className=\"table\">\n        <div className=\"row\">\n          <div className=\"col-2\">권한</div>\n          <div className=\"col-4\">\n            <div className=\"wrapper-radio\">\n              {accountDetail &&\n                accountDetail.roles &&\n                accountDetail.roles[0] &&\n                accountDetail?.roles[0]?.display_name}\n            </div>\n          </div>\n          <div className=\"col-2\">등록일</div>\n          <div className=\"col-4\">\n            {moment(accountDetail?.created_at).format('YYYY-MM-DD')}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-2\">이메일</div>\n          <div className=\"col-4\">\n            <div className=\"d-flex align-items-center h-100\">\n              {accountDetail?.email}\n            </div>\n          </div>\n          <div className=\"col-2\">전화번호</div>\n          <div className=\"col-4\">{formatValue(accountDetail?.phone)}</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-2\">아이디</div>\n          <div className=\"col-4\">\n            <div className=\"d-flex align-items-center h-100\">\n              {accountDetail?.username}\n            </div>\n          </div>\n          <div className=\"col-2\">비밀번호</div>\n          <div className=\"col-4\">********</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-2\">담당자</div>\n          <div className=\"col-4 d-block mt-2\">{accountDetail?.name}</div>\n          <div className=\"col-2\">관리 기기</div>\n          <div className=\"col-4\">\n            <div>{renderListDeviceMaintain}</div>\n          </div>\n        </div>\n\n        <div className=\"account__btn-group\">\n          <Button\n            customClass=\"btn-delete\"\n            onClick={() => {\n              setIsDelete(true);\n            }}\n          >\n            삭제\n          </Button>\n          <Button\n            customClass=\"btn-modify\"\n            onClick={() => {\n              history.push(\n                `${ROUTERS.ACCOUNT_MANAGEMENT}/edit/${accountDetail?.id}`\n              );\n            }}\n          >\n            수정\n          </Button>\n          <Button\n            customClass=\"btn-cancel\"\n            onClick={() => {\n              history.push(ROUTERS.ACCOUNT_MANAGEMENT);\n            }}\n          >\n            목록\n          </Button>\n        </div>\n      </div>\n      {/* <ModalPopup\n        isOpen={isCancel}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() => {\n          setIsCancel(false);\n        }}\n        handleClose={() => {\n          setIsCancel(false);\n        }}\n        textBtnLeft=\"확인\"\n        textBtnRight=\"취소\"\n        isShowTwoBtn\n        customClassButton=\"btn-custom\"\n        handleSubmit={() => {\n          history.push(ROUTERS.ACCOUNT_MANAGEMENT);\n        }}\n      >\n        취소 시 수정 내역은 전부 사라집니다. 그래도 취소하시겠습니까?.\n      </ModalPopup> */}\n      <ModalPopup\n        isOpen={isDelete}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() => {\n          setIsDelete(false);\n        }}\n        handleClose={() => {\n          setIsDelete(false);\n        }}\n        textBtnLeft=\"확인\"\n        textBtnRight=\"취소\"\n        isShowTwoBtn\n        customClassButton=\"btn-custom\"\n        handleSubmit={() => {\n          dispatch(deleteAccount(accountDetail?.id));\n          setIsDelete(false);\n        }}\n      >\n        정말 삭제 하시겠습니까?\n      </ModalPopup>\n      <ModalPopup\n        isOpen={isUpdateFailed}\n        isShowHeader\n        title=\"Error\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() => {\n          setIsUpdateFailed(false);\n          dispatch(resetAccountType());\n        }}\n        handleClose={() => {\n          setIsUpdateFailed(false);\n          dispatch(resetAccountType());\n        }}\n        textBtnLeft=\"OK\"\n        customClassButton=\"btn-custom\"\n      >\n        {errorsMessage}\n      </ModalPopup>\n    </div>\n  );\n};\n\nexport default memo<Props>(FormDetail);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import IMAGES from 'themes/images';\nimport MainLayout from 'layout/MainLayout';\nimport TitleSubHeader from 'commons/components/TitleHeader/titleSub';\nimport TitleHeader from 'commons/components/TitleHeader';\nimport FormDetail from './FormDetail';\nimport { getAccountList } from '../../redux';\n\ntype Props = {\n  match: {\n    params: {\n      id: any,\n    },\n  },\n  history: {\n    push: Function,\n  },\n};\nconst AccountDetail = ({ match, history }: Props) => {\n  const dispatch = useDispatch();\n  const accountDetail = useSelector((state) => state?.account?.accountDetail);\n  const isProcessing = useSelector((state) => state?.account?.isProcessing);\n\n  const { id } = match.params;\n\n  useEffect(() => {\n    dispatch(getAccountList({ id, isDetail: true }));\n  }, [id]);\n\n  return (\n    <MainLayout isProcessing={isProcessing}>\n      <div className=\"account\">\n        <TitleHeader\n          title=\"관리자 계정 확인\"\n          descSub=\"관리자 계정 정보를 확인하실 수 있습니다.\"\n        />\n        <TitleSubHeader title=\"계정 정보\" />\n\n        <FormDetail\n          history={history}\n          accountDetail={accountDetail}\n          // deviceList={accountDetail && accountDetail.devices}\n        />\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default AccountDetail;\n"],"sourceRoot":""}