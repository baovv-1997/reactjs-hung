{"version":3,"sources":["commons/components/TitleHeader/titleSub.js","commons/components/Select/index.js","commons/components/TitleHeader/index.js","commons/components/Modal/index.js","constants/optionCheckbox.js","commons/components/Radio/index.js","constants/headerTable.js","modules/device/components/FormRegister.js","modules/device/components/RegisterDevice.js"],"names":["TitleSubHeader","title","onClick","className","id","titleLight","onKeyPress","role","tabIndex","src","images","icon_arrow","alt","defaultProps","memo","SelectDropdown","placeholder","errorMsg","label","disabled","isSearchable","onBlur","onChange","innerRef","option","noOptionsMessage","listOptionString","customClass","request","noLabel","listItem","useState","isActive","setIsActive","length","components","DropdownIndicator","props","selectProps","menuIsOpen","ref","value","options","map","item","name","blurInputOnSelect","isDisabled","TitleHeader","descSub","icon_title_header","ModalPopup","children","animation","isOpen","size","handleClose","isShowIconClose","isShowHeader","isShowFooter","isShowTwoBtn","customClassButton","classNameBtnLeft","textBtnLeft","classNameBtnRight","textBtnRight","handleSubmit","isDisabledButton","handleCloseIcon","onHide","show","onKeyUp","icon_close","Body","Footer","type","DeviceManagementOptionSeach","key","registerDeviceOptions","accountOptions","operator_event_filter","Radio","labelRadio","isChecked","htmlFor","checked","e","DeivceRegisterHead","history","dispatch","useDispatch","posOptionList","useSelector","state","device","companyOptions","errorsAddDevice","dataAddNew","Date","startDate","setStartDate","currentType","setCurrentType","positionSelected","setPositionSelected","companySelected","setCompanySelected","isCancel","setIsCancel","isErrorAdd","setIsErrorAdd","manager","maxPower","incidenceAngle","phoneManager","color","azimuthAngle","inputValue","setInputValue","onChangeOption","target","renderRadioList","handleInputChange","onChangeSelect","useEffect","push","ROUTERS","DEVICE","errorsMessage","Object","values","index","selected","date","dateFormat","IMAGES","iconCalendar","slice","Select","pattern","isNumberKey","inputMode","Button","addDevice","Modal","resetDeviceType","isLoading","Loading"],"mappings":"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","file":"static/js/33.f3f23e20.chunk.js","sourcesContent":["// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  titleLight?: string,\r\n};\r\n\r\nexport const TitleSubHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  titleLight = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title-sub ${className}`}>\r\n      <div\r\n        className=\"wrap-title-sub__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_arrow} alt=\"\" />\r\n        <div className=\"wrap-title-sub__header__name\">\r\n          {title}\r\n          <span>{titleLight}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleSubHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  titleLight: '',\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(TitleSubHeader);\r\n","// @flow\r\nimport React, { useState } from 'react';\r\nimport Select, { components } from 'react-select';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  errorMsg?: string,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  isSearchable?: boolean,\r\n  onBlur?: Function,\r\n  onChange?: Function,\r\n  listOptionString?: Array<{ id: number, name: any }>,\r\n  listItem?: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  innerRef?: any,\r\n  option?: Object,\r\n  noOptionsMessage?: Function,\r\n  customClass?: string,\r\n  request?: boolean,\r\n  noLabel?: boolean,\r\n};\r\nconst SelectDropdown = ({\r\n  placeholder = '',\r\n  errorMsg = '',\r\n  label = '',\r\n  disabled = false,\r\n  isSearchable = false,\r\n  onBlur = null,\r\n  onChange = () => {},\r\n  innerRef = null,\r\n  option = {},\r\n  noOptionsMessage = () => {},\r\n  listOptionString = [],\r\n  customClass = '',\r\n  request = false,\r\n  noLabel = false,\r\n  listItem,\r\n}: Props) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const DropdownIndicator = (props) => {\r\n    setIsActive(props?.selectProps?.menuIsOpen);\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <div className=\"d-none\" />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      className={`customer-select ${customClass.length > 0 ? customClass : ''}`}\r\n    >\r\n      {!!label && (\r\n        <p className=\"input__label\">\r\n          {label}\r\n          {request && <span className=\"request\">*</span>}\r\n        </p>\r\n      )}\r\n      <div className={`input__box ${isActive ? 'down' : ''}`}>\r\n        <Select\r\n          placeholder={placeholder}\r\n          components={{ DropdownIndicator }}\r\n          ref={innerRef}\r\n          value={option || null}\r\n          onChange={onChange}\r\n          noOptionsMessage={noOptionsMessage}\r\n          // menuIsOpen\r\n          options={\r\n            noLabel\r\n              ? listOptionString.map((item) => ({\r\n                  id: item.id,\r\n                  value: item.name,\r\n                  label: item.name,\r\n                }))\r\n              : listItem\r\n          }\r\n          blurInputOnSelect={onBlur}\r\n          isDisabled={disabled}\r\n          isSearchable={isSearchable}\r\n        />\r\n      </div>\r\n      {errorMsg && <p className=\"error-msg\">{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\nSelectDropdown.defaultProps = {\r\n  placeholder: '',\r\n  errorMsg: '',\r\n  label: '',\r\n  disabled: false,\r\n  isSearchable: false,\r\n  // icon: '',\r\n  noLabel: false,\r\n  onBlur: null,\r\n  onChange: () => {},\r\n  innerRef: null,\r\n  listItem: [],\r\n  listOptionString: [],\r\n  option: {},\r\n  noOptionsMessage: () => {},\r\n  customClass: '',\r\n  request: false,\r\n};\r\nexport default SelectDropdown;\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  descSub?: string,\r\n};\r\n\r\nexport const TitleHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  descSub = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title ${className}`}>\r\n      <div\r\n        className=\"wrap-title__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_title_header} alt=\"\" />\r\n        <div className=\"wrap-title__header__name\">\r\n          {title}\r\n          <span>{descSub}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  id: '',\r\n  descSub: '',\r\n};\r\n\r\nexport default memo<Props>(TitleHeader);\r\n","/* eslint-disable no-nested-ternary */\r\n// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Button from 'commons/components/Button';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title?: string,\r\n  children: any,\r\n  animation?: boolean,\r\n  isOpen: boolean,\r\n  size?: string,\r\n  handleClose: Function,\r\n  customClass?: string,\r\n  isShowIconClose?: boolean,\r\n  isShowHeader?: boolean,\r\n  isShowFooter?: boolean,\r\n  isShowTwoBtn?: boolean,\r\n  customClassButton?: string,\r\n  classNameBtnLeft?: string,\r\n  textBtnLeft?: string,\r\n  classNameBtnRight?: string,\r\n  textBtnRight?: string,\r\n  handleSubmit?: Function,\r\n  isDisabledButton?: boolean,\r\n  handleCloseIcon?: Function,\r\n};\r\n\r\nexport const ModalPopup = ({\r\n  title = '',\r\n  children,\r\n  animation = false,\r\n  isOpen,\r\n  size,\r\n  handleClose,\r\n  customClass,\r\n  isShowIconClose,\r\n  isShowHeader,\r\n  isShowFooter,\r\n  isShowTwoBtn,\r\n  customClassButton = '',\r\n  classNameBtnLeft = '',\r\n  textBtnLeft = '',\r\n  classNameBtnRight = '',\r\n  textBtnRight = 'OK',\r\n  handleSubmit = () => {},\r\n  isDisabledButton,\r\n  handleCloseIcon = () => {},\r\n}: Props) => (\r\n  <Modal\r\n    animation={animation}\r\n    onHide={() => {\r\n      return true;\r\n    }}\r\n    show={isOpen}\r\n    size={size}\r\n    className={customClass}\r\n  >\r\n    {isShowIconClose && (\r\n      <div\r\n        className=\"modal-content__iconClose\"\r\n        onClick={handleCloseIcon}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onKeyUp={handleCloseIcon}\r\n      >\r\n        <img src={images.icon_close} alt=\"\" />\r\n      </div>\r\n    )}\r\n\r\n    {isShowHeader && <h3 className=\"modal-title\">{title}</h3>}\r\n\r\n    <Modal.Body>\r\n      {!isShowHeader ? (\r\n        <div className=\"modal-body__no-header\">{children}</div>\r\n      ) : (\r\n        <div className=\"modal-body__has-header\">{children}</div>\r\n      )}\r\n    </Modal.Body>\r\n    {isShowFooter && (\r\n      <Modal.Footer>\r\n        {!isShowTwoBtn ? (\r\n          <Button\r\n            type=\"button\"\r\n            customClass={customClassButton}\r\n            onClick={handleClose}\r\n          >\r\n            {textBtnRight}\r\n          </Button>\r\n        ) : (\r\n          <div className=\"group-button\">\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnLeft}`}\r\n              onClick={handleSubmit}\r\n              isDisabled={isDisabledButton}\r\n            >\r\n              {textBtnLeft}\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnRight}`}\r\n              onClick={handleClose}\r\n            >\r\n              {textBtnRight}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Modal.Footer>\r\n    )}\r\n  </Modal>\r\n);\r\n\r\nModalPopup.defaultProps = {\r\n  title: '',\r\n  animation: false,\r\n  size: '',\r\n  customClass: '',\r\n  isShowIconClose: false,\r\n  isShowHeader: false,\r\n  isShowFooter: false,\r\n  isShowTwoBtn: false,\r\n  customClassButton: '',\r\n  classNameBtnLeft: '',\r\n  textBtnLeft: '',\r\n  classNameBtnRight: '',\r\n  textBtnRight: 'OK',\r\n  handleSubmit: () => {},\r\n  isDisabledButton: false,\r\n  handleCloseIcon: () => {},\r\n};\r\nexport default memo<Props>(ModalPopup);\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const DeviceManagementOptionSeach = [\r\n  {\r\n    name: 'all',\r\n    key: 'all',\r\n    label: '전체',\r\n  },\r\n  {\r\n    name: 'company',\r\n    key: 'com_id',\r\n    label: '업체',\r\n  },\r\n  {\r\n    name: 'position',\r\n    key: 'pos_id',\r\n    label: '설치위치',\r\n  },\r\n];\r\n\r\nexport const registerDeviceOptions = [\r\n  {\r\n    name: 'solar-monitoring',\r\n    key: '0',\r\n    label: '실증단지',\r\n  },\r\n  {\r\n    name: 'test-solar-monitoring',\r\n    key: '2',\r\n    label: '테스트(실증단지)',\r\n  },\r\n  {\r\n    name: 'test-mockup',\r\n    key: '3',\r\n    label: '테스트(목업)',\r\n  },\r\n];\r\n\r\nexport const accountOptions = [\r\n  {\r\n    name: 'all',\r\n    key: 'all',\r\n    label: '전체',\r\n  },\r\n  {\r\n    name: 'admin',\r\n    key: 'admin',\r\n    label: '최고관리자',\r\n  },\r\n  {\r\n    name: 'company',\r\n    key: 'company',\r\n    label: '업체',\r\n  },\r\n  {\r\n    name: 'monitoring',\r\n    key: 'monitoring',\r\n    label: '모니터링',\r\n  },\r\n];\r\n\r\nexport const operator_event_filter = [\r\n  {\r\n    name: '측정 문제',\r\n    key: 0,\r\n    label: '측정 문제',\r\n  },\r\n  {\r\n    name: '보수 이력',\r\n    key: 1,\r\n    label: '보수 이력',\r\n  },\r\n  {\r\n    name: '설비 이력',\r\n    key: 2,\r\n    label: '설비 이력',\r\n  },\r\n];\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  name?: string,\r\n  onChange: Function,\r\n  disabled?: boolean,\r\n  labelRadio: string,\r\n  isChecked: boolean,\r\n  id?: string,\r\n};\r\n\r\nexport const Radio = ({\r\n  labelRadio,\r\n  name = '',\r\n  isChecked,\r\n  onChange,\r\n  id = '',\r\n  disabled = false,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"wrap-radio\">\r\n      <label className=\"custom-radio d-flex\" htmlFor={id}>\r\n        <input\r\n          type=\"radio\"\r\n          checked={`${isChecked ? 'checked' : ''}`}\r\n          name={name}\r\n          onChange={(e) => onChange(e)}\r\n          id={id}\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"checkmark\" />\r\n        <span className=\"label\">{labelRadio}</span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadio.defaultProps = {\r\n  name: '',\r\n  disabled: false,\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(Radio);\r\n","export const DeivceDetailHead = [\r\n  {\r\n    id: 1,\r\n    name: 'NO',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '구분',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '설치위치',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '담당자 이름',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '모듈 출력',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '입사각',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: '설치일',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: '업체명',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: '모듈명',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: '담당자 전화번호',\r\n  },\r\n  {\r\n    id: 11,\r\n    name: '모듈 색상',\r\n  },\r\n  {\r\n    id: 12,\r\n    name: '방위각',\r\n  },\r\n];\r\n\r\nexport const DeivceDetailHeadRight = [\r\n  {\r\n    id: 7,\r\n    name: '설치일',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '업체명',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '설치위치',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '담당자',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '모듈 출력',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '입사각',\r\n  },\r\n];\r\n\r\nexport const DeivceRegisterHead = [\r\n  {\r\n    id: 1,\r\n    name: '구분',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '설치위치',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '담당자',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '모듈 출력',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '입사각',\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    name: '업체명',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: '모듈명',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: '담당자 전화번호',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: '모듈 색상',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: '방위각',\r\n  },\r\n];\r\n\r\nexport const AccountDetailHead = [\r\n  {\r\n    id: 1,\r\n    name: '권한',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '이메일',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '아이디',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '담당자',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '전화번호',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '비밀번호',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: '설치일',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: '관리 기기',\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n// @flow\r\nimport React, { useState, useEffect, memo } from 'react';\r\nimport { DeivceRegisterHead } from 'constants/headerTable';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DatePicker from 'react-datepicker';\r\nimport Radio from 'commons/components/Radio';\r\nimport IMAGES from 'themes/images';\r\nimport { registerDeviceOptions } from 'constants/optionCheckbox';\r\nimport Select from 'commons/components/Select';\r\nimport Button from 'commons/components/Button';\r\nimport ModalPopup from 'commons/components/Modal';\r\nimport { isNumberKey } from 'helpers';\r\nimport ROUTERS from 'constants/routers';\r\nimport { addDevice, resetDeviceType } from '../redux';\r\n\r\ntype Props = {\r\n  history: {\r\n    push: Function,\r\n  },\r\n};\r\nconst FormRegister = ({ history }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const posOptionList = useSelector((state) => state?.device?.posOptionList);\r\n  const companyOptions = useSelector((state) => state?.device?.companyOptions);\r\n  const errorsAddDevice = useSelector(\r\n    (state) => state?.device?.errorsAddDevice\r\n  );\r\n  const dataAddNew = useSelector((state) => state?.device?.dataAddNew);\r\n  const type = useSelector((state) => state?.device?.type);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [currentType, setCurrentType] = useState('0');\r\n  const [positionSelected, setPositionSelected] = useState(null);\r\n  const [companySelected, setCompanySelected] = useState(null);\r\n  const [isCancel, setIsCancel] = useState(false);\r\n  const [isErrorAdd, setIsErrorAdd] = useState(false);\r\n  const [inputValue, setInputValue] = useState({\r\n    manager: '',\r\n    maxPower: '',\r\n    incidenceAngle: '',\r\n    name: '',\r\n    phoneManager: '',\r\n    color: '',\r\n    azimuthAngle: '',\r\n  });\r\n\r\n  // change radio option\r\n  const onChangeOption = (e) => {\r\n    const { name } = e.target;\r\n    setCurrentType(name);\r\n  };\r\n\r\n  // render list radio\r\n  const renderRadioList = registerDeviceOptions.map((item) => {\r\n    return (\r\n      <Radio\r\n        id={item.key}\r\n        name={item.key}\r\n        label={item.label}\r\n        onChange={onChangeOption}\r\n        isChecked={currentType === item.key}\r\n        labelRadio={item.label}\r\n      />\r\n    );\r\n  });\r\n\r\n  // handle input change\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputValue({\r\n      ...inputValue,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // handle when slect change\r\n  const onChangeSelect = (option, name) => {\r\n    switch (name) {\r\n      case 'position':\r\n        setPositionSelected(option);\r\n        break;\r\n      case 'company':\r\n        setCompanySelected(option);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleAddDevice = () => {\r\n    dispatch(\r\n      addDevice({\r\n        ...inputValue,\r\n        companySelected: companySelected || { value: '', label: '' },\r\n        positionSelected: positionSelected || {\r\n          value: '',\r\n          label: '',\r\n        },\r\n        startDate,\r\n        currentType,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case 'device/addDeviceSuccess':\r\n        history.push(`${ROUTERS.DEVICE}/${dataAddNew.id}`);\r\n        break;\r\n      case 'device/addDeviceFailed':\r\n        setIsErrorAdd(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [type]);\r\n\r\n  const errorsMessage =\r\n    errorsAddDevice &&\r\n    Object.values(errorsAddDevice).map((item, index) => {\r\n      return (\r\n        <ul className=\"error-list\" key={index}>\r\n          <li>{item && item[0]}</li>\r\n        </ul>\r\n      );\r\n    });\r\n  return (\r\n    <div>\r\n      <div className=\"register__form col-span\">\r\n        <div className=\"col-item col-2\">\r\n          <div className=\"cell\">설치일</div>\r\n        </div>\r\n        <div className=\"col-item col-10\">\r\n          <div className=\"cell d-flex justify-content-start\">\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              dateFormat=\"yyyy-MM-dd\"\r\n            />\r\n            <img src={IMAGES.iconCalendar} alt=\"icon-calendar\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"register__form\">\r\n        <div className=\"col-item col-2\">\r\n          {DeivceRegisterHead.slice(0, 5).map((item) => (\r\n            <div className=\"cell\" key={item.id}>\r\n              {item.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"col-item col-4\">\r\n          <div className=\"cell\">{renderRadioList}</div>\r\n          <div\r\n            className={`cell ${\r\n              currentType === '2' || currentType === '3' ? 'cell-disable' : ''\r\n            }`}\r\n          >\r\n            <Select\r\n              listItem={posOptionList}\r\n              onChange={(option) => onChangeSelect(option, 'position')}\r\n              option={positionSelected}\r\n              placeholder=\"위치선택\"\r\n              disabled={currentType === '2' || currentType === '3'}\r\n            />\r\n          </div>\r\n          <div className=\"cell\">\r\n            <input\r\n              placeholder=\"입력해주세요.\"\r\n              onChange={(e) => handleInputChange(e)}\r\n              name=\"manager\"\r\n              value={inputValue.manager}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"cell\">\r\n            <input\r\n              placeholder=\"입력해주세요.\"\r\n              onChange={(e) => handleInputChange(e)}\r\n              name=\"maxPower\"\r\n              value={inputValue.maxPower}\r\n              pattern=\"[0-9]*\"\r\n              onKeyPress={(e) => isNumberKey(e)}\r\n              inputMode=\"numeric\"\r\n            />\r\n            <span className=\"unit\">kW</span>\r\n          </div>\r\n          <div className=\"cell\">\r\n            <input\r\n              placeholder=\"입력해주세요.\"\r\n              onChange={(e) => handleInputChange(e)}\r\n              name=\"incidenceAngle\"\r\n              value={inputValue.incidenceAngle}\r\n              pattern=\"[0-9]*\"\r\n              onKeyPress={(e) => isNumberKey(e)}\r\n              inputMode=\"numeric\"\r\n            />\r\n            <span className=\"unit\">°도</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-item col-2\">\r\n          {DeivceRegisterHead.slice(5, 10).map((item) => (\r\n            <div className=\"cell\" key={item.id}>\r\n              {item.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"col-item col-4\">\r\n          <div className=\"cell\">\r\n            <Select\r\n              listItem={companyOptions}\r\n              onChange={(option) => onChangeSelect(option, 'company')}\r\n              option={companySelected}\r\n              placeholder=\"업체선택\"\r\n            />\r\n          </div>\r\n          <div\r\n            className={`cell ${\r\n              currentType === '2' || currentType === '3' ? 'cell-disable' : ''\r\n            }`}\r\n          >\r\n            <input\r\n              placeholder=\"입력해주세요.\"\r\n              onChange={(e) => handleInputChange(e)}\r\n              name=\"name\"\r\n              value={inputValue.name}\r\n              disabled={currentType === '2' || currentType === '3'}\r\n            />\r\n          </div>\r\n          <div className=\"cell\">\r\n            <input\r\n              placeholder=\"입력해주세요.\"\r\n              onChange={(e) => handleInputChange(e)}\r\n              name=\"phoneManager\"\r\n              value={inputValue.phoneManager}\r\n              pattern=\"[0-9]*\"\r\n              onKeyPress={(e) => isNumberKey(e)}\r\n              inputMode=\"numeric\"\r\n            />\r\n          </div>\r\n          <div className=\"cell\">\r\n            <input\r\n              placeholder=\"입력해주세요.\"\r\n              onChange={(e) => handleInputChange(e)}\r\n              name=\"color\"\r\n              value={inputValue.color}\r\n            />\r\n          </div>\r\n          <div className=\"cell\">\r\n            <input\r\n              placeholder=\"입력해주세요.\"\r\n              onChange={(e) => handleInputChange(e)}\r\n              name=\"azimuthAngle\"\r\n              value={inputValue.azimuthAngle}\r\n              pattern=\"[0-9]*\"\r\n              onKeyPress={(e) => isNumberKey(e)}\r\n              inputMode=\"numeric\"\r\n            />\r\n            <span className=\"unit\">°도</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"device-detail__btn-group\">\r\n        <Button customClass=\"btn-modify\" onClick={handleAddDevice}>\r\n          등록\r\n        </Button>\r\n        <Button customClass=\"btn-cancel\" onClick={() => setIsCancel(true)}>\r\n          취소\r\n        </Button>\r\n      </div>\r\n      <ModalPopup\r\n        isOpen={isCancel}\r\n        isShowHeader\r\n        title=\"알림\"\r\n        isShowIconClose\r\n        isShowFooter\r\n        handleCloseIcon={() => {\r\n          setIsCancel(false);\r\n        }}\r\n        handleClose={() => {\r\n          setIsCancel(false);\r\n        }}\r\n        textBtnLeft=\"확인\"\r\n        textBtnRight=\"취소\"\r\n        isShowTwoBtn\r\n        customClassButton=\"btn-custom\"\r\n        // handleSubmit={() => {\r\n        //   history.push(ROUTERS.DEVICE);\r\n        // }}\r\n      >\r\n        취소 시 수정 내역은 전부 사라집니다. 그래도 취소하시겠습니까?.\r\n      </ModalPopup>\r\n\r\n      <ModalPopup\r\n        isOpen={isErrorAdd}\r\n        isShowHeader\r\n        title=\"Error\"\r\n        isShowIconClose\r\n        isShowFooter\r\n        handleCloseIcon={() => {\r\n          setIsErrorAdd(false);\r\n          dispatch(resetDeviceType());\r\n        }}\r\n        handleClose={() => {\r\n          setIsErrorAdd(false);\r\n          dispatch(resetDeviceType());\r\n        }}\r\n        textBtnLeft=\"OK\"\r\n        customClassButton=\"btn-custom\"\r\n      >\r\n        {errorsMessage}\r\n      </ModalPopup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(FormRegister);\r\n","// @flow\r\nimport React, { memo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TitleSubHeader } from 'commons/components/TitleHeader/titleSub';\r\nimport { TitleHeader } from 'commons/components/TitleHeader';\r\nimport Loading from 'commons/components/Loading';\r\nimport FormRegister from './FormRegister';\r\n\r\ntype Props = {\r\n  history: {\r\n    push: Function,\r\n  },\r\n};\r\nconst RegisterDevice = ({ history }: Props) => {\r\n  const isLoading = useSelector((state) => state?.device?.isLoading);\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n      <div className=\"wrapper-device\">\r\n        <div className=\"wrapper-device__head-menu\">\r\n          <TitleHeader\r\n            title=\"기기 관리\"\r\n            descSub=\"기기 정보를 등록하실 수 있습니다.\"\r\n          />\r\n          <div className=\"device-detail\">\r\n            <TitleSubHeader title=\"기기 정보\" />\r\n            <FormRegister history={history} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(RegisterDevice);\r\n"],"sourceRoot":""}