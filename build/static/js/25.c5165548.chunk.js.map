{"version":3,"sources":["commons/components/Select/index.js","commons/components/CheckBox/index.js","../node_modules/react-bootstrap/esm/Table.js","commons/components/MultipleCheckbox/index.js","commons/components/Table/ModalSortTable.js","commons/components/Table/TableHead.js","commons/components/Table/TableRow.js","commons/components/Table/index.js","constants/optionCheckbox.js","commons/components/Radio/index.js","commons/components/Input/index.js","constants/tableHeadData.js","modules/device/components/index.js"],"names":["SelectDropdown","placeholder","errorMsg","label","disabled","isSearchable","onBlur","onChange","innerRef","option","noOptionsMessage","listOptionString","customClass","request","noLabel","listItem","useState","isActive","setIsActive","className","length","components","DropdownIndicator","props","selectProps","menuIsOpen","ref","value","options","map","item","id","name","blurInputOnSelect","isDisabled","defaultProps","CheckBox","handleToggleCheckbox","isChecked","onKeyPress","subLabel","htmlFor","type","checked","memo","Table","React","forwardRef","_ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","listCheckBox","submitValue","optionDefault","checkedItems","setCheckedItems","handleChange","event","target","includes","filter","key","toString","ModalSortTable","handleCheckboxSort","listOption","listValueOption","setListValueOption","list","Button","onClick","TableHead","listItems","showModalSort","handleShowModalSorting","index","keyItem","role","tabIndex","src","images","ico_event2","alt","isShow","TableRow","rowItem","onClickTableRow","isClickTableColumn","isShowId","rowActive","onClickTableColumn","activeClass","Object","keys","TableData","tableHeads","tableBody","onClickRow","handleClickBtnDetail","renderBodyTable","colSpan","DeviceManagementOptionSeach","registerDeviceOptions","accountOptions","operator_event_filter","Radio","labelRadio","e","Input","readOnly","onBlurWrapper","onFocusWrapper","onClickWrapper","customClassName","customClassWrap","customClassLabel","onFocus","onPaste","isShowIcon","deleteValue","pattern","inputMode","maxLength","autocomplete","autoFocus","onKeyUp","autoCapitalize","autoComplete","IMAGES","icon_close","DEVICE_HEAD_TABLE","ACCOUNT_HEAD","history","dispatch","useDispatch","companyOptions","useSelector","state","device","deviceList","isLoading","totalPage","perPage","posOptionList","currentOption","setCurrentOption","valueSearch","setValueSearch","activePage","setActivePage","selectOption","setSelectOption","useEffect","getListCompany","getListPosition","getListDevice","onChangeOption","renderRadioList","handleSubmitSearch","iconTitle","lassName","listOptions","renderListOptions","onChangeSelect","handleKeyDown","icon_search","push","pathname","ROUTERS","DEVICE","REGISTER_DEVICE","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","page","itemClass","linkClass","firstPageText","double_arrow_left","lastPageText","double_arrow_right","prevPageText","arrow_left","nextPageText","arrow_right1"],"mappings":"2JAyBMA,EAAiB,SAAC,GAgBV,IAAD,IAfXC,mBAeW,MAfG,GAeH,MAdXC,gBAcW,MAdA,GAcA,MAbXC,aAaW,MAbH,GAaG,MAZXC,gBAYW,aAXXC,oBAWW,aAVXC,cAUW,MAVF,KAUE,MATXC,gBASW,MATA,aASA,MARXC,gBAQW,MARA,KAQA,MAPXC,cAOW,MAPF,GAOE,MANXC,wBAMW,MANQ,aAMR,MALXC,wBAKW,MALQ,GAKR,MAJXC,mBAIW,MAJG,GAIH,MAHXC,eAGW,aAFXC,eAEW,SADXC,EACW,EADXA,SACW,EACqBC,oBAAS,GAD9B,mBACJC,EADI,KACMC,EADN,KAWX,OACE,yBACEC,UAAS,0BAAqBP,EAAYQ,OAAS,EAAIR,EAAc,OAElET,GACD,uBAAGgB,UAAU,gBACVhB,EACAU,GAAW,0BAAMM,UAAU,WAAhB,MAGhB,yBAAKA,UAAS,qBAAgBF,EAAW,OAAS,KAChD,kBAAC,IAAD,CACEhB,YAAaA,EACboB,WAAY,CAAEC,kBArBI,SAACC,GAAW,IAAD,EAEnC,OADAL,EAAW,OAACK,QAAD,IAACA,GAAD,UAACA,EAAOC,mBAAR,aAAC,EAAoBC,YAE9B,kBAAC,IAAWH,kBAAsBC,EAChC,yBAAKJ,UAAU,cAkBbO,IAAKlB,EACLmB,MAAOlB,GAAU,KACjBF,SAAUA,EACVG,iBAAkBA,EAElBkB,QACEd,EACIH,EAAiBkB,KAAI,SAACC,GAAD,MAAW,CAC9BC,GAAID,EAAKC,GACTJ,MAAOG,EAAKE,KACZ7B,MAAO2B,EAAKE,SAEdjB,EAENkB,kBAAmB3B,EACnB4B,WAAY9B,EACZC,aAAcA,KAGjBH,GAAY,uBAAGiB,UAAU,aAAajB,KAI7CF,EAAemC,aAAe,CAC5BlC,YAAa,GACbC,SAAU,GACVC,MAAO,GACPC,UAAU,EACVC,cAAc,EAEdS,SAAS,EACTR,OAAQ,KACRC,SAAU,aACVC,SAAU,KACVO,SAAU,GACVJ,iBAAkB,GAClBF,OAAQ,GACRC,iBAAkB,aAClBE,YAAa,GACbC,SAAS,GAEIb,O,iCC1Gf,oBAcaoC,EAAW,SAAC,GAUX,IATZL,EASW,EATXA,GACAC,EAQW,EARXA,KACA7B,EAOW,EAPXA,MACAC,EAMW,EANXA,SAMW,IALXQ,mBAKW,MALG,GAKH,EAJXyB,EAIW,EAJXA,qBAIW,IAHXC,iBAGW,aAFXC,kBAEW,MAFE,aAEF,MADXC,gBACW,MADA,GACA,EACX,OACE,yBACErB,UAAS,UAAKP,EAAL,qBACP0B,EAAY,oBAAsB,KAGpC,2BAAOnB,UAAU,kBAAkBsB,QAASV,GAC1C,2BACEZ,UAAU,kBACVuB,KAAK,WACLX,GAAIA,EACJC,KAAMA,EACNL,MAAOxB,EACPwC,QAASL,EACTlC,SAAUA,EACVmC,WAAYA,EACZhC,SAAU8B,IAEZ,8BACGlC,EACD,2BAAIqC,OAOdJ,EAASD,aAAe,CACtBJ,GAAI,GACJC,KAAM,GACN7B,MAAO,GACPC,UAAU,EACVQ,YAAa,GACb0B,WAAW,EACXC,WAAY,aACZC,SAAU,IAGGI,mBAAYR,I,6FC1BZS,EAjCUC,IAAMC,YAAW,SAAUC,EAAMtB,GACxD,IAAIuB,EAAWD,EAAKC,SAChB9B,EAAY6B,EAAK7B,UACjB+B,EAAUF,EAAKE,QACfC,EAAWH,EAAKG,SAChBC,EAAaJ,EAAKI,WAClBC,EAAQL,EAAKK,MACbC,EAAON,EAAKM,KACZC,EAAUP,EAAKO,QACfC,EAAaR,EAAKQ,WAClBjC,EAAQkC,YAA8BT,EAAM,CAAC,WAAY,YAAa,UAAW,WAAY,aAAc,QAAS,OAAQ,UAAW,eAEvIU,EAAoBC,YAAmBV,EAAU,SACjDW,EAAUC,IAAW1C,EAAWuC,EAAmBH,GAAWG,EAAoB,IAAMH,EAASD,GAAQI,EAAoB,IAAMJ,EAAMJ,GAAWQ,EAAoB,WAAYP,GAAYO,EAAoB,YAAaN,GAAcM,EAAoB,cAAeL,GAASK,EAAoB,UAC/SI,EAAqBhB,IAAMiB,cAAc,QAASC,YAAS,GAAIzC,EAAO,CACxEJ,UAAWyC,EACXlC,IAAKA,KAGP,GAAI8B,EAAY,CACd,IAAIS,EAAkBP,EAAoB,cAM1C,MAJ0B,kBAAfF,IACTS,EAAkBA,EAAkB,IAAMT,GAGxBV,IAAMiB,cAAc,MAAO,CAC7C5C,UAAW8C,GACVH,GAGL,OAAOA,K,yCCgBMlB,kBArCgB,SAAC,GAMlB,IALZsB,EAKW,EALXA,aACA/D,EAIW,EAJXA,MACAS,EAGW,EAHXA,YACAuD,EAEW,EAFXA,YACAC,EACW,EADXA,cACW,EAC6BpD,mBAASoD,GADtC,mBACJC,EADI,KACUC,EADV,KAELC,EAAe,SAACC,GAAW,IACvBzC,EAAOyC,EAAMC,OAAb1C,GAEHsC,EAAaK,SAAS3C,IAIzBuC,EAAgBD,EAAaM,QAAO,SAAC7C,GAAD,OAAUA,IAASC,MACvDoC,EAAYE,EAAaM,QAAO,SAAC7C,GAAD,OAAUA,IAASC,QAJnDuC,EAAgB,GAAD,mBAAKD,GAAL,CAAmBtC,KAClCoC,EAAY,GAAD,mBAAKE,GAAL,CAAmBtC,OAMlC,OACE,oCACE,6BAAM5B,GACL+D,EAAarC,KAAI,SAACC,GAAD,OAChB,yBAAKX,UAAS,UAAKP,IACjB,kBAACwB,EAAA,EAAD,CACEJ,KAAMF,EAAKE,KACXM,UAAW+B,EAAaK,SAAS5C,EAAK8C,IAAIC,YAC1CxC,qBAAsBkC,EACtBxC,GAAID,EAAK8C,IACTzE,MAAK,OAAE2B,QAAF,IAAEA,OAAF,EAAEA,EAAM3B,gBCjCnB2E,EAAiB,SAAC,GAIV,IAHZC,EAGW,EAHXA,mBAGW,IAFXC,kBAEW,MAFE,GAEF,MADXZ,qBACW,MADK,GACL,IACmCpD,mBAAS,IAD5C,mBACJiE,EADI,KACaC,EADb,KAKX,OACE,yBAAK/D,UAAU,iBACb,yBAAKA,UAAU,mBAAf,yCACA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CACE+C,aAAcc,EACdb,YATe,SAACgB,GACtBD,EAAmBC,IASbf,cAAeA,KAGnB,kBAACgB,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAmBE,KAA1C,kBAKNH,EAAe3C,aAAe,CAC5BiC,cAAe,GACfY,WAAY,IAGCpC,qBAAYkC,GC1BrBQ,EAAY,SAAC,GAAD,IAChBC,EADgB,EAChBA,UACAC,EAFgB,EAEhBA,cACAT,EAHgB,EAGhBA,mBACAU,EAJgB,EAIhBA,uBACAT,EALgB,EAKhBA,WALgB,IAMhBZ,qBANgB,MAMA,GANA,SAQhB,4BACGmB,GACCA,EAAU1D,KAAI,SAACC,EAAM4D,GAAP,OACZ,wBACEd,IAAK9C,EAAKC,GACVZ,UAAS,UACPqE,GAAiBA,EAAcG,UAAYD,EACvC,uBACA,KAGN,yBACEnD,WAAY,aACZqD,KAAK,SACLC,SAAUH,EACVL,QAAS,kBACPG,GAAiBA,EAAcG,UAAYD,EACvCD,GAA0BA,IAC1B,KAGL3D,GAAQA,EAAKE,KACbwD,GAAiBA,EAAcG,UAAYD,GAC1C,yBAAKI,IAAKC,IAAOC,WAAYC,IAAI,MAGpCT,GACCA,EAAcU,QACdV,EAAcG,UAAYD,GACxB,6BACE,kBAAC,EAAD,CACEX,mBAAoBA,EACpBC,WAAYA,EACZZ,cAAeA,WASjCkB,EAAUnD,aAAe,CACvBqD,cAAe,KACfT,mBAAoB,aACpBU,uBAAwB,aACxBrB,cAAe,IAGFxB,qBAAY0C,GC1DrBa,EAAW,SAAC,GAOJ,IANZC,EAMW,EANXA,QAMW,IALXC,uBAKW,MALO,aAKP,MAJXC,0BAIW,aAHXC,gBAGW,aAFXC,iBAEW,MAFC,GAED,MADXC,0BACW,MADU,aACV,EAEPC,EAAc,GAMlB,OALIL,EACFK,EAAc,qBACLF,GAAaA,EAAUzE,KAAOqE,EAAQrE,KAC/C2E,EAAc,cAGd,wBACErB,QAAS,kBAAMgB,GAAmBA,EAAgBD,IAClDjF,UAAWuF,GAEVC,OAAOC,KAAKR,GAASvE,KAAI,SAACC,GAAD,OACxB,wBACE8C,IAAK9C,EACLX,UAAS,UAEPoF,GAjBM,OAiBMzE,EACR,SACAwE,EACA,qBACA,IAENjB,QAAS,kBAAMiB,GAAsBG,EAAmBL,IACxD7D,WAAY,kBAAM+D,GAAsBG,EAAmBL,IAC3DR,KAAK,gBAEJQ,EAAQtE,SAMnBqE,EAAShE,aAAe,CACtBkE,gBAAiB,KACjBE,UAAU,EACVE,mBAAoB,aACpBH,oBAAoB,EACpBE,UAAW,IAEE5D,qBAAYuD,GCxCrBU,EAAY,SAAC,GAaL,IAZZC,EAYW,EAZXA,WACAC,EAWW,EAXXA,UAWW,IAVXC,kBAUW,MAVE,aAUF,MATXC,4BASW,MATY,aASZ,MARXV,gBAQW,aAPXC,iBAOW,MAPC,GAOD,MANXC,0BAMW,MANU,aAMV,MALXjB,qBAKW,MALK,GAKL,MAJXT,0BAIW,MAJU,aAIV,MAHXU,8BAGW,MAHc,aAGd,MAFXT,kBAEW,MAFE,GAEF,MADXZ,qBACW,MADK,GACL,EACL8C,EACJH,GACAA,EAAUlF,KAAI,SAACC,EAAM4D,GAAP,OACZ,kBAAC,EAAD,CACEW,gBAAiBW,EACjBZ,QAAStE,EACT8C,IAAK9C,EAAKC,IAAM2D,EAChBc,UAAWA,EACXS,qBAAsBA,EACtBV,SAAUA,EACVE,mBAAoBA,OAiB1B,OACE,kBAAC,EAAD,CAAOvD,SAAO,EAACC,UAAQ,EAACE,OAAK,EAACG,YAAU,GACtC,+BACE,kBAAC,EAAD,CACE+B,UAAWuB,EACXtB,cAAeA,EACfT,mBAAoBA,EACpBU,uBAAwBA,EACxBT,WAAYA,EACZZ,cAAeA,KAGnB,+BAxBE8C,GAAmBA,EAAgB9F,OAAS,EACvC8F,EAGP,wBAAI/F,UAAU,uCACZ,wBAAIgG,QAASL,GAAcA,EAAW1F,QACpC,uBAAGD,UAAU,oBAAb,oFAuBV0F,EAAU1E,aAAe,CACvB6E,WAAY,KACZR,UAAW,KACXS,qBAAsB,aACtBV,UAAU,EACVE,mBAAoB,aACpBjB,cAAe,GACfT,mBAAoB,aACpBU,uBAAwB,aACxBT,WAAY,GACZZ,cAAe,IAEFxB,mBAAYiE,I,iCC3F3B,wIACO,IAAMO,EAA8B,CACzC,CACEpF,KAAM,MACN4C,IAAK,MACLzE,MAAO,gBAET,CACE6B,KAAM,UACN4C,IAAK,SACLzE,MAAO,gBAET,CACE6B,KAAM,WACN4C,IAAK,SACLzE,MAAO,6BAIEkH,EAAwB,CACnC,CACErF,KAAM,mBACN4C,IAAK,IACLzE,MAAO,4BAET,CACE6B,KAAM,wBACN4C,IAAK,IACLzE,MAAO,gDAET,CACE6B,KAAM,cACN4C,IAAK,IACLzE,MAAO,qCAIEmH,EAAiB,CAC5B,CACEtF,KAAM,MACN4C,IAAK,MACLzE,MAAO,gBAET,CACE6B,KAAM,QACN4C,IAAK,QACLzE,MAAO,kCAET,CACE6B,KAAM,UACN4C,IAAK,UACLzE,MAAO,gBAET,CACE6B,KAAM,aACN4C,IAAK,aACLzE,MAAO,6BAIEoH,EAAwB,CACnC,CACEvF,KAAM,4BACN4C,IAAK,EACLzE,MAAO,6BAET,CACE6B,KAAM,4BACN4C,IAAK,EACLzE,MAAO,6BAET,CACE6B,KAAM,4BACN4C,IAAK,EACLzE,MAAO,+B,iCCzEX,oBAYaqH,EAAQ,SAAC,GAOR,IANZC,EAMW,EANXA,WAMW,IALXzF,YAKW,MALJ,GAKI,EAJXM,EAIW,EAJXA,UACA/B,EAGW,EAHXA,SAGW,IAFXwB,UAEW,MAFN,GAEM,MADX3B,gBACW,SACX,OACE,yBAAKe,UAAU,cACb,2BAAOA,UAAU,sBAAsBsB,QAASV,GAC9C,2BACEW,KAAK,QACLC,QAAO,UAAKL,EAAY,UAAY,IACpCN,KAAMA,EACNzB,SAAU,SAACmH,GAAD,OAAOnH,EAASmH,IAC1B3F,GAAIA,EACJ3B,SAAUA,IAEZ,0BAAMe,UAAU,cAChB,0BAAMA,UAAU,SAASsG,MAMjCD,EAAMrF,aAAe,CACnBH,KAAM,GACN5B,UAAU,EACV2B,GAAI,IAGSa,mBAAY4E,I,iCC3C3B,4BAqCaG,EAAQ,SAAC,GA+BR,IAAD,IA9BX1H,mBA8BW,MA9BG,GA8BH,MA7BX0B,aA6BW,MA7BH,GA6BG,MA5BXzB,gBA4BW,MA5BA,GA4BA,MA3BXC,aA2BW,MA3BH,GA2BG,MA1BXC,gBA0BW,aAzBXwH,gBAyBW,aAxBXlF,YAwBW,MAxBJ,OAwBI,MAvBXpC,cAuBW,MAvBF,aAuBE,MAtBXuH,qBAsBW,MAtBK,aAsBL,MArBXC,sBAqBW,MArBM,aAqBN,MApBXC,sBAoBW,MApBM,aAoBN,MAnBXxH,gBAmBW,MAnBA,aAmBA,MAlBXyH,uBAkBW,MAlBO,KAkBP,MAjBXC,uBAiBW,MAjBO,KAiBP,MAhBXC,wBAgBW,MAhBQ,KAgBR,MAfXC,eAeW,MAfD,aAeC,MAdX5F,kBAcW,MAdE,aAcF,MAbX6F,eAaW,MAbD,aAaC,MAZX7E,eAYW,MAZD,UAYC,MAXX8E,kBAWW,aAVXC,mBAUW,MAVG,aAUH,MATXtG,YASW,MATJ,GASI,MARXnB,eAQW,aAPXD,mBAOW,MAPG,GAOH,MANXJ,gBAMW,MANA,KAMA,MALX+H,gBAKW,MALD,GAKC,OAJXC,kBAIW,OAJC,GAID,QAHXC,kBAGW,OAHC,GAGD,QAFXC,qBAEW,OAFI,GAEJ,GADXC,GACW,EADXA,UAEA,OAEE,yBACExH,UAAS,gBACK,YAAZoC,EAAA,2BAA4CA,GAAY,IAE1DjD,OAAQ,SAACoH,GAAD,OAAOG,EAAcH,IAC7BS,QAAS,SAACT,GAAD,OAAOI,EAAeJ,IAC/BrC,QAAS,SAACqC,GAAD,OAAOK,EAAeL,IAC/BkB,QAAS,gBAENzI,GACD,uBAAGgB,UAAS,UAAK+G,EAAL,kBACT/H,EACAU,GAAW,0BAAMM,UAAU,WAAhB,MAGhB,yBACEA,UAAS,qBAAgB8G,EAAhB,YACPI,EAAa,qBAAuB,KAGtC,2BACElH,UAAS,uBACPP,EAAYQ,OAAS,EAAIR,EAAc,GADhC,YAGK,YAAZ2C,EAAA,iBAAkCA,GAAY,GAHvC,YAILyE,GACJ/H,YAAaA,EACb0B,MAAOA,EACPvB,SAAUA,EACVsC,KAAMA,EACNhB,IAAKlB,EACL4H,QAASA,EACT7F,WAAYA,EACZqF,SAAUA,EACVtH,OAAQ,SAACoH,GAAD,OAAOpH,EAAOoH,IACtBS,QAAS,SAACT,GAAD,OAAOS,EAAQT,IACxBnH,SAAU,SAACmH,GAAD,OAAOnH,EAASmH,IAC1BmB,eAAe,OACfL,UAAWA,GACXC,UAAWA,GACXzG,KAAMA,EACNuG,QAASA,GACTO,aAAcJ,GAEdC,UAAWA,KAEZN,GAAc1G,EAAMP,OAAS,GAC5B,yBACED,UAAU,2CACVkE,QAASiD,EACTM,QAASN,EACT1C,KAAK,SACLC,SAAU,GAEV,yBAAKC,IAAKiD,IAAOC,WAAY/C,IAAI,OAItC/F,GAAY,uBAAGiB,UAAU,oBAAoBjB,KAKpDyH,EAAMxF,aAAe,CACnBlC,YAAa,GACb0B,MAAO,GACPzB,SAAU,GACVC,MAAO,GACPC,UAAU,EACVwH,UAAU,EACVlF,KAAM,OACNpC,OAAQ,aACRuH,cAAe,aACfC,eAAgB,aAChBC,eAAgB,aAChBI,QAAS,aACT5H,SAAU,aACVgC,WAAY,aACZ6F,QAAS,aACTI,UAAW,GACXC,UAAW,GACXlF,QAAS,UACTyE,gBAAiB,GACjBE,iBAAkB,GAClBD,gBAAiB,GACjBI,YAAY,EACZC,YAAa,aACbtG,KAAM,GACNnB,SAAS,EACTL,SAAU,KACVI,YAAa,GACb2H,QAAS,GACTG,aAAc,GACdC,WAAW,GAGE/F,mBAAY+E,I,iCCzK3B,oEACO,IAAMsB,EAAoB,CAC/B,CACElH,GAAI,EACJC,KAAM,OAER,CACED,GAAI,EACJC,KAAM,sBAER,CACED,GAAI,EACJC,KAAM,gBAER,CACED,GAAI,EACJC,KAAM,gBAER,CACED,GAAI,EACJC,KAAM,4BAER,CACED,GAAI,EACJC,KAAM,sBAER,CACED,GAAI,EACJC,KAAM,oCAIGkH,EAAe,CAC1B,CACEnH,GAAI,EACJC,KAAM,OAER,CACED,GAAI,EACJC,KAAM,4BAER,CACED,GAAI,EACJC,KAAM,gBAER,CACED,GAAI,EACJC,KAAM,sBAER,CACED,GAAI,EACJC,KAAM,sBAGR,CACED,GAAI,EACJC,KAAM,sBAER,CACED,GAAI,EACJC,KAAM,8B,2MCuLKY,0BA7NU,SAAC,GAAwB,IAAtBuG,EAAqB,EAArBA,QACpBC,EAAWC,cACXC,EAAiBC,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,cAAlB,aAAW,EAAeH,kBACvDI,EAAaH,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,cAAlB,aAAW,EAAeC,cACnDC,EAAYJ,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,cAAlB,aAAW,EAAeE,aAClDC,EAAYL,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,cAAlB,aAAW,EAAeG,aAClDC,EAAUN,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,cAAlB,aAAW,EAAeI,WAChDC,EAAgBP,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,cAAlB,aAAW,EAAeK,iBAPb,EAQL9I,mBAAS,OARJ,mBAQxC+I,EARwC,KAQzBC,EARyB,OASThJ,mBAAS,IATA,mBASxCiJ,EATwC,KAS3BC,EAT2B,OAUXlJ,mBAAS,GAVE,mBAUxCmJ,EAVwC,KAU5BC,EAV4B,OAWPpJ,mBAAS,MAXF,mBAWxCqJ,EAXwC,KAW1BC,EAX0B,KAa/CC,qBAAU,WACRnB,EAASoB,eACTpB,EAASqB,iBACR,IAEHF,qBAAU,WAAO,IAAD,EACdnB,EACEsB,aAAa,mBACVX,EADU,OACMM,QADN,IACMA,OADN,EACMA,EAAc1I,OADpB,qBAEL,GAFK,OAKd,CAAC0I,EAAD,OAAeA,QAAf,IAAeA,OAAf,EAAeA,EAAc1I,QAEhC,IAWMgJ,EAAiB,SAACjD,GAAO,IACrB1F,EAAS0F,EAAEjD,OAAXzC,KACRgI,EAAiBhI,IAIb4I,EAAkBxD,IAA4BvF,KAAI,SAACC,GAAD,OACtD,kBAAC,IAAD,CACEC,GAAID,EAAK8C,IACT5C,KAAMF,EAAK8C,IACXzE,MAAO2B,EAAK3B,MACZI,SAAUoK,EACVrI,UAAWyH,IAAkBjI,EAAK8C,IAClC6C,WAAY3F,EAAK3B,WAKf0K,EAAqB,WAAO,IAAD,EAC/BzB,EACEsB,aAAa,mBACVX,EADU,OACMM,QADN,IACMA,OADN,EACMA,EAAc1I,OADpB,wBAEFsI,GAFE,qBAGL,GAHK,MAsDjB,OACE,oCACGN,GAAa,kBAAC,IAAD,MACd,yBAAKxI,UAAU,kBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,oCACb,yBAAK2E,IAAKiD,IAAO+B,UAAW7E,IAAI,sBAChC,0BAAM9E,UAAU,0CAAhB,6BAGA,0BAAMA,UAAU,yCAAhB,wIAIF,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,uBAAGA,UAAU,uBAAb,gBAA0C,IAC1C,0BAAMA,UAAU,2BAAhB,KAAmD,IAClDyJ,GAEH,yBAAKG,SAAS,6CACZ,kBAAC,IAAD,CACEhK,SA9DY,WACxB,IAAIiK,EAAc,GAClB,OAAQjB,GACN,IAAK,MACHiB,EAAW,sBAAO1B,GAAP,YAA0BQ,IACrC,MACF,IAAK,SACHkB,EAAc1B,EACd,MACF,IAAK,SACH0B,EAAclB,EAMlB,OAAOkB,EA8CeC,GACV1K,SAAU,SAACE,GAAD,OA5GD,SAACA,GACtB6J,EAAgB7J,GA2GkByK,CAAezK,IACrCA,OAAQ4J,EACRpK,YAAY,+BAGhB,yBAAKkB,UAAU,4CACb,kBAAC,IAAD,CACElB,YAAY,yGACZW,YAAY,uBACZL,SAhHY,SAACmH,GAAO,IACxB/F,EAAU+F,EAAEjD,OAAZ9C,MACRuI,EAAevI,IA+GHA,MAAOsI,EACP1H,WAAY,SAACmF,GAAD,OAhFJ,SAACA,GACP,UAAVA,EAAE9C,KACJiG,IA8E6BM,CAAczD,MAEnC,yBACE5B,IAAKiD,IAAOqC,YACZnF,IAAI,cACJ9E,UAAU,eAEVyE,KAAK,kBAGT,kBAAC,IAAD,CAAQhF,YAAY,aAAayE,QAASwF,GAA1C,kBAKJ,yBAAK1J,UAAU,yBACb,kBAAC,IAAD,CACE2F,WAAYmC,IACZlC,UAAW2C,EACX1C,WA9DkB,SAAClF,GAC3BqH,EAAQkC,KAAK,CACXC,SAAS,GAAD,OAAKC,IAAQC,OAAb,YAAuB1J,EAAKC,IACpCyH,MAAO,CACLzH,GAAID,EAAKC,OA2DLwE,UAAQ,IAEV,yBAAKpF,UAAU,8BACb,kBAAC,IAAD,CACEP,YAAY,aACZyE,QAAS,WACP8D,EAAQkC,KAAKE,IAAQE,mBAHzB,iBASD7B,EAAYC,GACX,yBAAK1I,UAAU,8BACb,kBAAC,IAAD,CACEgJ,WAAYA,EACZuB,kBAAmB7B,EACnB8B,gBAAiB/B,EACjBgC,mBAAoB,EACpBrL,SA9FW,SAACsL,GAAU,IAAD,EACjCzB,EAAcyB,GACdzC,EACEsB,aAAa,mBACVX,EADU,OACMM,QADN,IACMA,OADN,EACMA,EAAc1I,OADpB,wBAEFsI,GAFE,qBAGX4B,GAHW,MA4FHC,UAAU,YACVC,UAAU,YACVC,cACE,yBACElG,IAAKiD,IAAOkD,kBACZhG,IAAI,GACJ9E,UAAU,gBAGd+K,aACE,yBACEpG,IAAKiD,IAAOoD,mBACZlG,IAAI,GACJ9E,UAAU,gBAGdiL,aACE,yBAAKtG,IAAKiD,IAAOsD,WAAYpG,IAAI,GAAG9E,UAAU,gBAEhDmL,aACE,yBACExG,IAAKiD,IAAOwD,aACZtG,IAAI,GACJ9E,UAAU","file":"static/js/25.c5165548.chunk.js","sourcesContent":["// @flow\r\nimport React, { useState } from 'react';\r\nimport Select, { components } from 'react-select';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  errorMsg?: string,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  isSearchable?: boolean,\r\n  onBlur?: Function,\r\n  onChange?: Function,\r\n  listOptionString?: Array<{ id: number, name: any }>,\r\n  listItem?: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  innerRef?: any,\r\n  option?: Object,\r\n  noOptionsMessage?: Function,\r\n  customClass?: string,\r\n  request?: boolean,\r\n  noLabel?: boolean,\r\n};\r\nconst SelectDropdown = ({\r\n  placeholder = '',\r\n  errorMsg = '',\r\n  label = '',\r\n  disabled = false,\r\n  isSearchable = false,\r\n  onBlur = null,\r\n  onChange = () => {},\r\n  innerRef = null,\r\n  option = {},\r\n  noOptionsMessage = () => {},\r\n  listOptionString = [],\r\n  customClass = '',\r\n  request = false,\r\n  noLabel = false,\r\n  listItem,\r\n}: Props) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const DropdownIndicator = (props) => {\r\n    setIsActive(props?.selectProps?.menuIsOpen);\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <div className=\"d-none\" />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      className={`customer-select ${customClass.length > 0 ? customClass : ''}`}\r\n    >\r\n      {!!label && (\r\n        <p className=\"input__label\">\r\n          {label}\r\n          {request && <span className=\"request\">*</span>}\r\n        </p>\r\n      )}\r\n      <div className={`input__box ${isActive ? 'down' : ''}`}>\r\n        <Select\r\n          placeholder={placeholder}\r\n          components={{ DropdownIndicator }}\r\n          ref={innerRef}\r\n          value={option || null}\r\n          onChange={onChange}\r\n          noOptionsMessage={noOptionsMessage}\r\n          // menuIsOpen\r\n          options={\r\n            noLabel\r\n              ? listOptionString.map((item) => ({\r\n                  id: item.id,\r\n                  value: item.name,\r\n                  label: item.name,\r\n                }))\r\n              : listItem\r\n          }\r\n          blurInputOnSelect={onBlur}\r\n          isDisabled={disabled}\r\n          isSearchable={isSearchable}\r\n        />\r\n      </div>\r\n      {errorMsg && <p className=\"error-msg\">{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\nSelectDropdown.defaultProps = {\r\n  placeholder: '',\r\n  errorMsg: '',\r\n  label: '',\r\n  disabled: false,\r\n  isSearchable: false,\r\n  // icon: '',\r\n  noLabel: false,\r\n  onBlur: null,\r\n  onChange: () => {},\r\n  innerRef: null,\r\n  listItem: [],\r\n  listOptionString: [],\r\n  option: {},\r\n  noOptionsMessage: () => {},\r\n  customClass: '',\r\n  request: false,\r\n};\r\nexport default SelectDropdown;\r\n","// @flow\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  id?: any,\r\n  name?: string,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  customClass?: string,\r\n  handleToggleCheckbox: Function,\r\n  isChecked?: boolean,\r\n  onKeyPress?: Function,\r\n  subLabel?: string,\r\n};\r\n\r\nexport const CheckBox = ({\r\n  id,\r\n  name,\r\n  label,\r\n  disabled,\r\n  customClass = '',\r\n  handleToggleCheckbox,\r\n  isChecked = false,\r\n  onKeyPress = () => {},\r\n  subLabel = '',\r\n}: Props) => {\r\n  return (\r\n    <div\r\n      className={`${customClass} checkbox ${\r\n        isChecked ? 'checkbox--checked' : ''\r\n      }`}\r\n    >\r\n      <label className=\"checkbox__label\" htmlFor={id}>\r\n        <input\r\n          className=\"checkbox__input\"\r\n          type=\"checkbox\"\r\n          id={id}\r\n          name={name}\r\n          value={label}\r\n          checked={isChecked}\r\n          disabled={disabled}\r\n          onKeyPress={onKeyPress}\r\n          onChange={handleToggleCheckbox}\r\n        />\r\n        <span>\r\n          {label}\r\n          <i>{subLabel}</i>\r\n        </span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckBox.defaultProps = {\r\n  id: '',\r\n  name: '',\r\n  label: '',\r\n  disabled: false,\r\n  customClass: '',\r\n  isChecked: false,\r\n  onKeyPress: () => {},\r\n  subLabel: '',\r\n};\r\n\r\nexport default memo<Props>(CheckBox);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","// @flow\r\nimport React, { useState, memo } from 'react';\r\nimport CheckBox from '../CheckBox';\r\n\r\ntype Props = {\r\n  listCheckBox: Array<{\r\n    name: string,\r\n    key: string,\r\n    label: string,\r\n  }>,\r\n  label: string,\r\n  handleCheckboxDefault: Function,\r\n  customClass: string,\r\n  optionDefault: Array<string>,\r\n};\r\nexport const MutipleCheckbox = ({\r\n  listCheckBox,\r\n  label,\r\n  customClass,\r\n  submitValue,\r\n  optionDefault,\r\n}: Props) => {\r\n  const [checkedItems, setCheckedItems] = useState(optionDefault);\r\n  const handleChange = (event) => {\r\n    const { id } = event.target;\r\n\r\n    if (!checkedItems.includes(id)) {\r\n      setCheckedItems([...checkedItems, id]);\r\n      submitValue([...checkedItems, id]);\r\n    } else {\r\n      setCheckedItems(checkedItems.filter((item) => item !== id));\r\n      submitValue(checkedItems.filter((item) => item !== id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>{label}</div>\r\n      {listCheckBox.map((item) => (\r\n        <div className={`${customClass}`}>\r\n          <CheckBox\r\n            name={item.name}\r\n            isChecked={checkedItems.includes(item.key.toString())}\r\n            handleToggleCheckbox={handleChange}\r\n            id={item.key}\r\n            label={item?.label}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(MutipleCheckbox);\r\n","// @flow\r\nimport React, { memo, useState } from 'react';\r\nimport Button from 'commons/components/Button';\r\nimport MutipleCheckbox from 'commons/components/MultipleCheckbox';\r\n\r\ntype Props = {\r\n  handleCheckboxSort: Function,\r\n  listOption?: Array<{}>,\r\n  optionDefault?: Array<string>,\r\n};\r\n\r\nconst ModalSortTable = ({\r\n  handleCheckboxSort,\r\n  listOption = [],\r\n  optionDefault = [],\r\n}: Props) => {\r\n  const [listValueOption, setListValueOption] = useState([]);\r\n  const handleGetValue = (list) => {\r\n    setListValueOption(list);\r\n  };\r\n  return (\r\n    <div className=\"modal-sorting\">\r\n      <div className=\"checkbox-header\">이벤트명 필터</div>\r\n      <div className=\"list-checkbox\">\r\n        <MutipleCheckbox\r\n          listCheckBox={listOption}\r\n          submitValue={handleGetValue}\r\n          optionDefault={optionDefault}\r\n        />\r\n      </div>\r\n      <Button onClick={() => handleCheckboxSort(listValueOption)}>등록</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nModalSortTable.defaultProps = {\r\n  optionDefault: [],\r\n  listOption: [],\r\n};\r\n\r\nexport default memo<Props>(ModalSortTable);\r\n","// @flow\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\nimport ModalSortTable from './ModalSortTable';\r\n\r\ntype Props = {\r\n  listItems: Array<{ id: number, name: string }>,\r\n  showModalSort?: any,\r\n  handleCheckboxSort?: Function,\r\n  handleShowModalSorting?: Function,\r\n  listOption: Array<{}>,\r\n  optionDefault?: Array<string>,\r\n};\r\n\r\nconst TableHead = ({\r\n  listItems,\r\n  showModalSort,\r\n  handleCheckboxSort,\r\n  handleShowModalSorting,\r\n  listOption,\r\n  optionDefault = [],\r\n}: Props) => (\r\n  <tr>\r\n    {listItems &&\r\n      listItems.map((item, index) => (\r\n        <th\r\n          key={item.id}\r\n          className={`${\r\n            showModalSort && showModalSort.keyItem === index\r\n              ? 'cursor-pointer w-188'\r\n              : ''\r\n          }`}\r\n        >\r\n          <div\r\n            onKeyPress={() => {}}\r\n            role=\"button\"\r\n            tabIndex={index}\r\n            onClick={() =>\r\n              showModalSort && showModalSort.keyItem === index\r\n                ? handleShowModalSorting && handleShowModalSorting()\r\n                : {}\r\n            }\r\n          >\r\n            {item && item.name}\r\n            {showModalSort && showModalSort.keyItem === index && (\r\n              <img src={images.ico_event2} alt=\"\" />\r\n            )}\r\n          </div>\r\n          {showModalSort &&\r\n            showModalSort.isShow &&\r\n            showModalSort.keyItem === index && (\r\n              <div>\r\n                <ModalSortTable\r\n                  handleCheckboxSort={handleCheckboxSort}\r\n                  listOption={listOption}\r\n                  optionDefault={optionDefault}\r\n                />\r\n              </div>\r\n            )}\r\n        </th>\r\n      ))}\r\n  </tr>\r\n);\r\n\r\nTableHead.defaultProps = {\r\n  showModalSort: null,\r\n  handleCheckboxSort: () => {},\r\n  handleShowModalSorting: () => {},\r\n  optionDefault: [],\r\n};\r\n\r\nexport default memo<Props>(TableHead);\r\n","// @flow\r\n\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  rowItem: Object,\r\n  onClickTableRow?: Function,\r\n  isShowId?: boolean,\r\n  rowActive?: Object,\r\n  isClickTableColumn?: boolean,\r\n  onClickTableColumn?: Function,\r\n};\r\n\r\nconst TableRow = ({\r\n  rowItem,\r\n  onClickTableRow = () => {},\r\n  isClickTableColumn = false,\r\n  isShowId = false,\r\n  rowActive = {},\r\n  onClickTableColumn = () => {},\r\n}: Props) => {\r\n  const fieldId = 'id';\r\n  let activeClass = '';\r\n  if (onClickTableRow) {\r\n    activeClass = 'row-cursor-pointer';\r\n  } else if (rowActive && rowActive.id === rowItem.id) {\r\n    activeClass = 'row-active';\r\n  }\r\n  return (\r\n    <tr\r\n      onClick={() => onClickTableRow && onClickTableRow(rowItem)}\r\n      className={activeClass}\r\n    >\r\n      {Object.keys(rowItem).map((item) => (\r\n        <td\r\n          key={item}\r\n          className={`${\r\n            // eslint-disable-next-line no-nested-ternary\r\n            isShowId && item === fieldId\r\n              ? 'd-none'\r\n              : isClickTableColumn\r\n              ? 'row-cursor-pointer'\r\n              : ''\r\n          }`}\r\n          onClick={() => isClickTableColumn && onClickTableColumn(rowItem)}\r\n          onKeyPress={() => isClickTableColumn && onClickTableColumn(rowItem)}\r\n          role=\"presentation\"\r\n        >\r\n          {rowItem[item]}\r\n        </td>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\nTableRow.defaultProps = {\r\n  onClickTableRow: null,\r\n  isShowId: false,\r\n  onClickTableColumn: () => {},\r\n  isClickTableColumn: false,\r\n  rowActive: {},\r\n};\r\nexport default memo<Props>(TableRow);\r\n","// @flow\r\nimport React, { memo } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport TableHead from './TableHead';\r\nimport TableRow from './TableRow';\r\n\r\ntype Props = {\r\n  tableHeads: Array<{ id: number, name: string }>,\r\n  tableBody: Array<{ id: number }>,\r\n  onClickRow?: Function,\r\n  handleClickBtnDetail?: Function,\r\n  isShowId?: boolean,\r\n  rowActive?: Function,\r\n  onClickTableColumn?: Function,\r\n  showModalSort?: any,\r\n  handleCheckboxSort?: Function,\r\n  handleShowModalSorting?: Function,\r\n  listOption?: Array<{}>,\r\n  optionDefault?: Array<string>,\r\n};\r\n\r\nconst TableData = ({\r\n  tableHeads,\r\n  tableBody,\r\n  onClickRow = () => {},\r\n  handleClickBtnDetail = () => {},\r\n  isShowId = false,\r\n  rowActive = {},\r\n  onClickTableColumn = () => {},\r\n  showModalSort = '',\r\n  handleCheckboxSort = () => {},\r\n  handleShowModalSorting = () => {},\r\n  listOption = [],\r\n  optionDefault = [],\r\n}: Props) => {\r\n  const renderBodyTable =\r\n    tableBody &&\r\n    tableBody.map((item, index) => (\r\n      <TableRow\r\n        onClickTableRow={onClickRow}\r\n        rowItem={item}\r\n        key={item.id || index}\r\n        rowActive={rowActive}\r\n        handleClickBtnDetail={handleClickBtnDetail}\r\n        isShowId={isShowId}\r\n        onClickTableColumn={onClickTableColumn}\r\n      />\r\n    ));\r\n\r\n  const renderBody = () => {\r\n    if (renderBodyTable && renderBodyTable.length > 0) {\r\n      return renderBodyTable;\r\n    }\r\n    return (\r\n      <tr className=\"p-3 text-center table-no-data w-100\">\r\n        <td colSpan={tableHeads && tableHeads.length}>\r\n          <p className=\"mb-0 text-center\">데이터가 존재하지 않습니다.</p>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Table striped bordered hover responsive>\r\n      <thead>\r\n        <TableHead\r\n          listItems={tableHeads}\r\n          showModalSort={showModalSort}\r\n          handleCheckboxSort={handleCheckboxSort}\r\n          handleShowModalSorting={handleShowModalSorting}\r\n          listOption={listOption}\r\n          optionDefault={optionDefault}\r\n        />\r\n      </thead>\r\n      <tbody>{renderBody()}</tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nTableData.defaultProps = {\r\n  onClickRow: null,\r\n  rowActive: null,\r\n  handleClickBtnDetail: () => {},\r\n  isShowId: false,\r\n  onClickTableColumn: () => {},\r\n  showModalSort: '',\r\n  handleCheckboxSort: () => {},\r\n  handleShowModalSorting: () => {},\r\n  listOption: [],\r\n  optionDefault: [],\r\n};\r\nexport default memo<Props>(TableData);\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const DeviceManagementOptionSeach = [\r\n  {\r\n    name: 'all',\r\n    key: 'all',\r\n    label: '전체',\r\n  },\r\n  {\r\n    name: 'company',\r\n    key: 'com_id',\r\n    label: '업체',\r\n  },\r\n  {\r\n    name: 'position',\r\n    key: 'pos_id',\r\n    label: '설치위치',\r\n  },\r\n];\r\n\r\nexport const registerDeviceOptions = [\r\n  {\r\n    name: 'solar-monitoring',\r\n    key: '0',\r\n    label: '실증단지',\r\n  },\r\n  {\r\n    name: 'test-solar-monitoring',\r\n    key: '2',\r\n    label: '테스트(실증단지)',\r\n  },\r\n  {\r\n    name: 'test-mockup',\r\n    key: '3',\r\n    label: '테스트(목업)',\r\n  },\r\n];\r\n\r\nexport const accountOptions = [\r\n  {\r\n    name: 'all',\r\n    key: 'all',\r\n    label: '전체',\r\n  },\r\n  {\r\n    name: 'admin',\r\n    key: 'admin',\r\n    label: '최고관리자',\r\n  },\r\n  {\r\n    name: 'company',\r\n    key: 'company',\r\n    label: '업체',\r\n  },\r\n  {\r\n    name: 'monitoring',\r\n    key: 'monitoring',\r\n    label: '모니터링',\r\n  },\r\n];\r\n\r\nexport const operator_event_filter = [\r\n  {\r\n    name: '측정 문제',\r\n    key: 0,\r\n    label: '측정 문제',\r\n  },\r\n  {\r\n    name: '보수 이력',\r\n    key: 1,\r\n    label: '보수 이력',\r\n  },\r\n  {\r\n    name: '설비 이력',\r\n    key: 2,\r\n    label: '설비 이력',\r\n  },\r\n];\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  name?: string,\r\n  onChange: Function,\r\n  disabled?: boolean,\r\n  labelRadio: string,\r\n  isChecked: boolean,\r\n  id?: string,\r\n};\r\n\r\nexport const Radio = ({\r\n  labelRadio,\r\n  name = '',\r\n  isChecked,\r\n  onChange,\r\n  id = '',\r\n  disabled = false,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"wrap-radio\">\r\n      <label className=\"custom-radio d-flex\" htmlFor={id}>\r\n        <input\r\n          type=\"radio\"\r\n          checked={`${isChecked ? 'checked' : ''}`}\r\n          name={name}\r\n          onChange={(e) => onChange(e)}\r\n          id={id}\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"checkmark\" />\r\n        <span className=\"label\">{labelRadio}</span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadio.defaultProps = {\r\n  name: '',\r\n  disabled: false,\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(Radio);\r\n","// @flow\r\n\r\nimport React, { memo } from 'react';\r\nimport IMAGES from 'themes/images';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  value?: any,\r\n  errorMsg?: any,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  inputMode?: string,\r\n  type?: string,\r\n  onBlur?: Function,\r\n  onBlurWrapper?: Function,\r\n  onFocusWrapper?: Function,\r\n  onClickWrapper?: Function,\r\n  onChange?: Function,\r\n  onFocus?: Function,\r\n  onKeyPress?: Function,\r\n  onPaste?: Function,\r\n  readOnly?: boolean,\r\n  variant?: string,\r\n  customClassName?: string,\r\n  customClassLabel?: string,\r\n  customClassWrap?: string,\r\n  isShowIcon?: boolean,\r\n  deleteValue?: Function,\r\n  name?: string,\r\n  request?: boolean,\r\n  innerRef?: any,\r\n  customClass?: string,\r\n  innerRef?: any,\r\n  pattern?: string,\r\n  maxLength?: string,\r\n  autocomplete?: string,\r\n  autoFocus?: boolean,\r\n};\r\n\r\nexport const Input = ({\r\n  placeholder = '',\r\n  value = '',\r\n  errorMsg = '',\r\n  label = '',\r\n  disabled = false,\r\n  readOnly = false,\r\n  type = 'text',\r\n  onBlur = () => {},\r\n  onBlurWrapper = () => {},\r\n  onFocusWrapper = () => {},\r\n  onClickWrapper = () => {},\r\n  onChange = () => {},\r\n  customClassName = null,\r\n  customClassWrap = null,\r\n  customClassLabel = null,\r\n  onFocus = () => {},\r\n  onKeyPress = () => {},\r\n  onPaste = () => {},\r\n  variant = 'outline',\r\n  isShowIcon = false,\r\n  deleteValue = () => {},\r\n  name = '',\r\n  request = false,\r\n  customClass = '',\r\n  innerRef = null,\r\n  pattern = '',\r\n  inputMode = '',\r\n  maxLength = '',\r\n  autocomplete = '',\r\n  autoFocus,\r\n}: Props) => {\r\n  return (\r\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\r\n    <div\r\n      className={`input ${\r\n        variant !== 'outline' ? ` input__wrapper--${variant}` : ''\r\n      }`}\r\n      onBlur={(e) => onBlurWrapper(e)}\r\n      onFocus={(e) => onFocusWrapper(e)}\r\n      onClick={(e) => onClickWrapper(e)}\r\n      onKeyUp={() => {}}\r\n    >\r\n      {!!label && (\r\n        <p className={`${customClassLabel} input__label`}>\r\n          {label}\r\n          {request && <span className=\"request\">*</span>}\r\n        </p>\r\n      )}\r\n      <div\r\n        className={`input__box ${customClassWrap} ${\r\n          isShowIcon ? 'input__box__custom' : ''\r\n        }`}\r\n      >\r\n        <input\r\n          className={`input-change ${\r\n            customClass.length > 0 ? customClass : ''\r\n          } ${\r\n            variant !== 'outline' ? `input--${variant}` : ''\r\n          } ${customClassName}`}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          disabled={disabled}\r\n          type={type}\r\n          ref={innerRef}\r\n          onPaste={onPaste}\r\n          onKeyPress={onKeyPress}\r\n          readOnly={readOnly}\r\n          onBlur={(e) => onBlur(e)}\r\n          onFocus={(e) => onFocus(e)}\r\n          onChange={(e) => onChange(e)}\r\n          autoCapitalize=\"none\"\r\n          inputMode={inputMode}\r\n          maxLength={maxLength}\r\n          name={name}\r\n          pattern={pattern}\r\n          autoComplete={autocomplete}\r\n          // eslint-disable-next-line jsx-a11y/no-autofocus\r\n          autoFocus={autoFocus}\r\n        />\r\n        {isShowIcon && value.length > 0 && (\r\n          <div\r\n            className=\"input__box__icon input__box__icon__right\"\r\n            onClick={deleteValue}\r\n            onKeyUp={deleteValue}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <img src={IMAGES.icon_close} alt=\"\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {errorMsg && <p className=\"input__error-msg\">{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  placeholder: '',\r\n  value: '',\r\n  errorMsg: '',\r\n  label: '',\r\n  disabled: false,\r\n  readOnly: false,\r\n  type: 'text',\r\n  onBlur: () => {},\r\n  onBlurWrapper: () => {},\r\n  onFocusWrapper: () => {},\r\n  onClickWrapper: () => {},\r\n  onFocus: () => {},\r\n  onChange: () => {},\r\n  onKeyPress: () => {},\r\n  onPaste: () => {},\r\n  inputMode: '',\r\n  maxLength: '',\r\n  variant: 'outline',\r\n  customClassName: '',\r\n  customClassLabel: '',\r\n  customClassWrap: '',\r\n  isShowIcon: false,\r\n  deleteValue: () => {},\r\n  name: '',\r\n  request: false,\r\n  innerRef: null,\r\n  customClass: '',\r\n  pattern: '',\r\n  autocomplete: '',\r\n  autoFocus: false,\r\n};\r\n\r\nexport default memo<Props>(Input);\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const DEVICE_HEAD_TABLE = [\r\n  {\r\n    id: 0,\r\n    name: 'No.',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: '설치일',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '업체',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '구분',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '설치위치',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '모듈명',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '담당자 정보',\r\n  },\r\n];\r\n\r\nexport const ACCOUNT_HEAD = [\r\n  {\r\n    id: 1,\r\n    name: 'NO.',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '등록일자',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '권한',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '아이디',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '이메일',\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    name: '담당자',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '전화번호',\r\n  },\r\n];\r\n","// @flow\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, memo } from 'react';\r\nimport Radio from 'commons/components/Radio';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Pagination from 'react-js-pagination';\r\nimport IMAGES from 'themes/images';\r\nimport ROUTERS from 'constants/routers';\r\nimport { DeviceManagementOptionSeach } from 'constants/optionCheckbox';\r\nimport Select from 'commons/components/Select';\r\nimport Input from 'commons/components/Input';\r\nimport Button from 'commons/components/Button';\r\nimport Table from 'commons/components/Table';\r\nimport { DEVICE_HEAD_TABLE } from 'constants/tableHeadData';\r\nimport { getListCompany, getListDevice, getListPosition } from '../redux';\r\nimport Loading from 'commons/components/Loading';\r\n\r\ntype Props = {\r\n  history: {\r\n    push: Function,\r\n  },\r\n};\r\nconst DeviceManagement = ({ history }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const companyOptions = useSelector((state) => state?.device?.companyOptions);\r\n  const deviceList = useSelector((state) => state?.device?.deviceList);\r\n  const isLoading = useSelector((state) => state?.device?.isLoading);\r\n  const totalPage = useSelector((state) => state?.device?.totalPage);\r\n  const perPage = useSelector((state) => state?.device?.perPage);\r\n  const posOptionList = useSelector((state) => state?.device?.posOptionList);\r\n  const [currentOption, setCurrentOption] = useState('all');\r\n  const [valueSearch, setValueSearch] = useState('');\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [selectOption, setSelectOption] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getListCompany());\r\n    dispatch(getListPosition());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getListDevice({\r\n        [currentOption]: selectOption?.value,\r\n        page: 1,\r\n      })\r\n    );\r\n  }, [selectOption, selectOption?.value]);\r\n  // handle when slect change\r\n  const onChangeSelect = (option) => {\r\n    setSelectOption(option);\r\n  };\r\n\r\n  // handle input change\r\n  const handleInputChange = (e) => {\r\n    const { value } = e.target;\r\n    setValueSearch(value);\r\n  };\r\n\r\n  // handle when radio change\r\n  const onChangeOption = (e) => {\r\n    const { name } = e.target;\r\n    setCurrentOption(name);\r\n  };\r\n\r\n  // render list radio\r\n  const renderRadioList = DeviceManagementOptionSeach.map((item) => (\r\n    <Radio\r\n      id={item.key}\r\n      name={item.key}\r\n      label={item.label}\r\n      onChange={onChangeOption}\r\n      isChecked={currentOption === item.key}\r\n      labelRadio={item.label}\r\n    />\r\n  ));\r\n\r\n  // handle submit search\r\n  const handleSubmitSearch = () => {\r\n    dispatch(\r\n      getListDevice({\r\n        [currentOption]: selectOption?.value,\r\n        keyword: valueSearch,\r\n        page: 1,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSubmitSearch();\r\n    }\r\n  };\r\n\r\n  const renderListOptions = () => {\r\n    let listOptions = [];\r\n    switch (currentOption) {\r\n      case 'all':\r\n        listOptions = [...companyOptions, ...posOptionList];\r\n        break;\r\n      case 'com_id':\r\n        listOptions = companyOptions;\r\n        break;\r\n      case 'pos_id':\r\n        listOptions = posOptionList;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return listOptions;\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setActivePage(page);\r\n    dispatch(\r\n      getListDevice({\r\n        [currentOption]: selectOption?.value,\r\n        keyword: valueSearch,\r\n        page,\r\n      })\r\n    );\r\n  };\r\n\r\n  // Handle click to table row\r\n  const handleClickTableRow = (item) => {\r\n    history.push({\r\n      pathname: `${ROUTERS.DEVICE}/${item.id}`,\r\n      state: {\r\n        id: item.id,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n      <div className=\"wrapper-device\">\r\n        <div className=\"wrapper-device__head-menu\">\r\n          <div className=\"wrapper-device__head-menu__title\">\r\n            <img src={IMAGES.iconTitle} alt=\"icon-title-device\" />\r\n            <span className=\"wrapper-device__head-menu__title__text\">\r\n              기기 관리\r\n            </span>\r\n            <span className=\"wrapper-device__head-menu__title__des\">\r\n              등록되어있는 기기정보들을 관리하실 수 있습니다.\r\n            </span>\r\n          </div>\r\n          <div className=\"wrapper-device__head-menu__search\">\r\n            <div className=\"wrapper-device__head-menu__search__options\">\r\n              <p className=\"search-option-title\">분류</p>{' '}\r\n              <span className=\"search-option-character\">|</span>{' '}\r\n              {renderRadioList}\r\n            </div>\r\n            <div lassName=\"wrapper-device__head-menu__search__select\">\r\n              <Select\r\n                listItem={renderListOptions()}\r\n                onChange={(option) => onChangeSelect(option)}\r\n                option={selectOption}\r\n                placeholder=\"업체 선택\"\r\n              />\r\n            </div>\r\n            <div className=\"wrapper-device__head-menu__search__input\">\r\n              <Input\r\n                placeholder=\"업체명, 구분, 설치위치로 검색해보세요.\"\r\n                customClass=\"wrapper-input-search\"\r\n                onChange={handleInputChange}\r\n                value={valueSearch}\r\n                onKeyPress={(e) => handleKeyDown(e)}\r\n              />\r\n              <img\r\n                src={IMAGES.icon_search}\r\n                alt=\"Icon Search\"\r\n                className=\"search__icon\"\r\n                // onClick={() => handleClick(searchValue)}\r\n                role=\"presentation\"\r\n              />\r\n            </div>\r\n            <Button customClass=\"custom-btn\" onClick={handleSubmitSearch}>\r\n              검색\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"wrapper-device__table\">\r\n          <Table\r\n            tableHeads={DEVICE_HEAD_TABLE}\r\n            tableBody={deviceList}\r\n            onClickRow={handleClickTableRow}\r\n            isShowId\r\n          />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button\r\n              customClass=\"custom-btn\"\r\n              onClick={() => {\r\n                history.push(ROUTERS.REGISTER_DEVICE);\r\n              }}\r\n            >\r\n              등록\r\n            </Button>\r\n          </div>\r\n          {totalPage > perPage && (\r\n            <div className=\"wrapper-device__pagination\">\r\n              <Pagination\r\n                activePage={activePage}\r\n                itemsCountPerPage={perPage}\r\n                totalItemsCount={totalPage}\r\n                pageRangeDisplayed={5}\r\n                onChange={handlePageChange}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n                firstPageText={\r\n                  <img\r\n                    src={IMAGES.double_arrow_left}\r\n                    alt=\"\"\r\n                    className=\"double-prev\"\r\n                  />\r\n                }\r\n                lastPageText={\r\n                  <img\r\n                    src={IMAGES.double_arrow_right}\r\n                    alt=\"\"\r\n                    className=\"double-prev\"\r\n                  />\r\n                }\r\n                prevPageText={\r\n                  <img src={IMAGES.arrow_left} alt=\"\" className=\"double-prev\" />\r\n                }\r\n                nextPageText={\r\n                  <img\r\n                    src={IMAGES.arrow_right1}\r\n                    alt=\"\"\r\n                    className=\"double-prev\"\r\n                  />\r\n                }\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(DeviceManagement);\r\n"],"sourceRoot":""}