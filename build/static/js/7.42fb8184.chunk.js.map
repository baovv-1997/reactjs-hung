{"version":3,"sources":["customHooks/useClickOutSide.js","customHooks/useDebounce.js","commons/components/Search/AutoSuggest.js","commons/components/Search/index.js","commons/components/Header/ModalEvent.js","commons/components/Header/index.js","constants/listMenu.js","layout/Menu/Submenu.js","layout/Menu/MenuItem.js","layout/Menu/index.js","layout/MainLayout/index.js","modules/main/components/VitualData/index.js","modules/main/components/WeeklyElectric/index.js","modules/main/components/InfoReality/InfoRealityItem.js","modules/main/components/InfoReality/index.js","modules/main/components/TotalPower/TotalPowerItem.js","modules/main/components/TotalPower/index.js"],"names":["useClickOutside","ref","handler","rest","useEffect","listener","event","current","contains","target","iconRef","document","addEventListener","removeEventListener","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","setTimeout","clearTimeout","AutoSuggest","onClick","options","className","map","option","index","key","role","label","defaultProps","memo","Search","placeholder","handleIconClick","customClass","onChange","setSearchTerm","handleKeyDown","isSpinner","display","setDisplay","wrapperRef","useRef","handleClickOutside","wrap","window","onKeyPress","e","src","images","icon_search","alt","length","search","searchValue","console","log","ModalEvent","isShow","Header","isSearch","isSelect","eventCount","dispatch","useDispatch","useSelector","state","main","listPositions","optionsCompany","optionsPosition","optionDropdown","setOptionDropdown","setIsShow","id","searchTerm","content","modal","setModal","debouncedSearchTerm","getCompanySearchMain","keyword","getPositionSearchMain","indexDefault","findIndex","item","includes","searchSubmit","getCardMeasureSearchPosition","type","pos_id","getCardMeasureSearchCompany","com_id","Select","listItem","ops","disabled","isSearchable","blurInputOnSelect","icon_event","Modal","isOpen","isShowHeader","title","isShowIconClose","isShowFooter","handleCloseIcon","handleClose","textBtnRight","DASHBOARD","icon","IMAGES","iconGraph","to","ROUTERS","ROOT","items","name","sub","DASHBOARD_AREA","DASHBOARD_COMPANY","STATUS_COMPANY","STATUS_COMPANY_BY_AREA","OPERATION_STATUS_BY_COMPANY","OPERATION_STATUS_BY_AREA","STATISTICS_DEVELOP","STATISTICS_DEVELOP_AREA","OPERATION_STATISTICS_COMPANY","OPERATION_STATISTICS_AREA","SETUP","setup","MOCKUP","mockUp","TEST_DASHBOARD","TEST_MOCKUP_STATUS","TEST_MOCKUP_OPERATION","TEST_MOCKUP_STATISTICS_DEVELOP","TEST_MOCKUP_STATISTICS_OPERATION","SOLAR_DASHBOARD","TEST_SOLAR_STATUS_DEVELOP","TEST_SOLAR_STATUS_OPERATION","TEST_SOLAR_STATISTICS_DEVELOP","TEST_SOLAR_STATISTICS_OPERATION","itemSub","listNestSub","isActiveNestSub","handleClickItemSub","location","nestSubClicking","setNestSubClicking","renderNestedSub","activeNestItem","pathname","stopPropagation","handleClickNestSub","tabIndex","faChevronRight","listSub","handleClickItem","isActive","subMenuClicking","commons","setListNestSub","activeSub","setActiveSub","active","renderSub","nestSub","withRouter","menuClicking","setListSub","setMenuClicking","renderMenuList","listMenu","Button","btn_logout","MainLayout","children","isProcessing","setIsOpen","refMenu","mainContent","showHeader","classHeight","innerHeight","Loading","innerRef","VitualData","radiance","temperature","formatNumber","WeeklyElectric","InfoRealityItem","subName","unit","InfoReality","outputVoltage","outputCurrent","electricRealtime","ratePower","TotalPowerItem","TotalPower","amountElectricDay","amountElectricMonth","cumulativeElectric","icon_day","icon_month","icon_plus"],"mappings":"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","file":"static/js/7.42fb8184.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\n/**\n * Function: useOnClickOutside\n * A custom hook that use to trigger an event if have action click outside a ref's element.\n * @param {object} ref: a reference of element that we need to detect\n * @param {function} handler: a function that used to trigger event if have click event outside of element\n */\nconst useClickOutside = (ref, handler, { ...rest }) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element\n      if (\n        !ref.current ||\n        ref.current.contains(event.target) ||\n        !rest.iconRef.current ||\n        rest.iconRef.current.contains(event.target)\n      ) {\n        return;\n      }\n\n      // Fire event if clicking outside ref's element\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n    };\n  }, [ref, handler, rest.iconRef]);\n};\n\nexport default useClickOutside;\n","import { useEffect, useState } from 'react';\n\n/**\n * Function: useDebounce\n * @param {string} value \n * @param {number} delay \n * @returns \n */\n\nconst useDebounce = (value, delay) => {\n\n    // State and setter for debounce value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        // update debounced value after delay\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        // cancel the timeout if value changes\n        return () => {\n            clearTimeout(handler);\n        }\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;","// @flow\nimport React, { memo } from 'react';\n\ntype Props = {\n  onClick: Function,\n  options?: Array<{ id: number, value: number, label: string }>\n};\n\nconst AutoSuggest = ({ onClick, options = [] }: Props) => {\n  return (\n    <div className=\"auto-suggest\">\n      {options\n        .map((option, index) => (\n          <p\n            className=\"auto-suggest__item\"\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            onClick={() => onClick(option)}\n            role=\"presentation\"\n          >\n            {option.label}\n          </p>\n        ))}\n    </div>\n  );\n};\n\nAutoSuggest.defaultProps = {\n  options: [],\n};\n\nexport default memo < Props > (AutoSuggest);\n","// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport AutoSuggest from './AutoSuggest';\n\ntype Props = {\n  placeholder?: string,\n  handleIconClick?: Function,\n  customClass?: string,\n  value?: string,\n  onChange?: Function,\n  setSearchTerm?: Function,\n  options?: Array<{ id: number, value: number, label: string }>,\n  handleKeyDown: Function,\n  isSpinner?: boolean,\n};\n\nconst Search = ({\n  placeholder,\n  handleIconClick = () => { },\n  customClass = '',\n  value = '',\n  onChange = () => { },\n  setSearchTerm = () => { },\n  options = [],\n  handleKeyDown,\n  isSpinner = false\n}: Props) => {\n  const [display, setDisplay] = useState(false);\n\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      window.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n\n  const updateSearchInput = (searchValue) => {\n    console.log(searchValue, \"searchValue\");\n    setSearchTerm(searchValue);\n    setDisplay(false);\n  };\n\n  return (\n    <div ref={wrapperRef} className={`search ${customClass}`}>\n      <input\n        className=\"search__input\"\n        onClick={() => setDisplay(true)}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onKeyPress={(e) => handleKeyDown(e)}\n      />\n\n      {isSpinner && <div className=\"spinner\" />}\n\n      <img\n        src={images.icon_search}\n        alt=\"Icon Search\"\n        className=\"search__icon\"\n        onClick={handleIconClick}\n        role=\"presentation\"\n      />\n      {(display && options.length) ? <AutoSuggest search={value} onClick={updateSearchInput} options={options} /> : null}\n    </div>\n  );\n};\n\nSearch.defaultProps = {\n  placeholder: '',\n  customClass: '',\n  value: '',\n  onChange: () => { },\n  setSearchTerm: () => { },\n  handleIconClick: () => { },\n  options: [],\n  isSpinner: false,\n};\n\nexport default memo < Props > (Search);\n","// @flow\nimport React from 'react';\n\ntype Props = {\n  isShow?: boolean,\n  wrapperRef: any,\n};\nconst ModalEvent = ({ isShow = false, wrapperRef }: Props) => {\n  return (\n    <div\n      className={`modal__event ${isShow ? 'show-modal-event' : ''}`}\n      ref={wrapperRef}\n    >\n      <div className=\"modal__event-title\">이벤트 알림</div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n    </div>\n  );\n};\n\nModalEvent.defaultProps = {\n  isShow: false,\n};\n\nexport default ModalEvent;\n","/* eslint-disable react-hooks/exhaustive-deps */\n// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport useClickOutside from 'customHooks/useClickOutSide';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useDebounce from 'customHooks/useDebounce';\nimport { getCompanySearchMain, getPositionSearchMain, getCardMeasureSearchPosition, getCardMeasureSearchCompany } from 'modules/main/redux';\nimport Search from '../Search';\nimport SelectDropdown from '../Select';\nimport ModalEvent from './ModalEvent';\nimport ModalPopup from '../Modal';\n\ntype Props = {\n  isSearch?: boolean,\n  isSelect?: boolean,\n  eventCount?: number,\n};\n\nconst Header = ({\n  isSearch = false,\n  isSelect = false,\n  eventCount = 0,\n}: Props) => {\n\n  const dispatch = useDispatch();\n  const { listPositions, optionsCompany, optionsPosition, isSpinner } = useSelector(state => state?.main);\n  const [optionDropdown, setOptionDropdown] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const [searchTerm, setSearchTerm] = useState({ label: '', value: '', key: '', id: '' });\n  const [modal, setModal] = useState({ isShow: false, content: '' });\n\n  const wrapperRef = useRef(null);\n  const iconRef = useRef(null);\n\n  const debouncedSearchTerm = useDebounce(searchTerm.label, 500);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      dispatch(getCompanySearchMain({ keyword: debouncedSearchTerm }));\n      dispatch(getPositionSearchMain({ keyword: debouncedSearchTerm }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchTerm])\n\n  // set option dropdown value when listposition != [];\n  useEffect(() => {\n    const indexDefault = listPositions.findIndex((item) => item?.label.includes('본관 남측'));\n    setOptionDropdown(listPositions[indexDefault]);\n  }, [listPositions])\n\n  const searchSubmit = () => {\n    const type = searchTerm?.key;\n    switch (type) {\n      case 'posId':\n        console.log('getposId');\n        dispatch(getCardMeasureSearchPosition({ type: 'summary', pos_id: searchTerm.id }));\n        break;\n      case 'comId':\n        dispatch(getCardMeasureSearchCompany({ type: 'summary', com_id: searchTerm.id }));\n        break;\n      default:\n        setModal({ ...modal, isShow: true, content: '구역명이나 업체명을 정확히 입력해주세요' });\n        break;\n    }\n  }\n\n  // Handle Icon search Click\n  const handleIconClick = () => {\n    searchSubmit();\n  }\n\n  // Handle event press key enter search\n  const handleKeyDownSearch = (e) => {\n    if (e.key === 'Enter') {\n      searchSubmit();\n    }\n  }\n\n  // when input search change set value\n  const handleSearchChange = (e) => {\n    const { value } = e.target;\n    setSearchTerm({ label: value });\n  };\n\n  // handle click outside event\n  useClickOutside(\n    wrapperRef,\n    () => {\n      if (isShow) {\n        setIsShow(false);\n      }\n    },\n    { iconRef }\n  );\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        {isSearch ? (\n          <Search\n            placeholder=\"회사명이나 구역명으로 검색해보세요.\"\n            value={searchTerm.label}\n            onChange={handleSearchChange}\n            setSearchTerm={setSearchTerm}\n            options={[...optionsPosition, ...optionsCompany]}\n            handleIconClick={handleIconClick}\n            handleKeyDown={handleKeyDownSearch}\n            isSpinner={isSpinner}\n          />\n        ) : (\n          ''\n        )}\n        {isSelect ? (\n          <SelectDropdown\n            placeholder=\"List Selects\"\n            listItem={listPositions}\n            onChange={(ops) => {\n              setOptionDropdown(ops);\n            }}\n            option={optionDropdown}\n            disabled={false}\n            isSearchable={false}\n            blurInputOnSelect={false}\n            customClass=\"header__select\"\n          />\n        ) : (\n          ''\n        )}\n      </div>\n      <div className=\"header__right\">\n        <div className=\"header__event\">\n          <img\n            src={images.icon_event}\n            alt=\"Icon Event\"\n            className=\"header__icon\"\n            onClick={() => setIsShow(!isShow)}\n            role=\"presentation\"\n            ref={iconRef}\n          />\n          {eventCount > 0 ? (\n            <span className=\"header__notification\">{eventCount}</span>\n          ) : (\n            ''\n          )}\n        </div>\n\n        <div className=\"header__label-event\">\n          <span className=\"header__label-content\">이벤트발생</span>\n\n          {/* Modal event */}\n\n          <ModalEvent isShow={isShow} wrapperRef={wrapperRef} />\n        </div>\n      </div>\n      <ModalPopup\n        isOpen={modal.isShow}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() =>\n          setModal({\n            ...modal,\n            isShow: false,\n            content: '',\n          })\n        }\n        handleClose={() =>\n          setModal({\n            ...modal,\n            isShow: false,\n            content: '',\n          })\n        }\n        textBtnRight=\"확인\"\n      >\n        {modal.content}\n      </ModalPopup>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  eventCount: 0,\n};\n\nexport default memo < Props > (Header);\n","import IMAGES from 'themes/images';\nimport ROUTERS from './routers';\n\nexport const DASHBOARD = {\n  id: 1,\n  label: '실증단지',\n  icon: IMAGES.iconGraph,\n  to: ROUTERS.ROOT,\n  items: [\n    {\n      id: 1,\n      name: '대시보드',\n      sub: [\n        {\n          id: 1,\n          name: '통합 대시보드',\n          to: ROUTERS.ROOT,\n        },\n        {\n          id: 2,\n          name: '구역 대시보드',\n          to: ROUTERS.DASHBOARD_AREA,\n        },\n        {\n          id: 3,\n          name: '업체 대시보드',\n          to: ROUTERS.DASHBOARD_COMPANY,\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '현황',\n      sub: [\n        {\n          id: 1,\n          name: '발전 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.STATUS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.STATUS_COMPANY_BY_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_AREA,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: '통계',\n      sub: [\n        {\n          id: 1,\n          name: '발전 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_AREA,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nexport const SETUP = {\n  id: 2,\n  label: '기기 관리',\n  icon: IMAGES.setup,\n  items: [\n    { id: 1, name: '계정 관리', to: '/accounts' },\n    { id: 2, name: '기기 관리', to: '/devices' },\n  ],\n};\n\nexport const MOCKUP = {\n  id: 1,\n  label: '실증테스트',\n  icon: IMAGES.mockUp,\n  items: [\n    {\n      id: 1,\n      name: '테스트(목업)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.TEST_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_MOCKUP_STATUS,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_MOCKUP_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '테스트(실증단지)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.SOLAR_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n  itemSub: {\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listNestSub: Array<{\n    id: any,\n    to: string,\n    name: string,\n  }>,\n  isActiveNestSub: boolean,\n  handleClickItemSub: Function,\n  location: {\n    pathname: string,\n  },\n};\n\nconst Submenu = ({\n  itemSub,\n  listNestSub,\n  isActiveNestSub,\n  handleClickItemSub,\n  location,\n}: Props) => {\n  const [nestSubClicking, setNestSubClicking] = useState({});\n\n  const handleClickNestSub = (e, item) => {\n    e.stopPropagation();\n    setNestSubClicking(item);\n  };\n\n  const renderNestedSub =\n    listNestSub &&\n    listNestSub.length > 0 &&\n    listNestSub.map((item) => {\n      const activeNestItem =\n        item.name === nestSubClicking.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <li\n          className=\"item\"\n          onClick={(e) => handleClickNestSub(e, item)}\n          tabIndex={0}\n          role=\"menuitem\"\n          onKeyPress={() => {}}\n          key={item.id}\n        >\n          <Link\n            to={item?.to}\n            className={`item__link item-link-nest-sub ${\n              activeNestItem ? 'active-link' : ''\n            }`}\n          >\n            <p className=\"item__link__label item-link-label-nest-sub\">\n              {item.name}\n            </p>\n          </Link>\n        </li>\n      );\n    });\n\n  const { to, name, sub } = itemSub;\n\n  return (\n    <li\n      className=\"item\"\n      onClick={(e) => handleClickItemSub(e, itemSub, isActiveNestSub)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to}\n        className={`item__link ${\n          isActiveNestSub ? 'active' : ''\n        } item-link-sub ${isActiveNestSub && !sub ? 'active-link' : ''}`}\n      >\n        <p className=\"item__link__label item-link-label-sub\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n\n      <ul className={`menu__listsub ${isActiveNestSub ? 'open' : ''}`}>\n        {renderNestedSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(Submenu);\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { setNestSubClicking } from 'commons/redux';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport Submenu from './Submenu';\n\ntype Props = {\n  item: {\n    id: number,\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listSub: Array<{\n    id: number,\n    name: string,\n    to: string,\n    sub: Array<{}>,\n  }>,\n  handleClickItem: Function,\n  isActive: boolean,\n  location: {\n    pathname: string,\n  },\n};\n\nconst MenuItem = ({\n  item,\n  listSub,\n  handleClickItem,\n  isActive,\n  location,\n}: Props) => {\n  const dispatch = useDispatch();\n\n  const subMenuClicking = useSelector((state) => state.commons.subMenuClicking);\n  const { to, name, sub } = item;\n  const [listNestSub, setListNestSub] = useState(subMenuClicking?.sub);\n  const [activeSub, setActiveSub] = useState(false);\n\n  const handleClickItemSub = (e, itemSub, active) => {\n    e.stopPropagation();\n    setActiveSub(active);\n    dispatch(setNestSubClicking(itemSub));\n    setListNestSub(itemSub.sub);\n    if (itemSub.name === subMenuClicking.name && active) {\n      setNestSubClicking({});\n    }\n  };\n  const renderSub =\n    listSub &&\n    listSub.length > 0 &&\n    listSub.map((itemSub) => {\n      const isActiveNestSub =\n        subMenuClicking.name === itemSub.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <Submenu\n          key={itemSub.id}\n          itemSub={itemSub}\n          nestSub={itemSub.sub}\n          handleClickItemSub={handleClickItemSub}\n          listNestSub={listNestSub}\n          isActiveNestSub={isActiveNestSub}\n          location={location}\n        />\n      );\n    });\n\n  return (\n    <li\n      className=\"item\"\n      onClick={() => handleClickItem(item, isActive)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to || '#'}\n        className={`item__link ${isActive ? 'active' : ''} ${\n          isActive && !sub ? 'active-link' : ''\n        }`}\n      >\n        <p className=\"item__link__label\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n      <ul className={`menu__listsub ${isActive || activeSub ? 'open' : ''}`}>\n        {renderSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(MenuItem);\n","// @flow\n// libs\nimport React, { useState, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DASHBOARD, SETUP, MOCKUP } from 'constants/listMenu';\nimport { setMenuClicking, setNestSubClicking } from 'commons/redux';\nimport IMAGES from 'themes/images';\nimport { Button } from 'commons/components/Button';\nimport MenuItem from './MenuItem';\n\ntype Props = {\n  location: {\n    pathname: string,\n  },\n};\n\nconst Menu = ({ location }: Props) => {\n  const dispatch = useDispatch();\n  const menuClicking = useSelector((state) => state?.commons?.menuClicking);\n  const [listSub, setListSub] = useState(menuClicking?.sub);\n  const handleClickItem = (item, active) => {\n    setListSub(item.sub);\n\n    dispatch(setMenuClicking(item));\n\n    if (item.name === menuClicking.name && active) {\n      dispatch(setMenuClicking({}));\n    }\n    if (item.id !== menuClicking?.id) {\n      dispatch(setNestSubClicking({}));\n    }\n  };\n\n  const renderMenuList = (listMenu) => {\n    return listMenu.items.map((item) => {\n      const isActive =\n        menuClicking.name === item.name || location.pathname.includes(item.to);\n      return (\n        <MenuItem\n          key={item.id}\n          item={item}\n          listSub={listSub}\n          handleClickItem={handleClickItem}\n          menuClicking={menuClicking}\n          isActive={isActive}\n          location={location}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"menu\">\n      <h1 className=\"menu__head\">실증단지</h1>\n      <div className=\"wrapper-menu\">\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={DASHBOARD?.icon} alt=\"menu\" />\n            <span>{DASHBOARD?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(DASHBOARD)}</ul>\n\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={MOCKUP?.icon} alt=\"menu\" />\n            <span>{MOCKUP?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(MOCKUP)}</ul>\n\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={SETUP?.icon} alt=\"menu\" />\n            <span>{SETUP?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(SETUP)}</ul>\n        <div className=\"logout\">\n          <div className=\"name-user\">마스터님</div>\n          <Button customClass=\"btn-logout\">\n            <img src={IMAGES.btn_logout} alt=\"\" />\n            <div>로그아웃</div>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(memo<Props>(Menu));\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useRef } from 'react';\nimport useClickOutside from 'customHooks/useClickOutSide';\n// import Header from '../../components/Header';\nimport Loading from 'commons/components/Loading';\nimport Header from 'commons/components/Header';\n\nimport SidebarMenu from '../Menu';\n\n\ntype Props = {\n  children: React.AbstractComponent<{}>,\n  isSearch?: boolean,\n  isSelect?: boolean,\n  isProcessing?: boolean,\n};\n\nexport const MainLayout = ({\n  children,\n  isSearch = false,\n  isSelect = false,\n  isProcessing = false,\n}: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const refMenu = useRef(null);\n  const iconRef = useRef(null);\n  const mainContent = useRef(null);\n\n  useClickOutside(\n    refMenu,\n    () => {\n      if (isOpen) {\n        setIsOpen(false);\n      }\n    },\n    { iconRef }\n  );\n  let classHeight = '';\n  if (window.innerHeight < 900) {\n    classHeight = 'heightMenu';\n  }\n\n  let showHeader;\n  if (isSearch) showHeader = <Header isSearch />;\n  else if (isSelect) showHeader = <Header isSelect />;\n  else showHeader = <Header />;\n\n  return (\n    <>\n      {isProcessing && <Loading />}\n      <div className={`wrapper-content ${isOpen ? 'open' : ''}`}>\n        <div className=\"wrapper-mobile\">\n          <div\n            className={`d-mobile btn-menu  ${isOpen ? 'show' : ''}`}\n            onClick={() => {\n              setIsOpen(!isOpen);\n            }}\n            tabIndex={0}\n            role=\"menuitem\"\n            onKeyPress={() => {}}\n            ref={iconRef}\n          >\n            <span className=\"icon\" />\n          </div>\n        </div>\n        <div className={`sidebar ${isOpen ? 'show' : ''} ${classHeight}`}>\n          <SidebarMenu innerRef={refMenu} />\n        </div>\n        <div className=\"main-content\" ref={mainContent}>\n          {showHeader}\n          <div className=\"content\">\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMainLayout.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  isProcessing: false,\n};\n\nexport default MainLayout;\n","// @flow\nimport React, { memo } from 'react';\nimport { formatNumber } from 'helpers';\n\ntype Props = {\n  radiance?: number,\n  temperature?: number,\n};\n\nconst VitualData = ({ radiance = 0, temperature = 0 }: Props) => {\n  return (\n    <div className=\"vitual-data main-card\">\n      <div className=\"vitual-data__header main-card__header\">\n        <div className=\"vitual-data__title main-card__title\">기상데이터</div>\n      </div>\n\n      <div className=\"vitual-data__body main-card__body\">\n        <div className=\"vitual-data__item\">\n          <div className=\"vitual-data__group-name\">\n            <p className=\"vitual-data__name\">수평 일사량</p>\n            <p className=\"vitual-data__unit\">kWh/㎡·10초</p>\n          </div>\n          <div className=\"vitual-data__param\">{formatNumber(radiance)}</div>\n        </div>\n\n        <div className=\"vitual-data__item\">\n          <div className=\"vitual-data__group-name\">\n            <p className=\"vitual-data__name\">온도</p>\n            <p className=\"vitual-data__unit\">℃</p>\n          </div>\n          <div className=\"vitual-data__param\">{formatNumber(temperature)}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nVitualData.defaultProps = {\n  radiance: 0,\n  temperature: 0,\n}\n\nexport default memo < Props > (VitualData);\n","import React from 'react';\n\nconst WeeklyElectric = () => {\n  return (\n    <div className=\"weekly-electric main-card\">\n      <div className=\"weekly-electric__header main-card__header\">\n        <div className=\"weekly-electric__title main-card__title\">\n          주간 발전 현황\n        </div>\n        <div className=\"weekly-electric__unit main-card__unit\">kWh</div>\n      </div>\n\n      <div className=\"weekly-electric__body main-card__body\">abc</div>\n    </div>\n  );\n};\n\nexport default WeeklyElectric;\n","// @flow\nimport React from 'react';\nimport { formatNumber } from 'helpers';\n\ntype Props = {\n  name?: string,\n  subName?: string,\n  value?: number,\n  unit?: string,\n};\n\nconst InfoRealityItem = ({\n  name = '',\n  subName = '',\n  value = 0,\n  unit = '',\n}: Props) => {\n  return (\n    <div className=\"info-reality__item\">\n      <div className=\"info-reality__group-name\">\n        <p className=\"info-reality__name\">{name}</p>\n        <span className=\"info-reality__sub-name\">{subName}</span>\n      </div>\n      <div className=\"info-reality__group-value\">\n        <p className=\"info-reality__value\">{formatNumber(value)}</p>\n        <span className=\"info-reality__unit\">{unit}</span>\n      </div>\n    </div>\n  );\n};\n\nInfoRealityItem.defaultProps = {\n  name: '',\n  subName: '',\n  value: 0,\n  unit: '',\n};\n\nexport default InfoRealityItem;\n","// @flow\nimport React, { memo } from 'react';\nimport InfoRealityItem from './InfoRealityItem';\n\ntype Props = {\n  outputVoltage?: number,\n  outputCurrent?: number,\n  electricRealtime?: number,\n  ratePower?: number,\n};\n\nconst InfoReality = ({ outputVoltage = 0, outputCurrent = 0, electricRealtime = 0, ratePower = 0 }: Props) => {\n  return (\n    <div className=\"info-reality main-card\">\n      <div className=\"info-reality__header main-card__header\">\n        <div className=\"info-reality__title main-card__title\">\n          실시간 계측 정보\n        </div>\n      </div>\n\n      <div className=\"info-reality__body main-card__body\">\n        <InfoRealityItem\n          name='출력전압'\n          subName='v2'\n          value={outputVoltage}\n          unit='V'\n        />\n        <InfoRealityItem\n          name='출력전류'\n          subName='l2'\n          value={outputCurrent}\n          unit='A'\n        />\n        <InfoRealityItem\n          name='전체 실시간 발전량'\n          subName='p'\n          value={electricRealtime}\n          unit='V'\n        />\n        <InfoRealityItem\n          name='전체 모듈 성능비'\n          subName=''\n          value={ratePower}\n          unit='%'\n        />\n      </div>\n    </div>\n  );\n};\n\nInfoReality.defaultProps = {\n  outputVoltage: 0,\n  outputCurrent: 0,\n  electricRealtime: 0,\n  ratePower: 0,\n}\n\nexport default memo < Props > (InfoReality);\n","// @flow\nimport React, { memo } from 'react';\nimport { formatNumber } from 'helpers';\n\ntype Props = {\n  icon?: any,\n  name?: string,\n  value?: number,\n  customClass?: string,\n};\n\nconst TotalPowerItem = ({\n  icon = '',\n  name = '',\n  value = 0,\n  customClass = '',\n}: Props) => {\n  return (\n    <div className={`total-power__item ${customClass}`}>\n      <div className=\"total-power__content-header\">\n        <img src={icon} alt=\"\" className=\"total-power__icon\" />\n        <p className=\"total-power__item-name\">{name}</p>\n      </div>\n      <p className=\"total-power__item-value\">{formatNumber(value)}</p>\n    </div>\n  );\n};\n\nTotalPowerItem.defaultProps = {\n  name: '',\n  value: 0,\n  customClass: '',\n  icon: '',\n};\n\nexport default memo < Props > (TotalPowerItem);\n","// @flow\nimport React, { memo } from 'react';\nimport images from 'themes/images';\nimport TotalPowerItem from './TotalPowerItem';\n\ntype Props = {\n  amountElectricDay?: number,\n  amountElectricMonth?: number,\n  cumulativeElectric?: number\n};\n\nexport const TotalPower = ({ amountElectricDay = 0, amountElectricMonth = 0, cumulativeElectric = 0, }: Props) => {\n  return (\n    <div className=\"total-power main-card\">\n      <div className=\"total-power__header main-card__header\">\n        <div className=\"total-power__title main-card__title\">총 발전 현황</div>\n        <div className=\"total-power__unit main-card__unit\">kWh</div>\n      </div>\n\n      <div className=\"total-power__body main-card__body\">\n        <TotalPowerItem\n          icon={images.icon_day}\n          name='금일 발전량'\n          value={amountElectricDay}\n          customClass=\"bg-color-day\"\n        />\n        <TotalPowerItem\n          icon={images.icon_month}\n          name='금월 발전량'\n          value={amountElectricMonth}\n          customClass=\"bg-color-month\"\n        />\n        <TotalPowerItem\n          icon={images.icon_plus}\n          name='누적 발전량'\n          value={cumulativeElectric}\n          customClass=\"bg-color-plus\"\n        />\n      </div>\n    </div>\n  );\n};\n\nTotalPower.defaultProps = {\n  amountElectricDay: 0,\n  amountElectricMonth: 0,\n  cumulativeElectric: 0,\n}\n\nexport default memo < Props > (TotalPower);\n"],"sourceRoot":""}