{"version":3,"sources":["commons/components/TitleHeader/titleSub.js","commons/components/Select/index.js","commons/components/TitleHeader/index.js","commons/components/Modal/index.js","constants/optionCheckbox.js","commons/components/Radio/index.js","commons/components/Input/InputPhone.js","modules/accounts/components/management/DeviceMaintain.js","modules/accounts/components/management/FormEdit.js","modules/accounts/components/management/EditAccount.js"],"names":["TitleSubHeader","title","onClick","className","id","titleLight","onKeyPress","role","tabIndex","src","images","icon_arrow","alt","defaultProps","memo","SelectDropdown","placeholder","errorMsg","label","disabled","isSearchable","onBlur","onChange","innerRef","option","noOptionsMessage","listOptionString","customClass","request","noLabel","listItem","useState","isActive","setIsActive","length","components","DropdownIndicator","props","selectProps","menuIsOpen","ref","value","options","map","item","name","blurInputOnSelect","isDisabled","TitleHeader","descSub","icon_title_header","ModalPopup","children","animation","isOpen","size","handleClose","isShowIconClose","isShowHeader","isShowFooter","isShowTwoBtn","customClassButton","classNameBtnLeft","textBtnLeft","classNameBtnRight","textBtnRight","handleSubmit","isDisabledButton","handleCloseIcon","onHide","show","onKeyUp","icon_close","Body","Footer","type","DeviceManagementOptionSeach","key","registerDeviceOptions","accountOptions","operator_event_filter","Radio","labelRadio","isChecked","htmlFor","checked","e","InputPhone","readOnly","onBlurWrapper","onFocusWrapper","onClickWrapper","customClassName","customClassWrap","customClassLabel","onFocus","onPaste","variant","pattern","maxLength","autocomplete","autoFocus","autoCapitalize","autoComplete","listCompany","posOptionList","itemDevice","handleChange","handleRemove","dispatch","useDispatch","deviceList","useSelector","state","device","company","companySelected","setCompanySelected","position","positionSelected","setPositionSelected","useEffect","getListDevice","com_id","pos_id","Select","icon_next","moduleName","inverter","Button","accountDetail","history","companyOptions","errors","account","currentOption","setCurrentOption","isUpdateFailed","setIsUpdateFailed","isCancel","setIsCancel","devices","setDevices","phone","password","passConfirm","inputValue","setInputValue","onChangeOption","target","handleInputChange","getListCompany","getListPosition","handleSelectChange","listDeviceUpdate","renderRadioList","slice","handleRemoveDevice","devicesUpdate","filter","renderListDeviceMaintain","listInverter","deviceFormat","com_name","ds_name","pos_name","errorsMessage","Object","values","index","push","ROUTERS","ACCOUNT_MANAGEMENT","numericOnly","delimiters","blocks","isNumberKey","inputMode","email","username","initDevice","Math","random","idInverterList","updateAccount","Modal","resetAccountType","EditAccount","match","isProcessing","params","getAccountList","isDetail","Loading","FormEdit"],"mappings":"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","file":"static/js/26.e87f7228.chunk.js","sourcesContent":["// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  titleLight?: string,\r\n};\r\n\r\nexport const TitleSubHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  titleLight = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title-sub ${className}`}>\r\n      <div\r\n        className=\"wrap-title-sub__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_arrow} alt=\"\" />\r\n        <div className=\"wrap-title-sub__header__name\">\r\n          {title}\r\n          <span>{titleLight}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleSubHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  titleLight: '',\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(TitleSubHeader);\r\n","// @flow\r\nimport React, { useState } from 'react';\r\nimport Select, { components } from 'react-select';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  errorMsg?: string,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  isSearchable?: boolean,\r\n  onBlur?: Function,\r\n  onChange?: Function,\r\n  listOptionString?: Array<{ id: number, name: any }>,\r\n  listItem?: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  innerRef?: any,\r\n  option?: Object,\r\n  noOptionsMessage?: Function,\r\n  customClass?: string,\r\n  request?: boolean,\r\n  noLabel?: boolean,\r\n};\r\nconst SelectDropdown = ({\r\n  placeholder = '',\r\n  errorMsg = '',\r\n  label = '',\r\n  disabled = false,\r\n  isSearchable = false,\r\n  onBlur = null,\r\n  onChange = () => {},\r\n  innerRef = null,\r\n  option = {},\r\n  noOptionsMessage = () => {},\r\n  listOptionString = [],\r\n  customClass = '',\r\n  request = false,\r\n  noLabel = false,\r\n  listItem,\r\n}: Props) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const DropdownIndicator = (props) => {\r\n    setIsActive(props?.selectProps?.menuIsOpen);\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <div className=\"d-none\" />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      className={`customer-select ${customClass.length > 0 ? customClass : ''}`}\r\n    >\r\n      {!!label && (\r\n        <p className=\"input__label\">\r\n          {label}\r\n          {request && <span className=\"request\">*</span>}\r\n        </p>\r\n      )}\r\n      <div className={`input__box ${isActive ? 'down' : ''}`}>\r\n        <Select\r\n          placeholder={placeholder}\r\n          components={{ DropdownIndicator }}\r\n          ref={innerRef}\r\n          value={option || null}\r\n          onChange={onChange}\r\n          noOptionsMessage={noOptionsMessage}\r\n          // menuIsOpen\r\n          options={\r\n            noLabel\r\n              ? listOptionString.map((item) => ({\r\n                  id: item.id,\r\n                  value: item.name,\r\n                  label: item.name,\r\n                }))\r\n              : listItem\r\n          }\r\n          blurInputOnSelect={onBlur}\r\n          isDisabled={disabled}\r\n          isSearchable={isSearchable}\r\n        />\r\n      </div>\r\n      {errorMsg && <p className=\"error-msg\">{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\nSelectDropdown.defaultProps = {\r\n  placeholder: '',\r\n  errorMsg: '',\r\n  label: '',\r\n  disabled: false,\r\n  isSearchable: false,\r\n  // icon: '',\r\n  noLabel: false,\r\n  onBlur: null,\r\n  onChange: () => {},\r\n  innerRef: null,\r\n  listItem: [],\r\n  listOptionString: [],\r\n  option: {},\r\n  noOptionsMessage: () => {},\r\n  customClass: '',\r\n  request: false,\r\n};\r\nexport default SelectDropdown;\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  descSub?: string,\r\n};\r\n\r\nexport const TitleHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  descSub = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title ${className}`}>\r\n      <div\r\n        className=\"wrap-title__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_title_header} alt=\"\" />\r\n        <div className=\"wrap-title__header__name\">\r\n          {title}\r\n          <span>{descSub}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  id: '',\r\n  descSub: '',\r\n};\r\n\r\nexport default memo<Props>(TitleHeader);\r\n","/* eslint-disable no-nested-ternary */\r\n// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Button from 'commons/components/Button';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title?: string,\r\n  children: any,\r\n  animation?: boolean,\r\n  isOpen: boolean,\r\n  size?: string,\r\n  handleClose: Function,\r\n  customClass?: string,\r\n  isShowIconClose?: boolean,\r\n  isShowHeader?: boolean,\r\n  isShowFooter?: boolean,\r\n  isShowTwoBtn?: boolean,\r\n  customClassButton?: string,\r\n  classNameBtnLeft?: string,\r\n  textBtnLeft?: string,\r\n  classNameBtnRight?: string,\r\n  textBtnRight?: string,\r\n  handleSubmit?: Function,\r\n  isDisabledButton?: boolean,\r\n  handleCloseIcon?: Function,\r\n};\r\n\r\nexport const ModalPopup = ({\r\n  title = '',\r\n  children,\r\n  animation = false,\r\n  isOpen,\r\n  size,\r\n  handleClose,\r\n  customClass,\r\n  isShowIconClose,\r\n  isShowHeader,\r\n  isShowFooter,\r\n  isShowTwoBtn,\r\n  customClassButton = '',\r\n  classNameBtnLeft = '',\r\n  textBtnLeft = '',\r\n  classNameBtnRight = '',\r\n  textBtnRight = 'OK',\r\n  handleSubmit = () => {},\r\n  isDisabledButton,\r\n  handleCloseIcon = () => {},\r\n}: Props) => (\r\n  <Modal\r\n    animation={animation}\r\n    onHide={() => {\r\n      return true;\r\n    }}\r\n    show={isOpen}\r\n    size={size}\r\n    className={customClass}\r\n  >\r\n    {isShowIconClose && (\r\n      <div\r\n        className=\"modal-content__iconClose\"\r\n        onClick={handleCloseIcon}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onKeyUp={handleCloseIcon}\r\n      >\r\n        <img src={images.icon_close} alt=\"\" />\r\n      </div>\r\n    )}\r\n\r\n    {isShowHeader && <h3 className=\"modal-title\">{title}</h3>}\r\n\r\n    <Modal.Body>\r\n      {!isShowHeader ? (\r\n        <div className=\"modal-body__no-header\">{children}</div>\r\n      ) : (\r\n        <div className=\"modal-body__has-header\">{children}</div>\r\n      )}\r\n    </Modal.Body>\r\n    {isShowFooter && (\r\n      <Modal.Footer>\r\n        {!isShowTwoBtn ? (\r\n          <Button\r\n            type=\"button\"\r\n            customClass={customClassButton}\r\n            onClick={handleClose}\r\n          >\r\n            {textBtnRight}\r\n          </Button>\r\n        ) : (\r\n          <div className=\"group-button\">\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnLeft}`}\r\n              onClick={handleSubmit}\r\n              isDisabled={isDisabledButton}\r\n            >\r\n              {textBtnLeft}\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnRight}`}\r\n              onClick={handleClose}\r\n            >\r\n              {textBtnRight}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Modal.Footer>\r\n    )}\r\n  </Modal>\r\n);\r\n\r\nModalPopup.defaultProps = {\r\n  title: '',\r\n  animation: false,\r\n  size: '',\r\n  customClass: '',\r\n  isShowIconClose: false,\r\n  isShowHeader: false,\r\n  isShowFooter: false,\r\n  isShowTwoBtn: false,\r\n  customClassButton: '',\r\n  classNameBtnLeft: '',\r\n  textBtnLeft: '',\r\n  classNameBtnRight: '',\r\n  textBtnRight: 'OK',\r\n  handleSubmit: () => {},\r\n  isDisabledButton: false,\r\n  handleCloseIcon: () => {},\r\n};\r\nexport default memo<Props>(ModalPopup);\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const DeviceManagementOptionSeach = [\r\n  {\r\n    name: 'all',\r\n    key: 'all',\r\n    label: '전체',\r\n  },\r\n  {\r\n    name: 'company',\r\n    key: 'com_id',\r\n    label: '업체',\r\n  },\r\n  {\r\n    name: 'position',\r\n    key: 'pos_id',\r\n    label: '설치위치',\r\n  },\r\n];\r\n\r\nexport const registerDeviceOptions = [\r\n  {\r\n    name: 'solar-monitoring',\r\n    key: '0',\r\n    label: '실증단지',\r\n  },\r\n  {\r\n    name: 'test-solar-monitoring',\r\n    key: '2',\r\n    label: '테스트(실증단지)',\r\n  },\r\n  {\r\n    name: 'test-mockup',\r\n    key: '3',\r\n    label: '테스트(목업)',\r\n  },\r\n];\r\n\r\nexport const accountOptions = [\r\n  {\r\n    name: 'all',\r\n    key: 'all',\r\n    label: '전체',\r\n  },\r\n  {\r\n    name: 'admin',\r\n    key: 'admin',\r\n    label: '최고관리자',\r\n  },\r\n  {\r\n    name: 'company',\r\n    key: 'company',\r\n    label: '업체',\r\n  },\r\n  {\r\n    name: 'monitoring',\r\n    key: 'monitoring',\r\n    label: '모니터링',\r\n  },\r\n];\r\n\r\nexport const operator_event_filter = [\r\n  {\r\n    name: '측정 문제',\r\n    key: 0,\r\n    label: '측정 문제',\r\n  },\r\n  {\r\n    name: '보수 이력',\r\n    key: 1,\r\n    label: '보수 이력',\r\n  },\r\n  {\r\n    name: '설비 이력',\r\n    key: 2,\r\n    label: '설비 이력',\r\n  },\r\n];\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  name?: string,\r\n  onChange: Function,\r\n  disabled?: boolean,\r\n  labelRadio: string,\r\n  isChecked: boolean,\r\n  id?: string,\r\n};\r\n\r\nexport const Radio = ({\r\n  labelRadio,\r\n  name = '',\r\n  isChecked,\r\n  onChange,\r\n  id = '',\r\n  disabled = false,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"wrap-radio\">\r\n      <label className=\"custom-radio d-flex\" htmlFor={id}>\r\n        <input\r\n          type=\"radio\"\r\n          checked={`${isChecked ? 'checked' : ''}`}\r\n          name={name}\r\n          onChange={(e) => onChange(e)}\r\n          id={id}\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"checkmark\" />\r\n        <span className=\"label\">{labelRadio}</span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadio.defaultProps = {\r\n  name: '',\r\n  disabled: false,\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(Radio);\r\n","// @flow\r\n\r\nimport React, { memo } from 'react';\r\nimport Cleave from 'cleave.js/react';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  value?: string | number | any,\r\n  errorMsg?: any,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  type?: string,\r\n  onBlur?: Function,\r\n  onBlurWrapper?: Function,\r\n  onFocusWrapper?: Function,\r\n  onClickWrapper?: Function,\r\n  onChange?: Function,\r\n  onFocus?: Function,\r\n  onKeyPress?: Function,\r\n  onPaste?: Function,\r\n  readOnly?: boolean,\r\n  variant?: string,\r\n  customClassName?: string,\r\n  customClassLabel?: string,\r\n  customClassWrap?: string,\r\n  name?: string,\r\n  request?: boolean,\r\n  innerRef?: any,\r\n  customClass?: string,\r\n  innerRef?: any,\r\n  options: Object,\r\n  maxLength?: string,\r\n  autocomplete?: string,\r\n  autoFocus?: boolean,\r\n  pattern?: string,\r\n};\r\n\r\nconst InputPhone = ({\r\n  placeholder = '',\r\n  value = '',\r\n  errorMsg = '',\r\n  label = '',\r\n  disabled = false,\r\n  readOnly = false,\r\n  type = 'text',\r\n  onBlur = () => {},\r\n  onBlurWrapper = () => {},\r\n  onFocusWrapper = () => {},\r\n  onClickWrapper = () => {},\r\n  onChange = () => {},\r\n  customClassName = null,\r\n  customClassWrap = null,\r\n  customClassLabel = null,\r\n  onFocus = () => {},\r\n  onKeyPress = () => {},\r\n  onPaste = () => {},\r\n  variant = 'outline',\r\n  name = '',\r\n  request = false,\r\n  customClass = '',\r\n  innerRef = null,\r\n  pattern = '',\r\n  options,\r\n  maxLength = '',\r\n  autocomplete = '',\r\n  autoFocus,\r\n}: Props) => {\r\n  return (\r\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\r\n    <div\r\n      className={`input__wrapper ${\r\n        variant !== 'outline' ? ` input__wrapper--${variant}` : ''\r\n      }`}\r\n      onBlur={(e) => onBlurWrapper(e)}\r\n      onFocus={(e) => onFocusWrapper(e)}\r\n      onClick={(e) => onClickWrapper(e)}\r\n      onKeyUp={() => {}}\r\n    >\r\n      {!!label && (\r\n        <p className={`${customClassLabel} input__label`}>\r\n          {label}\r\n          {request && <span className=\"request\">*</span>}\r\n        </p>\r\n      )}\r\n      <div className={`input__box ${customClassWrap}`}>\r\n        <Cleave\r\n          placeholder={placeholder}\r\n          options={options}\r\n          type={type}\r\n          value={value}\r\n          disabled={disabled}\r\n          className={`input-change ${\r\n            customClass.length > 0 ? customClass : ''\r\n          } ${\r\n            variant !== 'outline' ? `input--${variant}` : ''\r\n          } ${customClassName} ${!value ? 'no-value' : ''}`}\r\n          ref={innerRef}\r\n          onPaste={onPaste}\r\n          onKeyPress={onKeyPress}\r\n          readOnly={readOnly}\r\n          onBlur={(e) => onBlur(e)}\r\n          onFocus={(e) => onFocus(e)}\r\n          onChange={(e) => onChange(e)}\r\n          autoCapitalize=\"none\"\r\n          name={name}\r\n          maxLength={maxLength}\r\n          pattern={pattern}\r\n          autoComplete={autocomplete}\r\n          // eslint-disable-next-line jsx-a11y/no-autofocus\r\n          autoFocus={autoFocus}\r\n        />\r\n      </div>\r\n      {errorMsg && <p className=\"error-msg\">{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInputPhone.defaultProps = {\r\n  placeholder: '',\r\n  value: '',\r\n  errorMsg: '',\r\n  label: '',\r\n  disabled: false,\r\n  readOnly: false,\r\n  type: 'text',\r\n  onBlur: () => {},\r\n  onBlurWrapper: () => {},\r\n  onFocusWrapper: () => {},\r\n  onClickWrapper: () => {},\r\n  onFocus: () => {},\r\n  onChange: () => {},\r\n  onKeyPress: () => {},\r\n  onPaste: () => {},\r\n  maxLength: '',\r\n  variant: 'outline',\r\n  customClassName: '',\r\n  customClassLabel: '',\r\n  customClassWrap: '',\r\n  name: '',\r\n  request: false,\r\n  innerRef: null,\r\n  customClass: '',\r\n  pattern: '',\r\n  autocomplete: '',\r\n  autoFocus: false,\r\n};\r\n\r\nexport default memo<Props>(InputPhone);\r\n","// @flow\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, memo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SelectDropdown from 'commons/components/Select';\r\nimport images from 'themes/images';\r\nimport Button from 'commons/components/Button';\r\nimport { getListDevice } from '../../../device/redux';\r\n\r\ntype Props = {\r\n  listCompany: {\r\n    value: number,\r\n    label: string,\r\n  },\r\n  posOptionList: {\r\n    value: number,\r\n    label: string,\r\n  },\r\n  itemDevice: {\r\n    id: number,\r\n    company: {\r\n      value: number,\r\n      label: string,\r\n    },\r\n    position: {\r\n      value: number,\r\n      label: string,\r\n    },\r\n    inverter: {\r\n      value: number,\r\n      label: string,\r\n    },\r\n  },\r\n  handleChange: Function,\r\n  handleRemove: Function,\r\n};\r\nconst DeviceMaintain = ({\r\n  listCompany,\r\n  posOptionList,\r\n  itemDevice,\r\n  handleChange,\r\n  handleRemove,\r\n}: Props) => {\r\n  const dispatch = useDispatch();\r\n  const deviceList = useSelector((state) => state?.device?.deviceList);\r\n\r\n  const [companySelected, setCompanySelected] = useState(itemDevice?.company);\r\n  const [positionSelected, setPositionSelected] = useState(\r\n    itemDevice?.position\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getListDevice({\r\n        com_id: companySelected?.value,\r\n        pos_id: positionSelected?.value,\r\n      })\r\n    );\r\n  }, [companySelected, positionSelected]);\r\n\r\n  return (\r\n    <div className=\"select-group d-flex\">\r\n      <div className=\"group-item d-flex\">\r\n        <SelectDropdown\r\n          placeholder=\"업체 선택\"\r\n          listItem={listCompany}\r\n          option={itemDevice?.company || null}\r\n          noOptionsMessage={() => '옵션 없음'}\r\n          className=\"cus-select\"\r\n          onChange={(option) => {\r\n            handleChange(option, 'company', itemDevice.id);\r\n            setCompanySelected(option);\r\n          }}\r\n        />\r\n        <img src={images.icon_next} alt=\"\" className=\"mx-2\" />\r\n      </div>\r\n      <div className=\"group-item d-flex\">\r\n        <SelectDropdown\r\n          placeholder=\"구역 선택\"\r\n          listItem={posOptionList}\r\n          noOptionsMessage={() => '옵션 없음'}\r\n          option={itemDevice?.position || null}\r\n          className=\"cus-select\"\r\n          onChange={(option) => {\r\n            setPositionSelected(option);\r\n            handleChange(option, 'position', itemDevice.id);\r\n          }}\r\n        />\r\n        <img src={images.icon_next} alt=\"\" className=\"mx-2\" />\r\n      </div>\r\n      <div className=\"group-item d-flex\">\r\n        <SelectDropdown\r\n          placeholder=\"인버터 선택\"\r\n          listItem={\r\n            deviceList &&\r\n            deviceList.map((device) => ({\r\n              value: device?.id,\r\n              label: device?.moduleName,\r\n            }))\r\n          }\r\n          option={itemDevice?.inverter || null}\r\n          noOptionsMessage={() => '옵션 없음'}\r\n          onChange={(option) => handleChange(option, 'inverter', itemDevice.id)}\r\n          className=\"cus-select\"\r\n        />\r\n      </div>\r\n      <Button\r\n        customClass=\"custom-btn\"\r\n        onClick={() => handleRemove(itemDevice.id)}\r\n      >\r\n        삭제\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(DeviceMaintain);\r\n","// @flow\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, memo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { accountOptions } from 'constants/optionCheckbox';\r\nimport Radio from 'commons/components/Radio';\r\nimport Button from 'commons/components/Button';\r\nimport { isNumberKey } from 'helpers/';\r\nimport InputPhone from 'commons/components/Input/InputPhone';\r\nimport ROUTERS from 'constants/routers';\r\nimport ModalPopup from 'commons/components/Modal';\r\nimport { getListCompany, getListPosition } from '../../../device/redux';\r\nimport { updateAccount, resetAccountType } from '../../redux';\r\nimport DeviceMaintain from './DeviceMaintain';\r\n\r\ntype Props = {\r\n  accountDetail: {\r\n    name: string,\r\n    phone: string,\r\n    devices: [],\r\n    email: string,\r\n    username: string,\r\n    id: number,\r\n  },\r\n  history: {\r\n    push: Function,\r\n  },\r\n};\r\n\r\nconst FormDetail = ({ accountDetail, history }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const posOptionList = useSelector((state) => state?.device?.posOptionList);\r\n  const companyOptions = useSelector((state) => state?.device?.companyOptions);\r\n  const errors = useSelector((state) => state?.account?.errors);\r\n  const type = useSelector((state) => state?.account?.type);\r\n\r\n  const [currentOption, setCurrentOption] = useState('admin');\r\n  const [isUpdateFailed, setIsUpdateFailed] = useState(false);\r\n  const [isCancel, setIsCancel] = useState(false);\r\n\r\n  const [devices, setDevices] = useState([]);\r\n\r\n  const [inputValue, setInputValue] = useState({\r\n    name: accountDetail?.name,\r\n    phone: accountDetail?.phone,\r\n    password: '',\r\n    passConfirm: '',\r\n  });\r\n  // handle when radio change\r\n  const onChangeOption = (e) => {\r\n    const { name } = e.target;\r\n    setCurrentOption(name);\r\n  };\r\n\r\n  // handle input change\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputValue({ ...inputValue, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getListCompany());\r\n    dispatch(getListPosition());\r\n  }, []);\r\n\r\n  // handle select change\r\n  const handleSelectChange = (option, name, id) => {\r\n    const listDeviceUpdate =\r\n      devices &&\r\n      devices.map((item) =>\r\n        item.id === id\r\n          ? { ...item, [name]: { value: option.value, label: option.label } }\r\n          : item\r\n      );\r\n\r\n    setDevices(listDeviceUpdate);\r\n  };\r\n\r\n  // render list radio\r\n  const renderRadioList = accountOptions\r\n    .slice(1, 4)\r\n    .map((item) => (\r\n      <Radio\r\n        id={item.key}\r\n        name={item.key}\r\n        label={item.label}\r\n        onChange={onChangeOption}\r\n        isChecked={currentOption === item.key}\r\n        labelRadio={item.label}\r\n      />\r\n    ));\r\n\r\n  const handleAddNewDevice = () => {\r\n    const initDevice = {\r\n      company: null,\r\n\r\n      inverter: null,\r\n      position: null,\r\n      id: Math.random(),\r\n    };\r\n\r\n    setDevices([...devices, initDevice]);\r\n  };\r\n\r\n  const handleRemoveDevice = (id) => {\r\n    const devicesUpdate = devices.filter((item) => item.id !== id);\r\n    setDevices(devicesUpdate);\r\n  };\r\n\r\n  const renderListDeviceMaintain =\r\n    devices &&\r\n    devices.map((item) => {\r\n      return (\r\n        <DeviceMaintain\r\n          posOptionList={posOptionList}\r\n          handleChange={handleSelectChange}\r\n          listCompany={companyOptions}\r\n          listInverter={devices}\r\n          itemDevice={item}\r\n          handleRemove={handleRemoveDevice}\r\n        />\r\n      );\r\n    });\r\n\r\n  const handleSubmit = () => {\r\n    const idInverterList =\r\n      devices && devices.map((item) => item?.inverter?.value);\r\n    dispatch(\r\n      updateAccount({\r\n        ...inputValue,\r\n        currentOption,\r\n        idInverterList,\r\n        id: accountDetail?.id,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInputValue({ ...inputValue, name: accountDetail?.name });\r\n    const deviceFormat =\r\n      accountDetail &&\r\n      accountDetail.devices &&\r\n      accountDetail.devices.map((item) => ({\r\n        company: {\r\n          value: item?.company?.id,\r\n          label: item?.company?.com_name,\r\n        },\r\n\r\n        inverter: {\r\n          value: item?.id,\r\n          label: item?.ds_name,\r\n        },\r\n        position: {\r\n          value: item?.position?.id,\r\n          label: item?.position?.pos_name,\r\n        },\r\n        id: item.id,\r\n      }));\r\n    setDevices(deviceFormat);\r\n  }, [accountDetail]);\r\n\r\n  const errorsMessage =\r\n    errors &&\r\n    Object.values(errors).map((item, index) => {\r\n      return (\r\n        <ul className=\"error-list\" key={index}>\r\n          <li>{item && item[0]}</li>\r\n        </ul>\r\n      );\r\n    });\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case 'accounts/updateAccountFailed':\r\n        setIsUpdateFailed(true);\r\n        break;\r\n      case 'accounts/updateAccountSuccess':\r\n        history.push(ROUTERS.ACCOUNT_MANAGEMENT);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [type]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"table\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">권한</div>\r\n          <div className=\"col-4\">\r\n            <div className=\"wrapper-radio\">{renderRadioList}</div>\r\n          </div>\r\n          <div className=\"col-2\">전화번호</div>\r\n          <div className=\"col-4\">\r\n            <InputPhone\r\n              className=\"input-field\"\r\n              value={inputValue?.phone}\r\n              name=\"phone\"\r\n              options={{\r\n                numericOnly: true,\r\n                delimiters: ['-', '-'],\r\n                blocks: [3, 4, 4],\r\n              }}\r\n              onChange={(e) => handleInputChange(e)}\r\n              pattern=\"[0-9]*\"\r\n              onKeyPress={(e) => isNumberKey(e)}\r\n              inputMode=\"numeric\"\r\n              customClass=\"custom-input\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2 disable\">이메일</div>\r\n          <div className=\"col-4 disable\">\r\n            <div className=\"d-flex align-items-center h-100\">\r\n              {accountDetail?.email}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">비밀번호</div>\r\n          <div className=\"col-4\">\r\n            <input\r\n              className=\"input-field\"\r\n              value={inputValue?.password}\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={(e) => handleInputChange(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2 disable\">권한</div>\r\n          <div className=\"col-4 disable\">\r\n            <div className=\"d-flex align-items-center h-100\">\r\n              {accountDetail?.username}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">비밀번호 확인</div>\r\n          <div className=\"col-4\">\r\n            <input\r\n              className=\"input-field\"\r\n              value={inputValue?.passConfirm}\r\n              name=\"passConfirm\"\r\n              type=\"password\"\r\n              onChange={(e) => handleInputChange(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">담당자</div>\r\n          <div className=\"col-4 d-block mt-2\">\r\n            <input\r\n              className=\"input-field\"\r\n              value={inputValue?.name}\r\n              name=\"name\"\r\n              onChange={(e) => handleInputChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"col-2\">관리 기기</div>\r\n          <div className=\"col-4\">\r\n            <div>\r\n              {renderListDeviceMaintain}\r\n              <Button\r\n                onClick={handleAddNewDevice}\r\n                customClass=\"btn-add-device mb-2\"\r\n              >\r\n                추가\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"account__btn-group\">\r\n          <Button customClass=\"btn-modify\" onClick={handleSubmit}>\r\n            수정\r\n          </Button>\r\n          <Button\r\n            customClass=\"btn-cancel\"\r\n            onClick={() => {\r\n              setIsCancel(true);\r\n            }}\r\n          >\r\n            목록\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <ModalPopup\r\n        isOpen={isCancel}\r\n        isShowHeader\r\n        title=\"알림\"\r\n        isShowIconClose\r\n        isShowFooter\r\n        handleCloseIcon={() => {\r\n          setIsCancel(false);\r\n        }}\r\n        handleClose={() => {\r\n          setIsCancel(false);\r\n        }}\r\n        textBtnLeft=\"확인\"\r\n        textBtnRight=\"취소\"\r\n        isShowTwoBtn\r\n        customClassButton=\"btn-custom\"\r\n        handleSubmit={() => {\r\n          history.push(ROUTERS.ACCOUNT_MANAGEMENT);\r\n        }}\r\n      >\r\n        취소 시 수정 내역은 전부 사라집니다. 그래도 취소하시겠습니까?.\r\n      </ModalPopup>\r\n      <ModalPopup\r\n        isOpen={isUpdateFailed}\r\n        isShowHeader\r\n        title=\"Error\"\r\n        isShowIconClose\r\n        isShowFooter\r\n        handleCloseIcon={() => {\r\n          setIsUpdateFailed(false);\r\n          dispatch(resetAccountType());\r\n        }}\r\n        handleClose={() => {\r\n          setIsUpdateFailed(false);\r\n          dispatch(resetAccountType());\r\n        }}\r\n        textBtnLeft=\"OK\"\r\n        customClassButton=\"btn-custom\"\r\n      >\r\n        {errorsMessage}\r\n      </ModalPopup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(FormDetail);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import IMAGES from 'themes/images';\r\nimport TitleSubHeader from 'commons/components/TitleHeader/titleSub';\r\nimport TitleHeader from 'commons/components/TitleHeader';\r\nimport FormEdit from './FormEdit';\r\nimport { getAccountList } from '../../redux';\r\nimport Loading from 'commons/components/Loading';\r\n\r\ntype Props = {\r\n  match: {\r\n    params: {\r\n      id: any,\r\n    },\r\n  },\r\n  history: {\r\n    push: Function,\r\n  },\r\n};\r\nconst EditAccount = ({ match, history }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const accountDetail = useSelector((state) => state?.account?.accountDetail);\r\n  const isProcessing = useSelector((state) => state?.account?.isProcessing);\r\n\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    dispatch(getAccountList({ id, isDetail: true }));\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {isProcessing && <Loading />}\r\n      <div className=\"account\">\r\n        <TitleHeader\r\n          title=\"관리자 계정 확인\"\r\n          descSub=\"관리자 계정 정보를 확인하실 수 있습니다.\"\r\n        />\r\n        <TitleSubHeader title=\"계정 정보\" />\r\n\r\n        <FormEdit\r\n          history={history}\r\n          accountDetail={accountDetail}\r\n          // deviceList={accountDetail && accountDetail.devices}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditAccount;\r\n"],"sourceRoot":""}