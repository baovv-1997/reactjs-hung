{"version":3,"sources":["commons/components/TitleHeader/titleSub.js","commons/components/Select/index.js","commons/components/TitleHeader/index.js","commons/components/Modal/index.js","commons/components/Radio/index.js","constants/regexs.js","constants/errorMsg.js","helpers/validator.js","commons/components/Event/Register/index.js"],"names":["TitleSubHeader","title","onClick","className","id","titleLight","onKeyPress","role","tabIndex","src","images","icon_arrow","alt","defaultProps","memo","SelectDropdown","placeholder","errorMsg","label","disabled","isSearchable","onBlur","onChange","innerRef","option","noOptionsMessage","listOptionString","customClass","request","noLabel","listItem","useState","isActive","setIsActive","length","components","DropdownIndicator","props","selectProps","menuIsOpen","ref","value","options","map","item","name","blurInputOnSelect","isDisabled","TitleHeader","descSub","icon_title_header","ModalPopup","children","animation","isOpen","size","handleClose","isShowIconClose","isShowHeader","isShowFooter","isShowTwoBtn","customClassButton","classNameBtnLeft","textBtnLeft","classNameBtnRight","textBtnRight","handleSubmit","isDisabledButton","handleCloseIcon","onHide","show","onKeyUp","icon_close","Body","Footer","type","Radio","labelRadio","isChecked","htmlFor","checked","e","REGEX","EMAIL","PASSWORD","NUMBER","PHONE_NUMBER","USER_NAME","FLOAT_INPUT","VALIDATE_PASSWORD","ERROR_MESSAGE","EMAIL_FORMAT","EMAIL_REQUIRED","NICK_NAME_REQUIRED","PASSWORD_REQUIRED","PASSWORD_FORMAT","PASSWORD_NOT_MATCH","PASSWORD_CONFIRM_REQUIRED","EMAIL_NOT_EXSIST","PASSWORD_INVALID","ENQUIRY_TYPE_REQUIRED","TITLE_REQUIRED","CONTENT_REQUIRED","VERIFY_EMAIL","UN_AUTHENTICATED","REQUIRED","Validator","objectVal","validate","error","keys","Object","i","key","rules","j","undefined","test","EventRegister","location","stateTypeEvent","state","typeEvent","history","useHistory","dispatch","useDispatch","useSelector","account","listCompany","listArea","listInverter","commons","isProcessing","deviceList","listInverterTest","filter","ds_type","isShow","content","modalConform","setModalConform","company","area","inverter","dataSubmit","setDataSubmit","setError","useEffect","SignInAction","per_page","com_id","pos_id","go","handleChange","icon_next","rows","maxLength","target","push","ROUTERS","OPERATION_STATUS_BY_COMPANY","validation","dataValidate","addNewEvent","inverter_id"],"mappings":"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","file":"static/js/31.f29a4780.chunk.js","sourcesContent":["// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  titleLight?: string,\r\n};\r\n\r\nexport const TitleSubHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  titleLight = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title-sub ${className}`}>\r\n      <div\r\n        className=\"wrap-title-sub__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_arrow} alt=\"\" />\r\n        <div className=\"wrap-title-sub__header__name\">\r\n          {title}\r\n          <span>{titleLight}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleSubHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  titleLight: '',\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(TitleSubHeader);\r\n","// @flow\r\nimport React, { useState } from 'react';\r\nimport Select, { components } from 'react-select';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  errorMsg?: string,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  isSearchable?: boolean,\r\n  onBlur?: Function,\r\n  onChange?: Function,\r\n  listOptionString?: Array<{ id: number, name: any }>,\r\n  listItem?: Array<{\r\n    id: number,\r\n    value: any,\r\n    label: string,\r\n  }>,\r\n  innerRef?: any,\r\n  option?: Object,\r\n  noOptionsMessage?: Function,\r\n  customClass?: string,\r\n  request?: boolean,\r\n  noLabel?: boolean,\r\n};\r\nconst SelectDropdown = ({\r\n  placeholder = '',\r\n  errorMsg = '',\r\n  label = '',\r\n  disabled = false,\r\n  isSearchable = false,\r\n  onBlur = null,\r\n  onChange = () => {},\r\n  innerRef = null,\r\n  option = {},\r\n  noOptionsMessage = () => {},\r\n  listOptionString = [],\r\n  customClass = '',\r\n  request = false,\r\n  noLabel = false,\r\n  listItem,\r\n}: Props) => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const DropdownIndicator = (props) => {\r\n    setIsActive(props?.selectProps?.menuIsOpen);\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n        <div className=\"d-none\" />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      className={`customer-select ${customClass.length > 0 ? customClass : ''}`}\r\n    >\r\n      {!!label && (\r\n        <p className=\"input__label\">\r\n          {label}\r\n          {request && <span className=\"request\">*</span>}\r\n        </p>\r\n      )}\r\n      <div className={`input__box ${isActive ? 'down' : ''}`}>\r\n        <Select\r\n          placeholder={placeholder}\r\n          components={{ DropdownIndicator }}\r\n          ref={innerRef}\r\n          value={option || null}\r\n          onChange={onChange}\r\n          noOptionsMessage={noOptionsMessage}\r\n          // menuIsOpen\r\n          options={\r\n            noLabel\r\n              ? listOptionString.map((item) => ({\r\n                  id: item.id,\r\n                  value: item.name,\r\n                  label: item.name,\r\n                }))\r\n              : listItem\r\n          }\r\n          blurInputOnSelect={onBlur}\r\n          isDisabled={disabled}\r\n          isSearchable={isSearchable}\r\n        />\r\n      </div>\r\n      {errorMsg && <p className=\"error-msg\">{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\nSelectDropdown.defaultProps = {\r\n  placeholder: '',\r\n  errorMsg: '',\r\n  label: '',\r\n  disabled: false,\r\n  isSearchable: false,\r\n  // icon: '',\r\n  noLabel: false,\r\n  onBlur: null,\r\n  onChange: () => {},\r\n  innerRef: null,\r\n  listItem: [],\r\n  listOptionString: [],\r\n  option: {},\r\n  noOptionsMessage: () => {},\r\n  customClass: '',\r\n  request: false,\r\n};\r\nexport default SelectDropdown;\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  descSub?: string,\r\n};\r\n\r\nexport const TitleHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  descSub = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title ${className}`}>\r\n      <div\r\n        className=\"wrap-title__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_title_header} alt=\"\" />\r\n        <div className=\"wrap-title__header__name\">\r\n          {title}\r\n          <span>{descSub}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  id: '',\r\n  descSub: '',\r\n};\r\n\r\nexport default memo<Props>(TitleHeader);\r\n","/* eslint-disable no-nested-ternary */\r\n// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Button from 'commons/components/Button';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title?: string,\r\n  children: any,\r\n  animation?: boolean,\r\n  isOpen: boolean,\r\n  size?: string,\r\n  handleClose: Function,\r\n  customClass?: string,\r\n  isShowIconClose?: boolean,\r\n  isShowHeader?: boolean,\r\n  isShowFooter?: boolean,\r\n  isShowTwoBtn?: boolean,\r\n  customClassButton?: string,\r\n  classNameBtnLeft?: string,\r\n  textBtnLeft?: string,\r\n  classNameBtnRight?: string,\r\n  textBtnRight?: string,\r\n  handleSubmit?: Function,\r\n  isDisabledButton?: boolean,\r\n  handleCloseIcon?: Function,\r\n};\r\n\r\nexport const ModalPopup = ({\r\n  title = '',\r\n  children,\r\n  animation = false,\r\n  isOpen,\r\n  size,\r\n  handleClose,\r\n  customClass,\r\n  isShowIconClose,\r\n  isShowHeader,\r\n  isShowFooter,\r\n  isShowTwoBtn,\r\n  customClassButton = '',\r\n  classNameBtnLeft = '',\r\n  textBtnLeft = '',\r\n  classNameBtnRight = '',\r\n  textBtnRight = 'OK',\r\n  handleSubmit = () => {},\r\n  isDisabledButton,\r\n  handleCloseIcon = () => {},\r\n}: Props) => (\r\n  <Modal\r\n    animation={animation}\r\n    onHide={() => {\r\n      return true;\r\n    }}\r\n    show={isOpen}\r\n    size={size}\r\n    className={customClass}\r\n  >\r\n    {isShowIconClose && (\r\n      <div\r\n        className=\"modal-content__iconClose\"\r\n        onClick={handleCloseIcon}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onKeyUp={handleCloseIcon}\r\n      >\r\n        <img src={images.icon_close} alt=\"\" />\r\n      </div>\r\n    )}\r\n\r\n    {isShowHeader && <h3 className=\"modal-title\">{title}</h3>}\r\n\r\n    <Modal.Body>\r\n      {!isShowHeader ? (\r\n        <div className=\"modal-body__no-header\">{children}</div>\r\n      ) : (\r\n        <div className=\"modal-body__has-header\">{children}</div>\r\n      )}\r\n    </Modal.Body>\r\n    {isShowFooter && (\r\n      <Modal.Footer>\r\n        {!isShowTwoBtn ? (\r\n          <Button\r\n            type=\"button\"\r\n            customClass={customClassButton}\r\n            onClick={handleClose}\r\n          >\r\n            {textBtnRight}\r\n          </Button>\r\n        ) : (\r\n          <div className=\"group-button\">\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnLeft}`}\r\n              onClick={handleSubmit}\r\n              isDisabled={isDisabledButton}\r\n            >\r\n              {textBtnLeft}\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnRight}`}\r\n              onClick={handleClose}\r\n            >\r\n              {textBtnRight}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Modal.Footer>\r\n    )}\r\n  </Modal>\r\n);\r\n\r\nModalPopup.defaultProps = {\r\n  title: '',\r\n  animation: false,\r\n  size: '',\r\n  customClass: '',\r\n  isShowIconClose: false,\r\n  isShowHeader: false,\r\n  isShowFooter: false,\r\n  isShowTwoBtn: false,\r\n  customClassButton: '',\r\n  classNameBtnLeft: '',\r\n  textBtnLeft: '',\r\n  classNameBtnRight: '',\r\n  textBtnRight: 'OK',\r\n  handleSubmit: () => {},\r\n  isDisabledButton: false,\r\n  handleCloseIcon: () => {},\r\n};\r\nexport default memo<Props>(ModalPopup);\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  name?: string,\r\n  onChange: Function,\r\n  disabled?: boolean,\r\n  labelRadio: string,\r\n  isChecked: boolean,\r\n  id?: string,\r\n};\r\n\r\nexport const Radio = ({\r\n  labelRadio,\r\n  name = '',\r\n  isChecked,\r\n  onChange,\r\n  id = '',\r\n  disabled = false,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"wrap-radio\">\r\n      <label className=\"custom-radio d-flex\" htmlFor={id}>\r\n        <input\r\n          type=\"radio\"\r\n          checked={`${isChecked ? 'checked' : ''}`}\r\n          name={name}\r\n          onChange={(e) => onChange(e)}\r\n          id={id}\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"checkmark\" />\r\n        <span className=\"label\">{labelRadio}</span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadio.defaultProps = {\r\n  name: '',\r\n  disabled: false,\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(Radio);\r\n","const REGEX = {\r\n  EMAIL: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n  PASSWORD: /^(?=.*[a-zA-Z])([A-Z]?)((?=.*\\d)([!@#$%^&*()'\"<>:;.,=-]?))(?!\\s).{6,13}$/,\r\n  // PASSWORD: /^(?=.*[a-z])((?=.*\\d)|(?=.*[!@#$%^&*()'\"]))[A-Za-z\\d!@#$%^&*()'\"](?!\\s).{6,}$/,\r\n  NUMBER: /^[-]?(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\r\n  PHONE_NUMBER: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/,\r\n  // USER_NAME: /^[0-9a-zA-Z]{6,20}$\\S*$/\r\n  USER_NAME: /^[0-9a-zA-Z]{3,20}$\\S*$/,\r\n  FLOAT_INPUT: /^[0-9.]*$/,\r\n  VALIDATE_PASSWORD: /^[0-9a-zA-Z]{4,20}$\\S*$/,\r\n};\r\n\r\nexport default REGEX;\r\n","const ERROR_MESSAGE = {\r\n  EMAIL_FORMAT: '이메일 형식이 일치하지 않습니다.',\r\n  EMAIL_REQUIRED: 'Email does not exist.',\r\n  NICK_NAME_REQUIRED: 'Nickname does not exist.',\r\n  PASSWORD_REQUIRED: 'Password does not exist.',\r\n  PASSWORD_FORMAT: `Up to 13 digits, including one special character. It doesn't fit`,\r\n  PASSWORD_NOT_MATCH: `The password you want to change does not match.`,\r\n  PASSWORD_CONFIRM_REQUIRED: 'Password confirm does not exist.',\r\n  EMAIL_NOT_EXSIST: 'Please enter your email.',\r\n  PASSWORD_INVALID: `Invalid password`,\r\n  ENQUIRY_TYPE_REQUIRED: 'Enquiry Type does not exist.',\r\n  TITLE_REQUIRED: 'Title does not exist.',\r\n  CONTENT_REQUIRED: 'Content does not exist.',\r\n  VERIFY_EMAIL:\r\n    'Email authentication is not complete.<br /> Would you like me to resend you<br /> the authentication email?',\r\n  UN_AUTHENTICATED: 'Unauthenticated.',\r\n  PHONE_NUMBER: '숫자 11자리를 입력해주세요.',\r\n  REQUIRED: '이 필드는 필수입니다.',\r\n};\r\n\r\nexport default ERROR_MESSAGE;\r\n","/* eslint-disable no-plusplus */\r\n/* eslint-disable prefer-template */\r\n// @flow\r\nimport REGEX from '../constants/regexs';\r\nimport ERROR_MESSAGE from '../constants/errorMsg';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const Validator = (objectVal: Object, validate: Object) => {\r\n  const error = {};\r\n  const keys = Object.keys(objectVal);\r\n  for (let i = 0, { length } = keys; i < length; i += 1) {\r\n    const key = keys[i];\r\n    const rules = validate[key];\r\n    const value = objectVal[key];\r\n    let errorMsg = '';\r\n\r\n    for (let j = 0; j < rules.length; j += 1) {\r\n      switch (rules[j]) {\r\n        case 'required':\r\n          if (value === '' || value === null || value === undefined) {\r\n            errorMsg = ERROR_MESSAGE.REQUIRED;\r\n          }\r\n          break;\r\n        case 'email':\r\n          if (!REGEX.EMAIL.test(value)) {\r\n            errorMsg = ERROR_MESSAGE.EMAIL_FORMAT;\r\n          }\r\n          break;\r\n\r\n        case 'phoneNumber':\r\n          if (!REGEX.PHONE_NUMBER.test(value)) {\r\n            errorMsg = ERROR_MESSAGE.PHONE_NUMBER;\r\n          }\r\n          break;\r\n        case 'password':\r\n          if (!REGEX.PASSWORD.test(value)) {\r\n            errorMsg = ERROR_MESSAGE.PASSWORD_FORMAT;\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      if (errorMsg) {\r\n        error[key] = errorMsg;\r\n      }\r\n    }\r\n  }\r\n\r\n  return error;\r\n};\r\n","// @flow\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loading from 'commons/components/Loading';\r\nimport TitleHeader from 'commons/components/TitleHeader';\r\nimport TitleSubHeader from 'commons/components/TitleHeader/titleSub';\r\nimport SelectDropdown from 'commons/components/Select';\r\nimport images from 'themes/images';\r\nimport ModalPopup from 'commons/components/Modal';\r\nimport Radio from 'commons/components/Radio';\r\nimport Button from 'commons/components/Button';\r\nimport { Validator } from 'helpers/validator';\r\nimport * as SignInAction from 'modules/accounts/redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ROUTERS from 'constants/routers';\r\nimport { addNewEvent } from 'commons/redux';\r\n\r\ntype Props = {\r\n  location: {\r\n    pathname: string,\r\n    state: {\r\n      prevRoute: string,\r\n    },\r\n  },\r\n};\r\n\r\nconst EventRegister = ({ location }: Props) => {\r\n  const stateTypeEvent = location?.state && location?.state.typeEvent;\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { listCompany, listArea, listInverter } = useSelector(\r\n    (state) => state?.account\r\n  );\r\n\r\n  const { isProcessing, type, deviceList } = useSelector(\r\n    (state) => state.commons\r\n  );\r\n  const listInverterTest =\r\n    (deviceList && deviceList.filter((item) => item.ds_type === '3')) || [];\r\n  const [modalConform, setModalConform] = useState({\r\n    isShow: false,\r\n    content: '현황을 등록하시겠습니까?',\r\n  });\r\n\r\n  const [dataSubmit, setDataSubmit] = useState({\r\n    typeEvent: '0',\r\n    content: '',\r\n    company: null,\r\n    area: null,\r\n    inverter: null,\r\n  });\r\n  const [error, setError] = useState({\r\n    content: '',\r\n    company: '',\r\n    area: '',\r\n    inverter: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(SignInAction.getListCompany());\r\n    dispatch(SignInAction.getListArea());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      SignInAction.getListInverter({\r\n        per_page: 100,\r\n        com_id: dataSubmit?.company?.value,\r\n        pos_id: dataSubmit?.area?.value,\r\n      })\r\n    );\r\n  }, [dataSubmit?.company, dataSubmit?.area]);\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case 'commons/addNewEventSuccess':\r\n        history.go(-1);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [type]);\r\n\r\n  const { typeEvent, content, company, area, inverter } = dataSubmit;\r\n  const handleSubmit = () => {\r\n    let validation = {};\r\n    const rules = {\r\n      content: ['required'],\r\n      company: ['required'],\r\n      area: ['required'],\r\n      inverter: ['required'],\r\n    };\r\n\r\n    const dataValidate = {\r\n      content,\r\n      inverter: inverter && inverter.label,\r\n    };\r\n    validation = Validator(dataValidate, rules);\r\n\r\n    setModalConform({\r\n      ...modalConform,\r\n      isShow: false,\r\n    });\r\n\r\n    if (Object.keys(validation).length > 0) {\r\n      setError(validation);\r\n      return;\r\n    }\r\n    // Call api register event\r\n    dispatch(\r\n      addNewEvent({\r\n        type: dataSubmit?.typeEvent,\r\n        content: dataSubmit?.content,\r\n        inverter_id: dataSubmit?.inverter?.value,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleChange = (value, name) => {\r\n    switch (name) {\r\n      case 'company':\r\n        setError({\r\n          ...error,\r\n          company: '',\r\n        });\r\n        setDataSubmit({\r\n          ...dataSubmit,\r\n          company: value,\r\n          inverter: '',\r\n        });\r\n\r\n        break;\r\n      case 'area':\r\n        setDataSubmit({\r\n          ...dataSubmit,\r\n          area: value,\r\n          inverter: '',\r\n        });\r\n        setError({\r\n          ...error,\r\n          area: '',\r\n        });\r\n\r\n        break;\r\n      case 'inverter':\r\n        setDataSubmit({\r\n          ...dataSubmit,\r\n          inverter: value,\r\n        });\r\n        setError({\r\n          ...error,\r\n          inverter: '',\r\n        });\r\n        break;\r\n      case 'content':\r\n        setDataSubmit({\r\n          ...dataSubmit,\r\n          content: value,\r\n        });\r\n        break;\r\n      default:\r\n        setDataSubmit({\r\n          ...dataSubmit,\r\n          [name]: value,\r\n        });\r\n        setError({\r\n          ...error,\r\n          [name]: '',\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isProcessing && <Loading />}\r\n      <div className=\"content-wrap\">\r\n        <TitleHeader\r\n          title=\"실증단지 운영 현황\"\r\n          descSub=\"설비 이력, 보수 이력을 등록하실 수 있습니다.\"\r\n        />\r\n        <TitleSubHeader title=\"이벤트 상세 내용\" />\r\n        <div className=\"table-form\">\r\n          <div className=\"item-row d-flex\">\r\n            <div className=\"colum-left\">분류</div>\r\n            <div className=\"colum-right\">\r\n              <div className=\"group-radio\">\r\n                <Radio\r\n                  onChange={() =>\r\n                    setDataSubmit({\r\n                      ...dataSubmit,\r\n                      typeEvent: '0',\r\n                    })\r\n                  }\r\n                  isChecked={typeEvent === '0'}\r\n                  name=\"typeEvent\"\r\n                  labelRadio=\"설비 이력\"\r\n                  id=\"event\"\r\n                />\r\n                <Radio\r\n                  onChange={() =>\r\n                    setDataSubmit({\r\n                      ...dataSubmit,\r\n                      typeEvent: '1',\r\n                    })\r\n                  }\r\n                  isChecked={typeEvent === '1'}\r\n                  labelRadio=\"보수 이력\"\r\n                  name=\"typeEvent\"\r\n                  id=\"history\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"item-row d-flex\">\r\n            <div className=\"colum-left\">모듈정보</div>\r\n            <div className=\"colum-right\">\r\n              <div className=\"item-role\">\r\n                <div className=\"group-select\">\r\n                  {stateTypeEvent !== 'mockup' && (\r\n                    <div className=\"group-item\">\r\n                      <SelectDropdown\r\n                        placeholder=\"모듈 선택\"\r\n                        listItem={listCompany}\r\n                        onChange={(option) => handleChange(option, 'company')}\r\n                        option={company || null}\r\n                        noOptionsMessage={() => '옵션 없음'}\r\n                        errorMsg={error?.company}\r\n                      />\r\n                      <img src={images.icon_next} alt=\"\" />\r\n                    </div>\r\n                  )}\r\n                  {stateTypeEvent !== 'mockup' && (\r\n                    <div className=\"group-item\">\r\n                      <SelectDropdown\r\n                        placeholder=\"모듈 선택\"\r\n                        listItem={listArea}\r\n                        onChange={(option) => handleChange(option, 'area')}\r\n                        option={area || null}\r\n                        noOptionsMessage={() => '옵션 없음'}\r\n                        errorMsg={error?.area}\r\n                      />\r\n                      <img src={images.icon_next} alt=\"\" />\r\n                    </div>\r\n                  )}\r\n                  <div className=\"group-item\">\r\n                    <SelectDropdown\r\n                      placeholder=\"모듈 선택\"\r\n                      listItem={\r\n                        stateTypeEvent === 'mockup'\r\n                          ? listInverterTest\r\n                          : listInverter\r\n                      }\r\n                      onChange={(option) => handleChange(option, 'inverter')}\r\n                      option={inverter || null}\r\n                      noOptionsMessage={() => '옵션 없음'}\r\n                      errorMsg={error?.inverter}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"item-row d-flex mh-300\">\r\n            <div className=\"colum-left\">내용</div>\r\n            <div className=\"colum-right\">\r\n              <textarea\r\n                placeholder=\"\"\r\n                name=\"content\"\r\n                rows=\"12\"\r\n                maxLength=\"5000\"\r\n                className=\"form-control\"\r\n                value={content}\r\n                onChange={(e) => handleChange(e.target.value, 'content')}\r\n              />\r\n              {error?.content && (\r\n                <p className=\"input__error-msg\">{error?.content}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"group-btn-bottom\">\r\n          <Button\r\n            onClick={() =>\r\n              setModalConform({\r\n                ...modalConform,\r\n                isShow: true,\r\n              })\r\n            }\r\n          >\r\n            수정 완료\r\n          </Button>\r\n          <Button\r\n            onClick={() => history.push(ROUTERS.OPERATION_STATUS_BY_COMPANY)}\r\n          >\r\n            취소\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <ModalPopup\r\n        isOpen={modalConform.isShow}\r\n        isShowHeader\r\n        title=\"알림\"\r\n        isShowIconClose\r\n        isShowFooter\r\n        handleCloseIcon={() =>\r\n          setModalConform({\r\n            ...modalConform,\r\n            isShow: false,\r\n          })\r\n        }\r\n        handleClose={() => {\r\n          setModalConform({\r\n            ...modalConform,\r\n            isShow: false,\r\n          });\r\n        }}\r\n        textBtnLeft=\"확인\"\r\n        textBtnRight=\"취소\"\r\n        isShowTwoBtn\r\n        customClassButton=\"btn-custom\"\r\n        handleSubmit={() => handleSubmit()}\r\n      >\r\n        {modalConform?.content}\r\n      </ModalPopup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventRegister;\r\n"],"sourceRoot":""}