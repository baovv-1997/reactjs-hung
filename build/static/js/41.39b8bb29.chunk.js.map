{"version":3,"sources":["commons/components/TitleHeader/titleSub.js","customHooks/useClickOutSide.js","customHooks/useDebounce.js","commons/components/Search/AutoSuggest.js","commons/components/Search/index.js","commons/components/Header/ModalEvent.js","commons/components/Header/index.js","constants/listMenu.js","layout/Menu/Submenu.js","layout/Menu/MenuItem.js","layout/Menu/index.js","layout/MainLayout/index.js","commons/components/TitleHeader/index.js","modules/accounts/components/management/FormDetail.js","modules/accounts/components/management/AccountDetail.js"],"names":["TitleSubHeader","title","onClick","className","id","titleLight","onKeyPress","role","tabIndex","src","images","icon_arrow","alt","defaultProps","memo","useClickOutside","ref","handler","rest","useEffect","listener","event","current","contains","target","iconRef","document","addEventListener","removeEventListener","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","setTimeout","clearTimeout","AutoSuggest","options","map","option","index","key","label","Search","placeholder","handleIconClick","customClass","onChange","setSearchTerm","handleKeyDown","isSpinner","display","setDisplay","wrapperRef","useRef","handleClickOutside","wrap","window","e","icon_search","length","search","searchValue","console","log","ModalEvent","isShow","Header","isSearch","isSelect","eventCount","dispatch","useDispatch","useSelector","state","main","listPositions","optionsCompany","optionsPosition","optionDropdown","setOptionDropdown","setIsShow","searchTerm","content","modal","setModal","debouncedSearchTerm","getCompanySearchMain","keyword","getPositionSearchMain","indexDefault","findIndex","item","includes","searchSubmit","getCardMeasureSearchPosition","type","pos_id","getCardMeasureSearchCompany","com_id","Select","listItem","ops","disabled","isSearchable","blurInputOnSelect","icon_event","Modal","isOpen","isShowHeader","isShowIconClose","isShowFooter","handleCloseIcon","handleClose","textBtnRight","DASHBOARD","icon","IMAGES","iconGraph","to","ROUTERS","ROOT","items","name","sub","DASHBOARD_AREA","DASHBOARD_COMPANY","STATUS_COMPANY","STATUS_COMPANY_BY_AREA","OPERATION_STATUS_BY_COMPANY","OPERATION_STATUS_BY_AREA","STATISTICS_DEVELOP","STATISTICS_DEVELOP_AREA","OPERATION_STATISTICS_COMPANY","OPERATION_STATISTICS_AREA","SETUP","setup","MOCKUP","mockUp","TEST_DASHBOARD","TEST_MOCKUP_STATUS","TEST_MOCKUP_OPERATION","TEST_MOCKUP_STATISTICS_DEVELOP","TEST_MOCKUP_STATISTICS_OPERATION","SOLAR_DASHBOARD","TEST_SOLAR_STATUS_DEVELOP","TEST_SOLAR_STATUS_OPERATION","TEST_SOLAR_STATISTICS_DEVELOP","TEST_SOLAR_STATISTICS_OPERATION","itemSub","listNestSub","isActiveNestSub","handleClickItemSub","location","nestSubClicking","setNestSubClicking","renderNestedSub","activeNestItem","pathname","stopPropagation","handleClickNestSub","faChevronRight","listSub","handleClickItem","isActive","subMenuClicking","commons","setListNestSub","activeSub","setActiveSub","active","renderSub","nestSub","withRouter","menuClicking","setListSub","setMenuClicking","renderMenuList","listMenu","Button","btn_logout","MainLayout","children","isProcessing","setIsOpen","refMenu","mainContent","showHeader","classHeight","innerHeight","Loading","innerRef","TitleHeader","descSub","icon_title_header","accountDetail","history","errors","account","isUpdateFailed","setIsUpdateFailed","isDelete","setIsDelete","getListCompany","getListPosition","renderListDeviceMaintain","devices","company","com_name","arrow_right","position","pos_name","ds_name","errorsMessage","Object","values","push","ACCOUNT_MANAGEMENT","roles","display_name","moment","created_at","format","email","formatValue","phone","username","textBtnLeft","isShowTwoBtn","customClassButton","handleSubmit","deleteAccount","resetAccountType","AccountDetail","match","params","getAccountList","isDetail"],"mappings":"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","file":"static/js/41.39b8bb29.chunk.js","sourcesContent":["// @flow\n// libs\nimport React, { memo } from 'react';\nimport images from 'themes/images';\n\ntype Props = {\n  title: string,\n  onClick?: Function,\n  className?: string,\n  id?: string,\n  titleLight?: string,\n};\n\nexport const TitleSubHeader = ({\n  title,\n  onClick = () => {},\n  className = '',\n  id,\n  titleLight = '',\n}: Props) => {\n  return (\n    <div id={id} className={`wrap-title-sub ${className}`}>\n      <div\n        className=\"wrap-title-sub__header\"\n        onClick={onClick}\n        onKeyPress={() => {}}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <img src={images.icon_arrow} alt=\"\" />\n        <div className=\"wrap-title-sub__header__name\">\n          {title}\n          <span>{titleLight}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTitleSubHeader.defaultProps = {\n  className: '',\n  onClick: () => {},\n  titleLight: '',\n  id: '',\n};\n\nexport default memo<Props>(TitleSubHeader);\n","import { useEffect } from 'react';\n\n/**\n * Function: useOnClickOutside\n * A custom hook that use to trigger an event if have action click outside a ref's element.\n * @param {object} ref: a reference of element that we need to detect\n * @param {function} handler: a function that used to trigger event if have click event outside of element\n */\nconst useClickOutside = (ref, handler, { ...rest }) => {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element\n      if (\n        !ref.current ||\n        ref.current.contains(event.target) ||\n        !rest.iconRef.current ||\n        rest.iconRef.current.contains(event.target)\n      ) {\n        return;\n      }\n\n      // Fire event if clicking outside ref's element\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n    };\n  }, [ref, handler, rest.iconRef]);\n};\n\nexport default useClickOutside;\n","import { useEffect, useState } from 'react';\n\n/**\n * Function: useDebounce\n * @param {string} value \n * @param {number} delay \n * @returns \n */\n\nconst useDebounce = (value, delay) => {\n\n    // State and setter for debounce value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(() => {\n        // update debounced value after delay\n        const handler = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay);\n\n        // cancel the timeout if value changes\n        return () => {\n            clearTimeout(handler);\n        }\n    }, [value, delay]);\n\n    return debouncedValue;\n}\n\nexport default useDebounce;","// @flow\nimport React, { memo } from 'react';\n\ntype Props = {\n  onClick: Function,\n  options?: Array<{ id: number, value: number, label: string }>\n};\n\nconst AutoSuggest = ({ onClick, options = [] }: Props) => {\n  return (\n    <div className=\"auto-suggest\">\n      {options\n        .map((option, index) => (\n          <p\n            className=\"auto-suggest__item\"\n            // eslint-disable-next-line react/no-array-index-key\n            key={index}\n            onClick={() => onClick(option)}\n            role=\"presentation\"\n          >\n            {option.label}\n          </p>\n        ))}\n    </div>\n  );\n};\n\nAutoSuggest.defaultProps = {\n  options: [],\n};\n\nexport default memo < Props > (AutoSuggest);\n","// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport AutoSuggest from './AutoSuggest';\n\ntype Props = {\n  placeholder?: string,\n  handleIconClick?: Function,\n  customClass?: string,\n  value?: string,\n  onChange?: Function,\n  setSearchTerm?: Function,\n  options?: Array<{ id: number, value: number, label: string }>,\n  handleKeyDown: Function,\n  isSpinner?: boolean,\n};\n\nconst Search = ({\n  placeholder,\n  handleIconClick = () => { },\n  customClass = '',\n  value = '',\n  onChange = () => { },\n  setSearchTerm = () => { },\n  options = [],\n  handleKeyDown,\n  isSpinner = false\n}: Props) => {\n  const [display, setDisplay] = useState(false);\n\n  const wrapperRef = useRef(null);\n\n  const handleClickOutside = (event) => {\n    const { current: wrap } = wrapperRef;\n    if (wrap && !wrap.contains(event.target)) {\n      setDisplay(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      window.removeEventListener('mousedown', handleClickOutside);\n    };\n  });\n\n  const updateSearchInput = (searchValue) => {\n    console.log(searchValue, \"searchValue\");\n    setSearchTerm(searchValue);\n    setDisplay(false);\n  };\n\n  return (\n    <div ref={wrapperRef} className={`search ${customClass}`}>\n      <input\n        className=\"search__input\"\n        onClick={() => setDisplay(true)}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onKeyPress={(e) => handleKeyDown(e)}\n      />\n\n      {isSpinner && <div className=\"spinner\" />}\n\n      <img\n        src={images.icon_search}\n        alt=\"Icon Search\"\n        className=\"search__icon\"\n        onClick={handleIconClick}\n        role=\"presentation\"\n      />\n      {(display && options.length) ? <AutoSuggest search={value} onClick={updateSearchInput} options={options} /> : null}\n    </div>\n  );\n};\n\nSearch.defaultProps = {\n  placeholder: '',\n  customClass: '',\n  value: '',\n  onChange: () => { },\n  setSearchTerm: () => { },\n  handleIconClick: () => { },\n  options: [],\n  isSpinner: false,\n};\n\nexport default memo < Props > (Search);\n","// @flow\nimport React from 'react';\n\ntype Props = {\n  isShow?: boolean,\n  wrapperRef: any,\n};\nconst ModalEvent = ({ isShow = false, wrapperRef }: Props) => {\n  return (\n    <div\n      className={`modal__event ${isShow ? 'show-modal-event' : ''}`}\n      ref={wrapperRef}\n    >\n      <div className=\"modal__event-title\">이벤트 알림</div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n\n      <div className=\"modal__event__group-content\">\n        <div className=\"modal__event__type-event\">실증단지</div>\n        <p className=\"modal__event__event-name\">\n          <span>[측정 문제 발생] </span>옥토끼이미징\n        </p>\n      </div>\n    </div>\n  );\n};\n\nModalEvent.defaultProps = {\n  isShow: false,\n};\n\nexport default ModalEvent;\n","/* eslint-disable react-hooks/exhaustive-deps */\n// @flow\nimport React, { memo, useEffect, useRef, useState } from 'react';\nimport images from 'themes/images';\nimport useClickOutside from 'customHooks/useClickOutSide';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useDebounce from 'customHooks/useDebounce';\nimport { getCompanySearchMain, getPositionSearchMain, getCardMeasureSearchPosition, getCardMeasureSearchCompany } from 'modules/main/redux';\nimport Search from '../Search';\nimport SelectDropdown from '../Select';\nimport ModalEvent from './ModalEvent';\nimport ModalPopup from '../Modal';\n\ntype Props = {\n  isSearch?: boolean,\n  isSelect?: boolean,\n  eventCount?: number,\n};\n\nconst Header = ({\n  isSearch = false,\n  isSelect = false,\n  eventCount = 0,\n}: Props) => {\n\n  const dispatch = useDispatch();\n  const { listPositions, optionsCompany, optionsPosition, isSpinner } = useSelector(state => state?.main);\n  const [optionDropdown, setOptionDropdown] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const [searchTerm, setSearchTerm] = useState({ label: '', value: '', key: '', id: '' });\n  const [modal, setModal] = useState({ isShow: false, content: '' });\n\n  const wrapperRef = useRef(null);\n  const iconRef = useRef(null);\n\n  const debouncedSearchTerm = useDebounce(searchTerm.label, 500);\n\n  useEffect(() => {\n    if (debouncedSearchTerm) {\n      dispatch(getCompanySearchMain({ keyword: debouncedSearchTerm }));\n      dispatch(getPositionSearchMain({ keyword: debouncedSearchTerm }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearchTerm])\n\n  // set option dropdown value when listposition != [];\n  useEffect(() => {\n    const indexDefault = listPositions.findIndex((item) => item?.label.includes('본관 남측'));\n    setOptionDropdown(listPositions[indexDefault]);\n  }, [listPositions])\n\n  const searchSubmit = () => {\n    const type = searchTerm?.key;\n    switch (type) {\n      case 'posId':\n        console.log('getposId');\n        dispatch(getCardMeasureSearchPosition({ type: 'summary', pos_id: searchTerm.id }));\n        break;\n      case 'comId':\n        dispatch(getCardMeasureSearchCompany({ type: 'summary', com_id: searchTerm.id }));\n        break;\n      default:\n        setModal({ ...modal, isShow: true, content: '구역명이나 업체명을 정확히 입력해주세요' });\n        break;\n    }\n  }\n\n  // Handle Icon search Click\n  const handleIconClick = () => {\n    searchSubmit();\n  }\n\n  // Handle event press key enter search\n  const handleKeyDownSearch = (e) => {\n    if (e.key === 'Enter') {\n      searchSubmit();\n    }\n  }\n\n  // when input search change set value\n  const handleSearchChange = (e) => {\n    const { value } = e.target;\n    setSearchTerm({ label: value });\n  };\n\n  // handle click outside event\n  useClickOutside(\n    wrapperRef,\n    () => {\n      if (isShow) {\n        setIsShow(false);\n      }\n    },\n    { iconRef }\n  );\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        {isSearch ? (\n          <Search\n            placeholder=\"회사명이나 구역명으로 검색해보세요.\"\n            value={searchTerm.label}\n            onChange={handleSearchChange}\n            setSearchTerm={setSearchTerm}\n            options={[...optionsPosition, ...optionsCompany]}\n            handleIconClick={handleIconClick}\n            handleKeyDown={handleKeyDownSearch}\n            isSpinner={isSpinner}\n          />\n        ) : (\n          ''\n        )}\n        {isSelect ? (\n          <SelectDropdown\n            placeholder=\"List Selects\"\n            listItem={listPositions}\n            onChange={(ops) => {\n              setOptionDropdown(ops);\n            }}\n            option={optionDropdown}\n            disabled={false}\n            isSearchable={false}\n            blurInputOnSelect={false}\n            customClass=\"header__select\"\n          />\n        ) : (\n          ''\n        )}\n      </div>\n      <div className=\"header__right\">\n        <div className=\"header__event\">\n          <img\n            src={images.icon_event}\n            alt=\"Icon Event\"\n            className=\"header__icon\"\n            onClick={() => setIsShow(!isShow)}\n            role=\"presentation\"\n            ref={iconRef}\n          />\n          {eventCount > 0 ? (\n            <span className=\"header__notification\">{eventCount}</span>\n          ) : (\n            ''\n          )}\n        </div>\n\n        <div className=\"header__label-event\">\n          <span className=\"header__label-content\">이벤트발생</span>\n\n          {/* Modal event */}\n\n          <ModalEvent isShow={isShow} wrapperRef={wrapperRef} />\n        </div>\n      </div>\n      <ModalPopup\n        isOpen={modal.isShow}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() =>\n          setModal({\n            ...modal,\n            isShow: false,\n            content: '',\n          })\n        }\n        handleClose={() =>\n          setModal({\n            ...modal,\n            isShow: false,\n            content: '',\n          })\n        }\n        textBtnRight=\"확인\"\n      >\n        {modal.content}\n      </ModalPopup>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  eventCount: 0,\n};\n\nexport default memo < Props > (Header);\n","import IMAGES from 'themes/images';\nimport ROUTERS from './routers';\n\nexport const DASHBOARD = {\n  id: 1,\n  label: '실증단지',\n  icon: IMAGES.iconGraph,\n  to: ROUTERS.ROOT,\n  items: [\n    {\n      id: 1,\n      name: '대시보드',\n      sub: [\n        {\n          id: 1,\n          name: '통합 대시보드',\n          to: ROUTERS.ROOT,\n        },\n        {\n          id: 2,\n          name: '구역 대시보드',\n          to: ROUTERS.DASHBOARD_AREA,\n        },\n        {\n          id: 3,\n          name: '업체 대시보드',\n          to: ROUTERS.DASHBOARD_COMPANY,\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '현황',\n      sub: [\n        {\n          id: 1,\n          name: '발전 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.STATUS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.STATUS_COMPANY_BY_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 현황',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 현황',\n              to: ROUTERS.OPERATION_STATUS_BY_AREA,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: '통계',\n      sub: [\n        {\n          id: 1,\n          name: '발전 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.STATISTICS_DEVELOP_AREA,\n            },\n          ],\n        },\n        {\n          id: 2,\n          name: '운영 통계',\n          sub: [\n            {\n              id: 1,\n              name: '업체별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_COMPANY,\n            },\n            {\n              id: 2,\n              name: '구역별 통계',\n              to: ROUTERS.OPERATION_STATISTICS_AREA,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nexport const SETUP = {\n  id: 2,\n  label: '기기 관리',\n  icon: IMAGES.setup,\n  items: [\n    { id: 1, name: '계정 관리', to: '/accounts' },\n    { id: 2, name: '기기 관리', to: '/devices' },\n  ],\n};\n\nexport const MOCKUP = {\n  id: 1,\n  label: '실증테스트',\n  icon: IMAGES.mockUp,\n  items: [\n    {\n      id: 1,\n      name: '테스트(목업)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.TEST_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_MOCKUP_STATUS,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_MOCKUP_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n    {\n      id: 2,\n      name: '테스트(실증단지)',\n      sub: [\n        {\n          id: 1,\n          name: '대시보드',\n          to: ROUTERS.SOLAR_DASHBOARD,\n        },\n        {\n          id: 2,\n          name: '현황',\n          sub: [\n            {\n              id: 1,\n              name: '발전 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 현황',\n              to: ROUTERS.TEST_SOLAR_STATUS_OPERATION,\n            },\n          ],\n        },\n        {\n          id: 3,\n          name: '통계',\n          sub: [\n            {\n              id: 1,\n              name: '발전 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_DEVELOP,\n            },\n            {\n              id: 2,\n              name: '운영 통계',\n              to: ROUTERS.TEST_SOLAR_STATISTICS_OPERATION,\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ntype Props = {\n  itemSub: {\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listNestSub: Array<{\n    id: any,\n    to: string,\n    name: string,\n  }>,\n  isActiveNestSub: boolean,\n  handleClickItemSub: Function,\n  location: {\n    pathname: string,\n  },\n};\n\nconst Submenu = ({\n  itemSub,\n  listNestSub,\n  isActiveNestSub,\n  handleClickItemSub,\n  location,\n}: Props) => {\n  const [nestSubClicking, setNestSubClicking] = useState({});\n\n  const handleClickNestSub = (e, item) => {\n    e.stopPropagation();\n    setNestSubClicking(item);\n  };\n\n  const renderNestedSub =\n    listNestSub &&\n    listNestSub.length > 0 &&\n    listNestSub.map((item) => {\n      const activeNestItem =\n        item.name === nestSubClicking.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <li\n          className=\"item\"\n          onClick={(e) => handleClickNestSub(e, item)}\n          tabIndex={0}\n          role=\"menuitem\"\n          onKeyPress={() => {}}\n          key={item.id}\n        >\n          <Link\n            to={item?.to}\n            className={`item__link item-link-nest-sub ${\n              activeNestItem ? 'active-link' : ''\n            }`}\n          >\n            <p className=\"item__link__label item-link-label-nest-sub\">\n              {item.name}\n            </p>\n          </Link>\n        </li>\n      );\n    });\n\n  const { to, name, sub } = itemSub;\n\n  return (\n    <li\n      className=\"item\"\n      onClick={(e) => handleClickItemSub(e, itemSub, isActiveNestSub)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to}\n        className={`item__link ${\n          isActiveNestSub ? 'active' : ''\n        } item-link-sub ${isActiveNestSub && !sub ? 'active-link' : ''}`}\n      >\n        <p className=\"item__link__label item-link-label-sub\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n\n      <ul className={`menu__listsub ${isActiveNestSub ? 'open' : ''}`}>\n        {renderNestedSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(Submenu);\n","// @flow\n// libs\nimport React, { memo, useState } from 'react';\nimport { setNestSubClicking } from 'commons/redux';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport Submenu from './Submenu';\n\ntype Props = {\n  item: {\n    id: number,\n    to: string,\n    name: string,\n    sub: Array<{}>,\n  },\n  listSub: Array<{\n    id: number,\n    name: string,\n    to: string,\n    sub: Array<{}>,\n  }>,\n  handleClickItem: Function,\n  isActive: boolean,\n  location: {\n    pathname: string,\n  },\n};\n\nconst MenuItem = ({\n  item,\n  listSub,\n  handleClickItem,\n  isActive,\n  location,\n}: Props) => {\n  const dispatch = useDispatch();\n\n  const subMenuClicking = useSelector((state) => state.commons.subMenuClicking);\n  const { to, name, sub } = item;\n  const [listNestSub, setListNestSub] = useState(subMenuClicking?.sub);\n  const [activeSub, setActiveSub] = useState(false);\n\n  const handleClickItemSub = (e, itemSub, active) => {\n    e.stopPropagation();\n    setActiveSub(active);\n    dispatch(setNestSubClicking(itemSub));\n    setListNestSub(itemSub.sub);\n    if (itemSub.name === subMenuClicking.name && active) {\n      setNestSubClicking({});\n    }\n  };\n  const renderSub =\n    listSub &&\n    listSub.length > 0 &&\n    listSub.map((itemSub) => {\n      const isActiveNestSub =\n        subMenuClicking.name === itemSub.name ||\n        location.pathname.includes(item.to);\n\n      return (\n        <Submenu\n          key={itemSub.id}\n          itemSub={itemSub}\n          nestSub={itemSub.sub}\n          handleClickItemSub={handleClickItemSub}\n          listNestSub={listNestSub}\n          isActiveNestSub={isActiveNestSub}\n          location={location}\n        />\n      );\n    });\n\n  return (\n    <li\n      className=\"item\"\n      onClick={() => handleClickItem(item, isActive)}\n      tabIndex={0}\n      role=\"menuitem\"\n      onKeyPress={() => {}}\n    >\n      <Link\n        to={to || '#'}\n        className={`item__link ${isActive ? 'active' : ''} ${\n          isActive && !sub ? 'active-link' : ''\n        }`}\n      >\n        <p className=\"item__link__label\">{name}</p>\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\n      </Link>\n      <ul className={`menu__listsub ${isActive || activeSub ? 'open' : ''}`}>\n        {renderSub}\n      </ul>\n    </li>\n  );\n};\n\nexport default memo<Props>(MenuItem);\n","// @flow\n// libs\nimport React, { useState, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DASHBOARD, SETUP, MOCKUP } from 'constants/listMenu';\nimport { setMenuClicking, setNestSubClicking } from 'commons/redux';\nimport IMAGES from 'themes/images';\nimport { Button } from 'commons/components/Button';\nimport MenuItem from './MenuItem';\n\ntype Props = {\n  location: {\n    pathname: string,\n  },\n};\n\nconst Menu = ({ location }: Props) => {\n  const dispatch = useDispatch();\n  const menuClicking = useSelector((state) => state?.commons?.menuClicking);\n  const [listSub, setListSub] = useState(menuClicking?.sub);\n  const handleClickItem = (item, active) => {\n    setListSub(item.sub);\n\n    dispatch(setMenuClicking(item));\n\n    if (item.name === menuClicking.name && active) {\n      dispatch(setMenuClicking({}));\n    }\n    if (item.id !== menuClicking?.id) {\n      dispatch(setNestSubClicking({}));\n    }\n  };\n\n  const renderMenuList = (listMenu) => {\n    return listMenu.items.map((item) => {\n      const isActive =\n        menuClicking.name === item.name || location.pathname.includes(item.to);\n      return (\n        <MenuItem\n          key={item.id}\n          item={item}\n          listSub={listSub}\n          handleClickItem={handleClickItem}\n          menuClicking={menuClicking}\n          isActive={isActive}\n          location={location}\n        />\n      );\n    });\n  };\n\n  return (\n    <div className=\"menu\">\n      <h1 className=\"menu__head\">실증단지</h1>\n      <div className=\"wrapper-menu\">\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={DASHBOARD?.icon} alt=\"menu\" />\n            <span>{DASHBOARD?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(DASHBOARD)}</ul>\n\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={MOCKUP?.icon} alt=\"menu\" />\n            <span>{MOCKUP?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(MOCKUP)}</ul>\n\n        <div className=\"menu__wraper-head\">\n          <p className=\"menu__info\">\n            <img src={SETUP?.icon} alt=\"menu\" />\n            <span>{SETUP?.label}</span>\n          </p>\n        </div>\n        <ul className=\"menu__list\">{renderMenuList(SETUP)}</ul>\n        <div className=\"logout\">\n          <div className=\"name-user\">마스터님</div>\n          <Button customClass=\"btn-logout\">\n            <img src={IMAGES.btn_logout} alt=\"\" />\n            <div>로그아웃</div>\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(memo<Props>(Menu));\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useRef } from 'react';\nimport useClickOutside from 'customHooks/useClickOutSide';\n// import Header from '../../components/Header';\nimport Loading from 'commons/components/Loading';\nimport Header from 'commons/components/Header';\n\nimport SidebarMenu from '../Menu';\n\n\ntype Props = {\n  children: React.AbstractComponent<{}>,\n  isSearch?: boolean,\n  isSelect?: boolean,\n  isProcessing?: boolean,\n};\n\nexport const MainLayout = ({\n  children,\n  isSearch = false,\n  isSelect = false,\n  isProcessing = false,\n}: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const refMenu = useRef(null);\n  const iconRef = useRef(null);\n  const mainContent = useRef(null);\n\n  useClickOutside(\n    refMenu,\n    () => {\n      if (isOpen) {\n        setIsOpen(false);\n      }\n    },\n    { iconRef }\n  );\n  let classHeight = '';\n  if (window.innerHeight < 900) {\n    classHeight = 'heightMenu';\n  }\n\n  let showHeader;\n  if (isSearch) showHeader = <Header isSearch />;\n  else if (isSelect) showHeader = <Header isSelect />;\n  else showHeader = <Header />;\n\n  return (\n    <>\n      {isProcessing && <Loading />}\n      <div className={`wrapper-content ${isOpen ? 'open' : ''}`}>\n        <div className=\"wrapper-mobile\">\n          <div\n            className={`d-mobile btn-menu  ${isOpen ? 'show' : ''}`}\n            onClick={() => {\n              setIsOpen(!isOpen);\n            }}\n            tabIndex={0}\n            role=\"menuitem\"\n            onKeyPress={() => {}}\n            ref={iconRef}\n          >\n            <span className=\"icon\" />\n          </div>\n        </div>\n        <div className={`sidebar ${isOpen ? 'show' : ''} ${classHeight}`}>\n          <SidebarMenu innerRef={refMenu} />\n        </div>\n        <div className=\"main-content\" ref={mainContent}>\n          {showHeader}\n          <div className=\"content\">\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMainLayout.defaultProps = {\n  isSearch: false,\n  isSelect: false,\n  isProcessing: false,\n};\n\nexport default MainLayout;\n","// @flow\n// libs\nimport React, { memo } from 'react';\nimport images from 'themes/images';\n\ntype Props = {\n  title: string,\n  onClick?: Function,\n  className?: string,\n  id?: string,\n  descSub?: string,\n};\n\nexport const TitleHeader = ({\n  title,\n  onClick = () => {},\n  className = '',\n  id,\n  descSub = '',\n}: Props) => {\n  return (\n    <div id={id} className={`wrap-title ${className}`}>\n      <div\n        className=\"wrap-title__header\"\n        onClick={onClick}\n        onKeyPress={() => {}}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <img src={images.icon_title_header} alt=\"\" />\n        <div className=\"wrap-title__header__name\">\n          {title}\n          <span>{descSub}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTitleHeader.defaultProps = {\n  className: '',\n  onClick: () => {},\n  id: '',\n  descSub: '',\n};\n\nexport default memo<Props>(TitleHeader);\n","// @flow\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, memo } from 'react';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from 'commons/components/Button';\nimport ROUTERS from 'constants/routers';\nimport ModalPopup from 'commons/components/Modal';\nimport { formatValue } from 'helpers/';\nimport IMAGES from 'themes/images';\nimport { getListCompany, getListPosition } from '../../../device/redux';\nimport { resetAccountType, deleteAccount } from '../../redux';\n\ntype Props = {\n  accountDetail: {\n    name: string,\n    phone: string,\n    devices: [],\n    email: string,\n    username: string,\n    id: number,\n    roles: Array<{}>,\n    created_at: string,\n  },\n  history: {\n    push: Function,\n  },\n};\n\nconst FormDetail = ({ accountDetail, history }: Props) => {\n  const dispatch = useDispatch();\n\n  const errors = useSelector((state) => state?.account?.errors);\n  const type = useSelector((state) => state?.account?.type);\n\n  const [isUpdateFailed, setIsUpdateFailed] = useState(false);\n  // const [isCancel, setIsCancel] = useState(false);\n  const [isDelete, setIsDelete] = useState(false);\n\n  useEffect(() => {\n    dispatch(getListCompany());\n    dispatch(getListPosition());\n  }, []);\n\n  const renderListDeviceMaintain =\n    accountDetail &&\n    accountDetail.devices &&\n    accountDetail.devices.length > 0 &&\n    accountDetail.devices.map((item) => {\n      console.log(item?.company);\n      return (\n        <p className=\"item-device-maintain\">\n          <span>{item?.company?.com_name}</span>\n          <img\n            src={IMAGES.arrow_right}\n            alt=\"\"\n            className=\"mx-2 position-top-1\"\n          />\n          <span>{item?.position?.pos_name}</span>\n          <img\n            src={IMAGES.arrow_right}\n            alt=\"\"\n            className=\"mx-2 position-top-1\"\n          />\n          <span>{item?.ds_name}</span>\n        </p>\n      );\n    });\n\n  const errorsMessage =\n    errors &&\n    Object.values(errors).map((item, index) => {\n      return (\n        <ul className=\"error-list\" key={index}>\n          <li>{item && item[0]}</li>\n        </ul>\n      );\n    });\n\n  useEffect(() => {\n    switch (type) {\n      case 'accounts/updateAccountFailed':\n        setIsUpdateFailed(true);\n        break;\n      case 'accounts/deleteAccountSuccess':\n        history.push(ROUTERS.ACCOUNT_MANAGEMENT);\n        break;\n      default:\n        break;\n    }\n  }, [type]);\n\n  return (\n    <div>\n      <div className=\"table\">\n        <div className=\"row\">\n          <div className=\"col-2\">권한</div>\n          <div className=\"col-4\">\n            <div className=\"wrapper-radio\">\n              {accountDetail &&\n                accountDetail.roles &&\n                accountDetail.roles[0] &&\n                accountDetail?.roles[0]?.display_name}\n            </div>\n          </div>\n          <div className=\"col-2\">등록일</div>\n          <div className=\"col-4\">\n            {moment(accountDetail?.created_at).format('YYYY-MM-DD')}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-2\">이메일</div>\n          <div className=\"col-4\">\n            <div className=\"d-flex align-items-center h-100\">\n              {accountDetail?.email}\n            </div>\n          </div>\n          <div className=\"col-2\">전화번호</div>\n          <div className=\"col-4\">{formatValue(accountDetail?.phone)}</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-2\">아이디</div>\n          <div className=\"col-4\">\n            <div className=\"d-flex align-items-center h-100\">\n              {accountDetail?.username}\n            </div>\n          </div>\n          <div className=\"col-2\">비밀번호</div>\n          <div className=\"col-4\">********</div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-2\">담당자</div>\n          <div className=\"col-4 d-block mt-2\">{accountDetail?.name}</div>\n          <div className=\"col-2\">관리 기기</div>\n          <div className=\"col-4\">\n            <div>{renderListDeviceMaintain}</div>\n          </div>\n        </div>\n\n        <div className=\"account__btn-group\">\n          <Button\n            customClass=\"btn-delete\"\n            onClick={() => {\n              setIsDelete(true);\n            }}\n          >\n            삭제\n          </Button>\n          <Button\n            customClass=\"btn-modify\"\n            onClick={() => {\n              history.push(\n                `${ROUTERS.ACCOUNT_MANAGEMENT}/edit/${accountDetail?.id}`\n              );\n            }}\n          >\n            수정\n          </Button>\n          <Button\n            customClass=\"btn-cancel\"\n            onClick={() => {\n              history.push(ROUTERS.ACCOUNT_MANAGEMENT);\n            }}\n          >\n            목록\n          </Button>\n        </div>\n      </div>\n      {/* <ModalPopup\n        isOpen={isCancel}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() => {\n          setIsCancel(false);\n        }}\n        handleClose={() => {\n          setIsCancel(false);\n        }}\n        textBtnLeft=\"확인\"\n        textBtnRight=\"취소\"\n        isShowTwoBtn\n        customClassButton=\"btn-custom\"\n        handleSubmit={() => {\n          history.push(ROUTERS.ACCOUNT_MANAGEMENT);\n        }}\n      >\n        취소 시 수정 내역은 전부 사라집니다. 그래도 취소하시겠습니까?.\n      </ModalPopup> */}\n      <ModalPopup\n        isOpen={isDelete}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() => {\n          setIsDelete(false);\n        }}\n        handleClose={() => {\n          setIsDelete(false);\n        }}\n        textBtnLeft=\"확인\"\n        textBtnRight=\"취소\"\n        isShowTwoBtn\n        customClassButton=\"btn-custom\"\n        handleSubmit={() => {\n          dispatch(deleteAccount(accountDetail?.id));\n          setIsDelete(false);\n        }}\n      >\n        정말 삭제 하시겠습니까?\n      </ModalPopup>\n      <ModalPopup\n        isOpen={isUpdateFailed}\n        isShowHeader\n        title=\"Error\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() => {\n          setIsUpdateFailed(false);\n          dispatch(resetAccountType());\n        }}\n        handleClose={() => {\n          setIsUpdateFailed(false);\n          dispatch(resetAccountType());\n        }}\n        textBtnLeft=\"OK\"\n        customClassButton=\"btn-custom\"\n      >\n        {errorsMessage}\n      </ModalPopup>\n    </div>\n  );\n};\n\nexport default memo<Props>(FormDetail);\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n// import IMAGES from 'themes/images';\nimport MainLayout from 'layout/MainLayout';\nimport TitleSubHeader from 'commons/components/TitleHeader/titleSub';\nimport TitleHeader from 'commons/components/TitleHeader';\nimport FormDetail from './FormDetail';\nimport { getAccountList } from '../../redux';\n\ntype Props = {\n  match: {\n    params: {\n      id: any,\n    },\n  },\n  history: {\n    push: Function,\n  },\n};\nconst AccountDetail = ({ match, history }: Props) => {\n  const dispatch = useDispatch();\n  const accountDetail = useSelector((state) => state?.account?.accountDetail);\n  const isProcessing = useSelector((state) => state?.account?.isProcessing);\n\n  const { id } = match.params;\n\n  useEffect(() => {\n    dispatch(getAccountList({ id, isDetail: true }));\n  }, [id]);\n\n  return (\n    <MainLayout isProcessing={isProcessing}>\n      <div className=\"account\">\n        <TitleHeader\n          title=\"관리자 계정 확인\"\n          descSub=\"관리자 계정 정보를 확인하실 수 있습니다.\"\n        />\n        <TitleSubHeader title=\"계정 정보\" />\n\n        <FormDetail\n          history={history}\n          accountDetail={accountDetail}\n          // deviceList={accountDetail && accountDetail.devices}\n        />\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default AccountDetail;\n"],"sourceRoot":""}