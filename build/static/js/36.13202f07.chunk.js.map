{"version":3,"sources":["commons/components/TitleHeader/titleSub.js","commons/components/TitleHeader/index.js","commons/components/Modal/index.js","modules/accounts/components/management/FormDetail.js","modules/accounts/components/management/AccountDetail.js"],"names":["TitleSubHeader","title","onClick","className","id","titleLight","onKeyPress","role","tabIndex","src","images","icon_arrow","alt","defaultProps","memo","TitleHeader","descSub","icon_title_header","ModalPopup","children","animation","isOpen","size","handleClose","customClass","isShowIconClose","isShowHeader","isShowFooter","isShowTwoBtn","customClassButton","classNameBtnLeft","textBtnLeft","classNameBtnRight","textBtnRight","handleSubmit","isDisabledButton","handleCloseIcon","onHide","show","onKeyUp","icon_close","Body","Footer","type","isDisabled","accountDetail","history","dispatch","useDispatch","errors","useSelector","state","account","useState","isUpdateFailed","setIsUpdateFailed","isDelete","setIsDelete","useEffect","getListCompany","getListPosition","renderListDeviceMaintain","devices","length","map","item","company","com_name","IMAGES","arrow_right","position","pos_name","ds_name","errorsMessage","Object","values","index","key","push","ROUTERS","ACCOUNT_MANAGEMENT","roles","display_name","moment","created_at","format","email","phone","formatValue","username","name","Button","pathname","Modal","deleteAccount","resetAccountType","AccountDetail","match","isProcessing","params","getAccountList","isDetail","Loading"],"mappings":"6GACA,8DAYaA,EAAiB,SAAC,GAMjB,IALZC,EAKW,EALXA,MAKW,IAJXC,eAIW,MAJD,aAIC,MAHXC,iBAGW,MAHC,GAGD,EAFXC,EAEW,EAFXA,GAEW,IADXC,kBACW,MADE,GACF,EACX,OACE,yBAAKD,GAAIA,EAAID,UAAS,yBAAoBA,IACxC,yBACEA,UAAU,yBACVD,QAASA,EACTI,WAAY,aACZC,KAAK,SACLC,SAAS,KAET,yBAAKC,IAAKC,IAAOC,WAAYC,IAAI,KACjC,yBAAKT,UAAU,gCACZF,EACD,8BAAOI,OAOjBL,EAAea,aAAe,CAC5BV,UAAW,GACXD,QAAS,aACTG,WAAY,GACZD,GAAI,IAGSU,mBAAYd,I,iCC7C3B,8DAYae,EAAc,SAAC,GAMd,IALZd,EAKW,EALXA,MAKW,IAJXC,eAIW,MAJD,aAIC,MAHXC,iBAGW,MAHC,GAGD,EAFXC,EAEW,EAFXA,GAEW,IADXY,eACW,MADD,GACC,EACX,OACE,yBAAKZ,GAAIA,EAAID,UAAS,qBAAgBA,IACpC,yBACEA,UAAU,qBACVD,QAASA,EACTI,WAAY,aACZC,KAAK,SACLC,SAAS,KAET,yBAAKC,IAAKC,IAAOO,kBAAmBL,IAAI,KACxC,yBAAKT,UAAU,4BACZF,EACD,8BAAOe,OAOjBD,EAAYF,aAAe,CACzBV,UAAW,GACXD,QAAS,aACTE,GAAI,GACJY,QAAS,IAGIF,mBAAYC,I,iCC9C3B,+EA8BaG,EAAa,SAAC,GAAD,QACxBjB,aADwB,MAChB,GADgB,EAExBkB,EAFwB,EAExBA,SAFwB,IAGxBC,iBAHwB,SAIxBC,EAJwB,EAIxBA,OACAC,EALwB,EAKxBA,KACAC,EANwB,EAMxBA,YACAC,EAPwB,EAOxBA,YACAC,EARwB,EAQxBA,gBACAC,EATwB,EASxBA,aACAC,EAVwB,EAUxBA,aACAC,EAXwB,EAWxBA,aAXwB,IAYxBC,yBAZwB,MAYJ,GAZI,MAaxBC,wBAbwB,MAaL,GAbK,MAcxBC,mBAdwB,MAcV,GAdU,MAexBC,yBAfwB,MAeJ,GAfI,MAgBxBC,oBAhBwB,MAgBT,KAhBS,MAiBxBC,oBAjBwB,MAiBT,aAjBS,EAkBxBC,EAlBwB,EAkBxBA,iBAlBwB,IAmBxBC,uBAnBwB,MAmBN,aAnBM,SAqBxB,kBAAC,IAAD,CACEhB,UAAWA,EACXiB,OAAQ,WACN,OAAO,GAETC,KAAMjB,EACNC,KAAMA,EACNnB,UAAWqB,GAEVC,GACC,yBACEtB,UAAU,2BACVD,QAASkC,EACT7B,KAAK,SACLC,SAAU,EACV+B,QAASH,GAET,yBAAK3B,IAAKC,IAAO8B,WAAY5B,IAAI,MAIpCc,GAAgB,wBAAIvB,UAAU,eAAeF,GAE9C,kBAAC,IAAMwC,KAAP,KACIf,EAGA,yBAAKvB,UAAU,0BAA0BgB,GAFzC,yBAAKhB,UAAU,yBAAyBgB,IAK3CQ,GACC,kBAAC,IAAMe,OAAP,KACId,EASA,yBAAKzB,UAAU,gBACb,kBAAC,IAAD,CACEwC,KAAK,SACLnB,YAAW,uBAAkBK,EAAlB,YAAuCC,GAClD5B,QAASgC,EACTU,WAAYT,GAEXJ,GAEH,kBAAC,IAAD,CACEY,KAAK,SACLnB,YAAW,uBAAkBK,EAAlB,YAAuCG,GAClD9B,QAASqB,GAERU,IAtBL,kBAAC,IAAD,CACEU,KAAK,SACLnB,YAAaK,EACb3B,QAASqB,GAERU,MA0Bbf,EAAWL,aAAe,CACxBZ,MAAO,GACPmB,WAAW,EACXE,KAAM,GACNE,YAAa,GACbC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,kBAAmB,GACnBC,iBAAkB,GAClBC,YAAa,GACbC,kBAAmB,GACnBC,aAAc,KACdC,aAAc,aACdC,kBAAkB,EAClBC,gBAAiB,cAEJtB,mBAAYI,I,8KC2GZJ,kBAnNI,SAAC,GAAuC,IAAD,EAApC+B,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,QAC7BC,EAAWC,cAEXC,EAASC,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,eAAlB,aAAW,EAAgBH,UAChDN,EAAOO,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,eAAlB,aAAW,EAAgBT,QAJI,EAMZU,oBAAS,GANG,mBAMjDC,EANiD,KAMjCC,EANiC,OAQxBF,oBAAS,GARe,mBAQjDG,EARiD,KAQvCC,EARuC,KAUxDC,qBAAU,WACRX,EAASY,eACTZ,EAASa,iBACR,IAEH,IAAMC,EACJhB,GACAA,EAAciB,SACdjB,EAAciB,QAAQC,OAAS,GAC/BlB,EAAciB,QAAQE,KAAI,SAACC,GAAU,IAAD,IAClC,OACE,uBAAG9D,UAAU,wBACX,qCAAO8D,QAAP,IAAOA,GAAP,UAAOA,EAAMC,eAAb,aAAO,EAAeC,UACtB,yBACE1D,IAAK2D,IAAOC,YACZzD,IAAI,GACJT,UAAU,wBAEZ,qCAAO8D,QAAP,IAAOA,GAAP,UAAOA,EAAMK,gBAAb,aAAO,EAAgBC,UACvB,yBACE9D,IAAK2D,IAAOC,YACZzD,IAAI,GACJT,UAAU,wBAEZ,qCAAO8D,QAAP,IAAOA,OAAP,EAAOA,EAAMO,aAKfC,EACJxB,GACAyB,OAAOC,OAAO1B,GAAQe,KAAI,SAACC,EAAMW,GAC/B,OACE,wBAAIzE,UAAU,aAAa0E,IAAKD,GAC9B,4BAAKX,GAAQA,EAAK,QAkB1B,OAbAP,qBAAU,WACR,OAAQf,GACN,IAAK,+BACHY,GAAkB,GAClB,MACF,IAAK,gCACHT,EAAQgC,KAAKC,IAAQC,uBAKxB,CAACrC,IAGF,6BACE,yBAAKxC,UAAU,SACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SAAf,gBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBACZ0C,GACCA,EAAcoC,OACdpC,EAAcoC,MAAM,KAFrB,OAGCpC,QAHD,IAGCA,GAHD,UAGCA,EAAeoC,MAAM,UAHtB,aAGC,EAAyBC,gBAG/B,yBAAK/E,UAAU,SAAf,sBACA,yBAAKA,UAAU,SACZgF,IAAM,OAACtC,QAAD,IAACA,OAAD,EAACA,EAAeuC,YAAYC,OAAO,gBAG9C,yBAAKlF,UAAU,OACb,yBAAKA,UAAU,SAAf,sBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,mCAAf,OACG0C,QADH,IACGA,OADH,EACGA,EAAeyC,QAGpB,yBAAKnF,UAAU,SAAf,4BACA,yBAAKA,UAAU,UACC,OAAb0C,QAAa,IAAbA,OAAA,EAAAA,EAAe0C,QAASC,YAAW,OAAC3C,QAAD,IAACA,OAAD,EAACA,EAAe0C,SAGxD,yBAAKpF,UAAU,OACb,yBAAKA,UAAU,SAAf,sBACA,yBAAKA,UAAU,SACb,yBAAKA,UAAU,mCAAf,OACG0C,QADH,IACGA,OADH,EACGA,EAAe4C,WAGpB,yBAAKtF,UAAU,SAAf,4BACA,yBAAKA,UAAU,SAAf,aAEF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SAAf,sBACA,yBAAKA,UAAU,sBAAf,OAAqC0C,QAArC,IAAqCA,OAArC,EAAqCA,EAAe6C,MACpD,yBAAKvF,UAAU,SAAf,6BACA,yBAAKA,UAAU,SACb,6BAAM0D,KAIV,yBAAK1D,UAAU,sBACb,kBAACwF,EAAA,EAAD,CACEnE,YAAY,aACZtB,QAAS,WACPuD,GAAY,KAHhB,gBAQA,kBAACkC,EAAA,EAAD,CACEnE,YAAY,aACZtB,QAAS,WACP4C,EAAQgC,KAAK,CACXc,SAAS,GAAD,OAAKb,IAAQC,mBAAb,wBAAwCnC,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAezC,IAC/D+C,MAAO,CACL/C,GAAE,OAAEyC,QAAF,IAAEA,OAAF,EAAEA,EAAezC,QAN3B,gBAaA,kBAACuF,EAAA,EAAD,CACEnE,YAAY,aACZtB,QAAS,WACP4C,EAAQgC,KAAKC,IAAQC,sBAHzB,kBAgCJ,kBAACa,EAAA,EAAD,CACExE,OAAQmC,EACR9B,cAAY,EACZzB,MAAM,eACNwB,iBAAe,EACfE,cAAY,EACZS,gBAAiB,WACfqB,GAAY,IAEdlC,YAAa,WACXkC,GAAY,IAEd1B,YAAY,eACZE,aAAa,eACbL,cAAY,EACZC,kBAAkB,aAClBK,aAAc,WACZa,EAAS+C,YAAa,OAACjD,QAAD,IAACA,OAAD,EAACA,EAAezC,KACtCqD,GAAY,KAlBhB,mEAuBA,kBAACoC,EAAA,EAAD,CACExE,OAAQiC,EACR5B,cAAY,EACZzB,MAAM,QACNwB,iBAAe,EACfE,cAAY,EACZS,gBAAiB,WACfmB,GAAkB,GAClBR,EAASgD,gBAEXxE,YAAa,WACXgC,GAAkB,GAClBR,EAASgD,gBAEXhE,YAAY,KACZF,kBAAkB,cAEjB4C,OCxLMuB,UA/BO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOnD,EAAqB,EAArBA,QACxBC,EAAWC,cACXH,EAAgBK,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,eAAlB,aAAW,EAAgBP,iBACvDqD,EAAehD,aAAY,SAACC,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAOC,eAAlB,aAAW,EAAgB8C,gBAEpD9F,EAAO6F,EAAME,OAAb/F,GAMR,OAJAsD,qBAAU,WACRX,EAASqD,YAAe,CAAEhG,KAAIiG,UAAU,OACvC,CAACjG,IAGF,oCACG8F,GAAgB,kBAACI,EAAA,EAAD,MACjB,yBAAKnG,UAAU,WACb,kBAACY,EAAA,EAAD,CACEd,MAAM,+CACNe,QAAQ,iHAEV,kBAAC,IAAD,CAAgBf,MAAM,8BAEtB,kBAAC,EAAD,CACE6C,QAASA,EACTD,cAAeA","file":"static/js/36.13202f07.chunk.js","sourcesContent":["// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  titleLight?: string,\r\n};\r\n\r\nexport const TitleSubHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  titleLight = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title-sub ${className}`}>\r\n      <div\r\n        className=\"wrap-title-sub__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_arrow} alt=\"\" />\r\n        <div className=\"wrap-title-sub__header__name\">\r\n          {title}\r\n          <span>{titleLight}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleSubHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  titleLight: '',\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(TitleSubHeader);\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  descSub?: string,\r\n};\r\n\r\nexport const TitleHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  descSub = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title ${className}`}>\r\n      <div\r\n        className=\"wrap-title__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_title_header} alt=\"\" />\r\n        <div className=\"wrap-title__header__name\">\r\n          {title}\r\n          <span>{descSub}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  id: '',\r\n  descSub: '',\r\n};\r\n\r\nexport default memo<Props>(TitleHeader);\r\n","/* eslint-disable no-nested-ternary */\r\n// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Button from 'commons/components/Button';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title?: string,\r\n  children: any,\r\n  animation?: boolean,\r\n  isOpen: boolean,\r\n  size?: string,\r\n  handleClose: Function,\r\n  customClass?: string,\r\n  isShowIconClose?: boolean,\r\n  isShowHeader?: boolean,\r\n  isShowFooter?: boolean,\r\n  isShowTwoBtn?: boolean,\r\n  customClassButton?: string,\r\n  classNameBtnLeft?: string,\r\n  textBtnLeft?: string,\r\n  classNameBtnRight?: string,\r\n  textBtnRight?: string,\r\n  handleSubmit?: Function,\r\n  isDisabledButton?: boolean,\r\n  handleCloseIcon?: Function,\r\n};\r\n\r\nexport const ModalPopup = ({\r\n  title = '',\r\n  children,\r\n  animation = false,\r\n  isOpen,\r\n  size,\r\n  handleClose,\r\n  customClass,\r\n  isShowIconClose,\r\n  isShowHeader,\r\n  isShowFooter,\r\n  isShowTwoBtn,\r\n  customClassButton = '',\r\n  classNameBtnLeft = '',\r\n  textBtnLeft = '',\r\n  classNameBtnRight = '',\r\n  textBtnRight = 'OK',\r\n  handleSubmit = () => {},\r\n  isDisabledButton,\r\n  handleCloseIcon = () => {},\r\n}: Props) => (\r\n  <Modal\r\n    animation={animation}\r\n    onHide={() => {\r\n      return true;\r\n    }}\r\n    show={isOpen}\r\n    size={size}\r\n    className={customClass}\r\n  >\r\n    {isShowIconClose && (\r\n      <div\r\n        className=\"modal-content__iconClose\"\r\n        onClick={handleCloseIcon}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onKeyUp={handleCloseIcon}\r\n      >\r\n        <img src={images.icon_close} alt=\"\" />\r\n      </div>\r\n    )}\r\n\r\n    {isShowHeader && <h3 className=\"modal-title\">{title}</h3>}\r\n\r\n    <Modal.Body>\r\n      {!isShowHeader ? (\r\n        <div className=\"modal-body__no-header\">{children}</div>\r\n      ) : (\r\n        <div className=\"modal-body__has-header\">{children}</div>\r\n      )}\r\n    </Modal.Body>\r\n    {isShowFooter && (\r\n      <Modal.Footer>\r\n        {!isShowTwoBtn ? (\r\n          <Button\r\n            type=\"button\"\r\n            customClass={customClassButton}\r\n            onClick={handleClose}\r\n          >\r\n            {textBtnRight}\r\n          </Button>\r\n        ) : (\r\n          <div className=\"group-button\">\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnLeft}`}\r\n              onClick={handleSubmit}\r\n              isDisabled={isDisabledButton}\r\n            >\r\n              {textBtnLeft}\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnRight}`}\r\n              onClick={handleClose}\r\n            >\r\n              {textBtnRight}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Modal.Footer>\r\n    )}\r\n  </Modal>\r\n);\r\n\r\nModalPopup.defaultProps = {\r\n  title: '',\r\n  animation: false,\r\n  size: '',\r\n  customClass: '',\r\n  isShowIconClose: false,\r\n  isShowHeader: false,\r\n  isShowFooter: false,\r\n  isShowTwoBtn: false,\r\n  customClassButton: '',\r\n  classNameBtnLeft: '',\r\n  textBtnLeft: '',\r\n  classNameBtnRight: '',\r\n  textBtnRight: 'OK',\r\n  handleSubmit: () => {},\r\n  isDisabledButton: false,\r\n  handleCloseIcon: () => {},\r\n};\r\nexport default memo<Props>(ModalPopup);\r\n","// @flow\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, memo } from 'react';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Button from 'commons/components/Button';\r\nimport ROUTERS from 'constants/routers';\r\nimport ModalPopup from 'commons/components/Modal';\r\nimport { formatValue } from 'helpers/';\r\nimport IMAGES from 'themes/images';\r\nimport { getListCompany, getListPosition } from '../../../device/redux';\r\nimport { resetAccountType, deleteAccount } from '../../redux';\r\n\r\ntype Props = {\r\n  accountDetail: {\r\n    name: string,\r\n    phone: string,\r\n    devices: [],\r\n    email: string,\r\n    username: string,\r\n    id: number,\r\n    roles: Array<{}>,\r\n    created_at: string,\r\n  },\r\n  history: {\r\n    push: Function,\r\n  },\r\n};\r\n\r\nconst FormDetail = ({ accountDetail, history }: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const errors = useSelector((state) => state?.account?.errors);\r\n  const type = useSelector((state) => state?.account?.type);\r\n\r\n  const [isUpdateFailed, setIsUpdateFailed] = useState(false);\r\n  // const [isCancel, setIsCancel] = useState(false);\r\n  const [isDelete, setIsDelete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getListCompany());\r\n    dispatch(getListPosition());\r\n  }, []);\r\n\r\n  const renderListDeviceMaintain =\r\n    accountDetail &&\r\n    accountDetail.devices &&\r\n    accountDetail.devices.length > 0 &&\r\n    accountDetail.devices.map((item) => {\r\n      return (\r\n        <p className=\"item-device-maintain\">\r\n          <span>{item?.company?.com_name}</span>\r\n          <img\r\n            src={IMAGES.arrow_right}\r\n            alt=\"\"\r\n            className=\"mx-2 position-top-1\"\r\n          />\r\n          <span>{item?.position?.pos_name}</span>\r\n          <img\r\n            src={IMAGES.arrow_right}\r\n            alt=\"\"\r\n            className=\"mx-2 position-top-1\"\r\n          />\r\n          <span>{item?.ds_name}</span>\r\n        </p>\r\n      );\r\n    });\r\n\r\n  const errorsMessage =\r\n    errors &&\r\n    Object.values(errors).map((item, index) => {\r\n      return (\r\n        <ul className=\"error-list\" key={index}>\r\n          <li>{item && item[0]}</li>\r\n        </ul>\r\n      );\r\n    });\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case 'accounts/updateAccountFailed':\r\n        setIsUpdateFailed(true);\r\n        break;\r\n      case 'accounts/deleteAccountSuccess':\r\n        history.push(ROUTERS.ACCOUNT_MANAGEMENT);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [type]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"table\">\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">권한</div>\r\n          <div className=\"col-4\">\r\n            <div className=\"wrapper-radio\">\r\n              {accountDetail &&\r\n                accountDetail.roles &&\r\n                accountDetail.roles[0] &&\r\n                accountDetail?.roles[0]?.display_name}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">등록일</div>\r\n          <div className=\"col-4\">\r\n            {moment(accountDetail?.created_at).format('YYYY-MM-DD')}\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">이메일</div>\r\n          <div className=\"col-4\">\r\n            <div className=\"d-flex align-items-center h-100\">\r\n              {accountDetail?.email}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">전화번호</div>\r\n          <div className=\"col-4\">\r\n            {accountDetail?.phone && formatValue(accountDetail?.phone)}\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">아이디</div>\r\n          <div className=\"col-4\">\r\n            <div className=\"d-flex align-items-center h-100\">\r\n              {accountDetail?.username}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-2\">비밀번호</div>\r\n          <div className=\"col-4\">********</div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">담당자</div>\r\n          <div className=\"col-4 d-block mt-2\">{accountDetail?.name}</div>\r\n          <div className=\"col-2\">관리 기기</div>\r\n          <div className=\"col-4\">\r\n            <div>{renderListDeviceMaintain}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"account__btn-group\">\r\n          <Button\r\n            customClass=\"btn-delete\"\r\n            onClick={() => {\r\n              setIsDelete(true);\r\n            }}\r\n          >\r\n            삭제\r\n          </Button>\r\n          <Button\r\n            customClass=\"btn-modify\"\r\n            onClick={() => {\r\n              history.push({\r\n                pathname: `${ROUTERS.ACCOUNT_MANAGEMENT}/edit/${accountDetail?.id}`,\r\n                state: {\r\n                  id: accountDetail?.id,\r\n                },\r\n              });\r\n            }}\r\n          >\r\n            수정\r\n          </Button>\r\n          <Button\r\n            customClass=\"btn-cancel\"\r\n            onClick={() => {\r\n              history.push(ROUTERS.ACCOUNT_MANAGEMENT);\r\n            }}\r\n          >\r\n            목록\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {/* <ModalPopup\r\n        isOpen={isCancel}\r\n        isShowHeader\r\n        title=\"알림\"\r\n        isShowIconClose\r\n        isShowFooter\r\n        handleCloseIcon={() => {\r\n          setIsCancel(false);\r\n        }}\r\n        handleClose={() => {\r\n          setIsCancel(false);\r\n        }}\r\n        textBtnLeft=\"확인\"\r\n        textBtnRight=\"취소\"\r\n        isShowTwoBtn\r\n        customClassButton=\"btn-custom\"\r\n        handleSubmit={() => {\r\n          history.push(ROUTERS.ACCOUNT_MANAGEMENT);\r\n        }}\r\n      >\r\n        취소 시 수정 내역은 전부 사라집니다. 그래도 취소하시겠습니까?.\r\n      </ModalPopup> */}\r\n      <ModalPopup\r\n        isOpen={isDelete}\r\n        isShowHeader\r\n        title=\"알림\"\r\n        isShowIconClose\r\n        isShowFooter\r\n        handleCloseIcon={() => {\r\n          setIsDelete(false);\r\n        }}\r\n        handleClose={() => {\r\n          setIsDelete(false);\r\n        }}\r\n        textBtnLeft=\"확인\"\r\n        textBtnRight=\"취소\"\r\n        isShowTwoBtn\r\n        customClassButton=\"btn-custom\"\r\n        handleSubmit={() => {\r\n          dispatch(deleteAccount(accountDetail?.id));\r\n          setIsDelete(false);\r\n        }}\r\n      >\r\n        정말 삭제 하시겠습니까?\r\n      </ModalPopup>\r\n      <ModalPopup\r\n        isOpen={isUpdateFailed}\r\n        isShowHeader\r\n        title=\"Error\"\r\n        isShowIconClose\r\n        isShowFooter\r\n        handleCloseIcon={() => {\r\n          setIsUpdateFailed(false);\r\n          dispatch(resetAccountType());\r\n        }}\r\n        handleClose={() => {\r\n          setIsUpdateFailed(false);\r\n          dispatch(resetAccountType());\r\n        }}\r\n        textBtnLeft=\"OK\"\r\n        customClassButton=\"btn-custom\"\r\n      >\r\n        {errorsMessage}\r\n      </ModalPopup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(FormDetail);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TitleSubHeader from 'commons/components/TitleHeader/titleSub';\r\nimport TitleHeader from 'commons/components/TitleHeader';\r\nimport Loading from 'commons/components/Loading';\r\nimport FormDetail from './FormDetail';\r\nimport { getAccountList } from '../../redux';\r\n\r\ntype Props = {\r\n  match: {\r\n    params: {\r\n      id: any,\r\n    },\r\n  },\r\n  history: {\r\n    push: Function,\r\n  },\r\n};\r\nconst AccountDetail = ({ match, history }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const accountDetail = useSelector((state) => state?.account?.accountDetail);\r\n  const isProcessing = useSelector((state) => state?.account?.isProcessing);\r\n\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    dispatch(getAccountList({ id, isDetail: true }));\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {isProcessing && <Loading />}\r\n      <div className=\"account\">\r\n        <TitleHeader\r\n          title=\"관리자 계정 확인\"\r\n          descSub=\"관리자 계정 정보를 확인하실 수 있습니다.\"\r\n        />\r\n        <TitleSubHeader title=\"계정 정보\" />\r\n\r\n        <FormDetail\r\n          history={history}\r\n          accountDetail={accountDetail}\r\n          // deviceList={accountDetail && accountDetail.devices}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountDetail;\r\n"],"sourceRoot":""}