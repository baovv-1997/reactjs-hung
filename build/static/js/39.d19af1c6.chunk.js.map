{"version":3,"sources":["mockData/mainData.js","commons/components/Search/AutoSuggest.js","commons/components/Search/index.js","customHooks/useClickOutSide.js","commons/components/Header/ModalEvent.js","commons/components/Header/index.js","constants/listMenu.js","layout/Menu/Submenu.js","layout/Menu/MenuItem.js","layout/Menu/index.js","layout/MainLayout/index.js","modules/main/components/VitualData/index.js","modules/main/components/WeeklyElectric/index.js","modules/main/components/InfoReality/InfoRealityItem.js","modules/main/components/InfoReality/index.js","modules/main/components/TotalPower/TotalPowerItem.js","modules/main/components/TotalPower/index.js","modules/main/components/Dashboard/index.js"],"names":["mockLocationArea","id","area","location","top","left","mockDataMain","totalPower","type","name","value","infoReality","subName","unit","vitualData","mockDataArea","label","options","AutoSuggest","search","onClick","className","filter","indexOf","toLowerCase","map","option","key","role","defaultProps","memo","Search","placeholder","handleIconClick","customClass","onChange","setSearchTerm","useState","display","setDisplay","wrapperRef","useRef","handleClickOutside","event","wrap","current","contains","target","useEffect","window","addEventListener","removeEventListener","ref","e","src","images","icon_search","alt","searchValue","useClickOutside","handler","rest","listener","iconRef","document","ModalEvent","isShow","Header","isSearch","isSelect","eventCount","setOption","setIsShow","handleClick","Select","listItem","ops","disabled","isSearchable","blurInputOnSelect","icon_event","DASHBOARD","icon","IMAGES","iconGraph","to","ROUTERS","ROOT","items","sub","DASHBOARD_AREA","DASHBOARD_COMPANY","STATUS_COMPANY","STATUS_COMPANY_BY_AREA","OPERATION_STATUS_BY_COMPANY","OPERATION_STATUS_BY_AREA","STATISTICS_DEVELOP","STATISTICS_DEVELOP_AREA","OPERATION_STATISTICS_COMPANY","OPERATION_STATISTICS_AREA","SETUP","setup","MOCKUP","mockUp","TEST_DASHBOARD","TEST_MOCKUP_STATUS","TEST_MOCKUP_OPERATION","TEST_MOCKUP_STATISTICS_DEVELOP","TEST_MOCKUP_STATISTICS_OPERATION","SOLAR_DASHBOARD","TEST_SOLAR_STATUS_DEVELOP","TEST_SOLAR_STATUS_OPERATION","TEST_SOLAR_STATISTICS_DEVELOP","TEST_SOLAR_STATISTICS_OPERATION","itemSub","listNestSub","isActiveNestSub","handleClickItemSub","nestSubClicking","setNestSubClicking","renderNestedSub","length","item","activeNestItem","pathname","includes","stopPropagation","handleClickNestSub","tabIndex","onKeyPress","faChevronRight","listSub","handleClickItem","isActive","dispatch","useDispatch","subMenuClicking","useSelector","state","commons","setListNestSub","activeSub","setActiveSub","active","renderSub","nestSub","withRouter","menuClicking","setListSub","setMenuClicking","renderMenuList","listMenu","Button","btn_logout","MainLayout","children","isProcessing","isOpen","setIsOpen","refMenu","mainContent","showHeader","classHeight","innerHeight","Loading","innerRef","VitualData","data","WeeklyElectric","InfoRealityItem","InfoReality","TotalPowerItem","TotalPower","icon_day","icon_month","icon_year","icon_plus","MainPage","icon_title","icon_location","style"],"mappings":"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","file":"static/js/39.d19af1c6.chunk.js","sourcesContent":["const mockLocationArea = [\r\n  {\r\n    id: '0',\r\n    area: '별관 난간, 별관 지붕',\r\n    location: {\r\n      top: '489',\r\n      left: '561',\r\n    },\r\n  },\r\n  {\r\n    id: '1',\r\n    area: '발전동 서측',\r\n    location: {\r\n      top: '371',\r\n      left: '831',\r\n    },\r\n  },\r\n  {\r\n    id: '2',\r\n    area: '목업',\r\n    location: {\r\n      top: '371',\r\n      left: '987',\r\n    },\r\n  },\r\n  {\r\n    id: '3',\r\n    area: '본관 남측',\r\n    location: {\r\n      top: '575',\r\n      left: '646',\r\n    },\r\n  },\r\n  {\r\n    id: '4',\r\n    area: '자전거 캐노피',\r\n    location: {\r\n      top: '757',\r\n      left: '733',\r\n    },\r\n  },\r\n  {\r\n    id: '5',\r\n    area: '벤치 벽면',\r\n    location: {\r\n      top: '607',\r\n      left: '911',\r\n    },\r\n  },\r\n  {\r\n    id: '6',\r\n    area: '경비실 입면',\r\n    location: {\r\n      top: '808',\r\n      left: '865',\r\n    },\r\n  },\r\n  {\r\n    id: '7',\r\n    area: '정문 입구',\r\n    location: {\r\n      top: '795',\r\n      left: '928',\r\n    },\r\n  },\r\n  {\r\n    id: '8',\r\n    area: '방음벽',\r\n    location: {\r\n      top: '617',\r\n      left: '1156',\r\n    },\r\n  },\r\n  {\r\n    id: '9',\r\n    area: '외부울타리',\r\n    location: {\r\n      top: '484',\r\n      left: '1316',\r\n    },\r\n  },\r\n];\r\n\r\nconst mockDataMain = {\r\n  totalPower: [\r\n    {\r\n      id: 0,\r\n      type: 'day',\r\n      name: '금일 발전량',\r\n      value: 1000,\r\n    },\r\n    {\r\n      id: 1,\r\n      type: 'month',\r\n      name: '금월 발전량',\r\n      value: 25000,\r\n    },\r\n    {\r\n      id: 2,\r\n      type: 'year',\r\n      name: '금년 발전량',\r\n      value: 621000,\r\n    },\r\n    {\r\n      id: 3,\r\n      type: 'plus',\r\n      name: '누적 발전량',\r\n      value: 1621000,\r\n    },\r\n  ],\r\n  infoReality: [\r\n    {\r\n      id: 0,\r\n      name: 'PV전압',\r\n      subName: 'V1',\r\n      value: 404,\r\n      unit: 'V',\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'PV전류',\r\n      subName: 'l1',\r\n      value: 1,\r\n      unit: 'A',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '출력전압',\r\n      subName: 'v2',\r\n      value: 378,\r\n      unit: 'V',\r\n    },\r\n\r\n    {\r\n      id: 3,\r\n      name: '출력전류',\r\n      subName: 'l2',\r\n      value: 3,\r\n      unit: 'A',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: '출력',\r\n      subName: 'p',\r\n      value: 378,\r\n      unit: 'V',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: '역률',\r\n      subName: '',\r\n      value: 91,\r\n      unit: '%',\r\n    },\r\n  ],\r\n  vitualData: [\r\n    {\r\n      id: 0,\r\n      name: '수평 일사량',\r\n      unit: 'kWh/㎡·10초',\r\n      value: 22,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: '온도',\r\n      unit: '℃',\r\n      value: -18,\r\n    },\r\n  ],\r\n};\r\n\r\nconst mockDataArea = [\r\n  {\r\n    id: 15,\r\n    label: 'All',\r\n    value: 'All',\r\n  },\r\n  {\r\n    id: 0,\r\n    label: '별관 난간, 별관 지붕',\r\n    value: '별관 난간, 별관 지붕',\r\n  },\r\n  {\r\n    id: 1,\r\n    label: '발전동 서측',\r\n    value: '발전동 서측',\r\n  },\r\n  {\r\n    id: 2,\r\n    label: '목업',\r\n    value: '목업',\r\n  },\r\n  {\r\n    id: 3,\r\n    label: '본관 남측',\r\n    value: '본관 남측',\r\n  },\r\n  {\r\n    id: 4,\r\n    label: '본관 동측',\r\n    value: '본관 동측',\r\n  },\r\n  {\r\n    id: 5,\r\n    label: '본관 옥탑',\r\n    value: '본관 옥탑',\r\n  },\r\n  {\r\n    id: 6,\r\n    label: '주차장',\r\n    value: '주차장',\r\n  },\r\n  {\r\n    id: 7,\r\n    label: '자전거 캐노피',\r\n    value: '자전거 캐노피',\r\n  },\r\n  {\r\n    id: 8,\r\n    label: '벤치 벽면',\r\n    value: '벤치 벽면',\r\n  },\r\n  {\r\n    id: 9,\r\n    label: '경비실 입면',\r\n    value: '경비실 입면',\r\n  },\r\n  {\r\n    id: 10,\r\n    label: '정문 입구',\r\n    value: '정문 입구',\r\n  },\r\n  {\r\n    id: 11,\r\n    label: '정문 입구 보도',\r\n    value: '정문 입구 보도',\r\n  },\r\n  {\r\n    id: 12,\r\n    label: '정문 입구 도로',\r\n    value: '정문 입구 도로',\r\n  },\r\n  {\r\n    id: 13,\r\n    label: '방음벽',\r\n    value: '방음벽',\r\n  },\r\n  {\r\n    id: 14,\r\n    label: '외부울타리',\r\n    value: '외부울타리',\r\n  },\r\n];\r\n\r\nexport { mockDataMain, mockLocationArea, mockDataArea };\r\n","// @flow\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  search?: string,\r\n  onClick: Function,\r\n};\r\n\r\n// mockdata\r\nconst options = [\r\n  { id: 0, name: '본관 남측' },\r\n  { id: 1, name: '본관 동측' },\r\n  { id: 2, name: '본관 동측 창호' },\r\n  { id: 3, name: '본관 건물 앞' },\r\n  { id: 10, name: '본관 남측' },\r\n  { id: 11, name: '본관 동측' },\r\n  { id: 12, name: '본관 동측 창호' },\r\n  { id: 13, name: '본관 건물 앞' },\r\n  { id: 110, name: '본관 남측' },\r\n  { id: 111, name: '본관 동측' },\r\n  { id: 112, name: '본관 동측 창호' },\r\n  { id: 123, name: '본관 건물 앞' },\r\n];\r\n\r\nconst AutoSuggest = ({ search = '', onClick }: Props) => {\r\n  return (\r\n    <div className=\"auto-suggest\">\r\n      {options\r\n        .filter(({ name }) => name.indexOf(search.toLowerCase()) > -1)\r\n        .map((option) => (\r\n          <p\r\n            className=\"auto-suggest__item\"\r\n            key={option.id}\r\n            onClick={() => onClick(option.name)}\r\n            role=\"presentation\"\r\n          >\r\n            {option.name}\r\n          </p>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nAutoSuggest.defaultProps = {\r\n  search: '',\r\n};\r\n\r\nexport default memo<Props>(AutoSuggest);\r\n","// @flow\r\nimport React, { memo, useEffect, useRef, useState } from 'react';\r\nimport images from 'themes/images';\r\nimport AutoSuggest from './AutoSuggest';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  handleIconClick?: Function,\r\n  customClass?: string,\r\n  value?: string,\r\n  onChange?: Function,\r\n  setSearchTerm?: Function,\r\n};\r\n\r\nconst Search = ({\r\n  placeholder,\r\n  handleIconClick = () => {},\r\n  customClass = '',\r\n  value = '',\r\n  onChange = () => {},\r\n  setSearchTerm = () => {},\r\n}: Props) => {\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleClickOutside = (event) => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(event.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      window.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  });\r\n\r\n  const updateSearchInput = (searchValue) => {\r\n    setSearchTerm(searchValue);\r\n    setDisplay(false);\r\n  };\r\n\r\n  return (\r\n    <div ref={wrapperRef} className={`search ${customClass}`}>\r\n      <input\r\n        className=\"search__input\"\r\n        onClick={() => setDisplay(true)}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={(e) => onChange(e)}\r\n      />\r\n\r\n      <img\r\n        src={images.icon_search}\r\n        alt=\"Icon Search\"\r\n        className=\"search__icon\"\r\n        onClick={() => handleIconClick(value)}\r\n        role=\"presentation\"\r\n      />\r\n      {display && <AutoSuggest search={value} onClick={updateSearchInput} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.defaultProps = {\r\n  placeholder: '',\r\n  customClass: '',\r\n  value: '',\r\n  onChange: () => {},\r\n  setSearchTerm: () => {},\r\n  handleIconClick: () => {},\r\n};\r\n\r\nexport default memo<Props>(Search);\r\n","import { useEffect } from 'react';\r\n\r\n/**\r\n * Function: useOnClickOutside\r\n * A custom hook that use to trigger an event if have action click outside a ref's element.\r\n * @param {object} ref: a reference of element that we need to detect\r\n * @param {function} handler: a function that used to trigger event if have click event outside of element\r\n */\r\nconst useClickOutside = (ref, handler, { ...rest }) => {\r\n  useEffect(() => {\r\n    const listener = (event) => {\r\n      // Do nothing if clicking ref's element\r\n      if (\r\n        !ref.current ||\r\n        ref.current.contains(event.target) ||\r\n        !rest.iconRef.current ||\r\n        rest.iconRef.current.contains(event.target)\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      // Fire event if clicking outside ref's element\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener('mousedown', listener);\r\n    document.addEventListener('touchstart', listener);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener);\r\n      document.addEventListener('touchstart', listener);\r\n    };\r\n  }, [ref, handler, rest.iconRef]);\r\n};\r\n\r\nexport default useClickOutside;\r\n","// @flow\r\nimport React from 'react';\r\n\r\ntype Props = {\r\n  isShow?: boolean,\r\n  wrapperRef: any,\r\n};\r\nconst ModalEvent = ({ isShow = false, wrapperRef }: Props) => {\r\n  return (\r\n    <div\r\n      className={`modal__event ${isShow ? 'show-modal-event' : ''}`}\r\n      ref={wrapperRef}\r\n    >\r\n      <div className=\"modal__event-title\">이벤트 알림</div>\r\n\r\n      <div className=\"modal__event__group-content\">\r\n        <div className=\"modal__event__type-event\">실증단지</div>\r\n        <p className=\"modal__event__event-name\">\r\n          <span>[측정 문제 발생] </span>옥토끼이미징\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"modal__event__group-content\">\r\n        <div className=\"modal__event__type-event\">실증단지</div>\r\n        <p className=\"modal__event__event-name\">\r\n          <span>[측정 문제 발생] </span>옥토끼이미징\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModalEvent.defaultProps = {\r\n  isShow: false,\r\n};\r\n\r\nexport default ModalEvent;\r\n","// @flow\r\nimport React, { memo, useRef, useState } from 'react';\r\nimport { mockDataArea } from 'mockData/mainData';\r\nimport images from 'themes/images';\r\nimport useClickOutside from 'customHooks/useClickOutSide';\r\nimport Search from '../Search';\r\nimport SelectDropdown from '../Select';\r\nimport ModalEvent from './ModalEvent';\r\n\r\ntype Props = {\r\n  isSearch?: boolean,\r\n  isSelect?: boolean,\r\n  eventCount?: number,\r\n};\r\n\r\nconst Header = ({\r\n  isSearch = false,\r\n  isSelect = false,\r\n  eventCount = 0,\r\n}: Props) => {\r\n  const [option, setOption] = useState(mockDataArea[0]);\r\n  const [isShow, setIsShow] = useState(false);\r\n\r\n  const wrapperRef = useRef(null);\r\n  const iconRef = useRef(null);\r\n\r\n  // handle click outside event\r\n  useClickOutside(\r\n    wrapperRef,\r\n    () => {\r\n      if (isShow) {\r\n        setIsShow(false);\r\n      }\r\n    },\r\n    { iconRef }\r\n  );\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        {isSearch ? (\r\n          <Search\r\n            placeholder=\"회사명이나 구역명으로 검색해보세요.\"\r\n            handleClick={() => {}}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {isSelect ? (\r\n          <SelectDropdown\r\n            placeholder=\"List Selects\"\r\n            listItem={mockDataArea}\r\n            onChange={(ops) => {\r\n              setOption(ops);\r\n            }}\r\n            option={option}\r\n            disabled={false}\r\n            isSearchable={false}\r\n            blurInputOnSelect={false}\r\n            customClass=\"header__select\"\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <div className=\"header__event\">\r\n          <img\r\n            src={images.icon_event}\r\n            alt=\"Icon Event\"\r\n            className=\"header__icon\"\r\n            onClick={() => setIsShow(!isShow)}\r\n            role=\"presentation\"\r\n            ref={iconRef}\r\n          />\r\n          {eventCount > 0 ? (\r\n            <span className=\"header__notification\">eventCount</span>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"header__label-event\">\r\n          <span className=\"header__label-content\">이벤트발생</span>\r\n\r\n          {/* Modal event */}\r\n\r\n          <ModalEvent isShow={isShow} wrapperRef={wrapperRef} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  isSearch: false,\r\n  isSelect: false,\r\n  eventCount: 0,\r\n};\r\n\r\nexport default memo<Props>(Header);\r\n","import IMAGES from 'themes/images';\r\nimport ROUTERS from './routers';\r\n\r\nexport const DASHBOARD = {\r\n  id: 1,\r\n  label: '실증단지',\r\n  icon: IMAGES.iconGraph,\r\n  to: ROUTERS.ROOT,\r\n  items: [\r\n    {\r\n      id: 1,\r\n      name: '대시보드',\r\n      sub: [\r\n        {\r\n          id: 1,\r\n          name: '통합 대시보드',\r\n          to: ROUTERS.ROOT,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: '구역 대시보드',\r\n          to: ROUTERS.DASHBOARD_AREA,\r\n        },\r\n        {\r\n          id: 3,\r\n          name: '업체 대시보드',\r\n          to: ROUTERS.DASHBOARD_COMPANY,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '현황',\r\n      sub: [\r\n        {\r\n          id: 1,\r\n          name: '발전 현황',\r\n          sub: [\r\n            {\r\n              id: 1,\r\n              name: '업체별 현황',\r\n              to: ROUTERS.STATUS_COMPANY,\r\n            },\r\n            {\r\n              id: 2,\r\n              name: '구역별 현황',\r\n              to: ROUTERS.STATUS_COMPANY_BY_AREA,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: '운영 현황',\r\n          sub: [\r\n            {\r\n              id: 1,\r\n              name: '업체별 현황',\r\n              to: ROUTERS.OPERATION_STATUS_BY_COMPANY,\r\n            },\r\n            {\r\n              id: 2,\r\n              name: '구역별 현황',\r\n              to: ROUTERS.OPERATION_STATUS_BY_AREA,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 3,\r\n      name: '통계',\r\n      sub: [\r\n        {\r\n          id: 1,\r\n          name: '발전 통계',\r\n          sub: [\r\n            {\r\n              id: 1,\r\n              name: '업체별 통계',\r\n              to: ROUTERS.STATISTICS_DEVELOP,\r\n            },\r\n            {\r\n              id: 2,\r\n              name: '구역별 통계',\r\n              to: ROUTERS.STATISTICS_DEVELOP_AREA,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 2,\r\n          name: '운영 통계',\r\n          sub: [\r\n            {\r\n              id: 1,\r\n              name: '업체별 통계',\r\n              to: ROUTERS.OPERATION_STATISTICS_COMPANY,\r\n            },\r\n            {\r\n              id: 2,\r\n              name: '구역별 통계',\r\n              to: ROUTERS.OPERATION_STATISTICS_AREA,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport const SETUP = {\r\n  id: 2,\r\n  label: '기기 관리',\r\n  icon: IMAGES.setup,\r\n  items: [\r\n    { id: 1, name: '계정 관리', to: '/accounts' },\r\n    { id: 1, name: '기기 관리', to: '/devices' },\r\n  ],\r\n};\r\n\r\nexport const MOCKUP = {\r\n  id: 1,\r\n  label: '실증테스트',\r\n  icon: IMAGES.mockUp,\r\n  items: [\r\n    {\r\n      id: 1,\r\n      name: '테스트(목업)',\r\n      sub: [\r\n        {\r\n          id: 1,\r\n          name: '대시보드',\r\n          to: ROUTERS.TEST_DASHBOARD,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: '현황',\r\n          sub: [\r\n            {\r\n              id: 1,\r\n              name: '발전 현황',\r\n              to: ROUTERS.TEST_MOCKUP_STATUS,\r\n            },\r\n            {\r\n              id: 2,\r\n              name: '운영 현황',\r\n              to: ROUTERS.TEST_MOCKUP_OPERATION,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 3,\r\n          name: '통계',\r\n          sub: [\r\n            {\r\n              id: 1,\r\n              name: '발전 통계',\r\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_DEVELOP,\r\n            },\r\n            {\r\n              id: 2,\r\n              name: '운영 통계',\r\n              to: ROUTERS.TEST_MOCKUP_STATISTICS_OPERATION,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: '테스트(실증단지)',\r\n      sub: [\r\n        {\r\n          id: 1,\r\n          name: '대시보드',\r\n          to: ROUTERS.SOLAR_DASHBOARD,\r\n        },\r\n        {\r\n          id: 2,\r\n          name: '현황',\r\n          sub: [\r\n            {\r\n              id: 1,\r\n              name: '발전 현황',\r\n              to: ROUTERS.TEST_SOLAR_STATUS_DEVELOP,\r\n            },\r\n            {\r\n              id: 2,\r\n              name: '운영 현황',\r\n              to: ROUTERS.TEST_SOLAR_STATUS_OPERATION,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: 3,\r\n          name: '통계',\r\n          sub: [\r\n            {\r\n              id: 1,\r\n              name: '발전 통계',\r\n              to: ROUTERS.TEST_SOLAR_STATISTICS_DEVELOP,\r\n            },\r\n            {\r\n              id: 2,\r\n              name: '운영 통계',\r\n              to: ROUTERS.TEST_SOLAR_STATISTICS_OPERATION,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n","// @flow\r\n// libs\r\nimport React, { memo, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ntype Props = {\r\n  itemSub: {\r\n    to: string,\r\n    name: string,\r\n    sub: Array<{}>,\r\n  },\r\n  listNestSub: Array<{\r\n    id: any,\r\n    to: string,\r\n    name: string,\r\n  }>,\r\n  isActiveNestSub: boolean,\r\n  handleClickItemSub: Function,\r\n  location: {\r\n    pathname: string,\r\n  },\r\n};\r\n\r\nconst Submenu = ({\r\n  itemSub,\r\n  listNestSub,\r\n  isActiveNestSub,\r\n  handleClickItemSub,\r\n  location,\r\n}: Props) => {\r\n  const [nestSubClicking, setNestSubClicking] = useState({});\r\n\r\n  const handleClickNestSub = (e, item) => {\r\n    e.stopPropagation();\r\n    setNestSubClicking(item);\r\n  };\r\n\r\n  const renderNestedSub =\r\n    listNestSub &&\r\n    listNestSub.length > 0 &&\r\n    listNestSub.map((item) => {\r\n      const activeNestItem =\r\n        item.name === nestSubClicking.name ||\r\n        location.pathname.includes(item.to);\r\n\r\n      return (\r\n        <li\r\n          className=\"item\"\r\n          onClick={(e) => handleClickNestSub(e, item)}\r\n          tabIndex={0}\r\n          role=\"menuitem\"\r\n          onKeyPress={() => {}}\r\n          key={item.id}\r\n        >\r\n          <Link\r\n            to={item?.to}\r\n            className={`item__link item-link-nest-sub ${\r\n              activeNestItem ? 'active-link' : ''\r\n            }`}\r\n          >\r\n            <p className=\"item__link__label item-link-label-nest-sub\">\r\n              {item.name}\r\n            </p>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n\r\n  const { to, name, sub } = itemSub;\r\n\r\n  return (\r\n    <li\r\n      className=\"item\"\r\n      onClick={(e) => handleClickItemSub(e, itemSub, isActiveNestSub)}\r\n      tabIndex={0}\r\n      role=\"menuitem\"\r\n      onKeyPress={() => {}}\r\n    >\r\n      <Link\r\n        to={to}\r\n        className={`item__link ${\r\n          isActiveNestSub ? 'active' : ''\r\n        } item-link-sub ${isActiveNestSub && !sub ? 'active-link' : ''}`}\r\n      >\r\n        <p className=\"item__link__label item-link-label-sub\">{name}</p>\r\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\r\n      </Link>\r\n\r\n      <ul className={`menu__listsub ${isActiveNestSub ? 'open' : ''}`}>\r\n        {renderNestedSub}\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(Submenu);\r\n","// @flow\r\n// libs\r\nimport React, { memo, useState } from 'react';\r\nimport { setNestSubClicking } from 'commons/redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from 'react-router-dom';\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport Submenu from './Submenu';\r\n\r\ntype Props = {\r\n  item: {\r\n    id: number,\r\n    to: string,\r\n    name: string,\r\n    sub: Array<{}>,\r\n  },\r\n  listSub: Array<{\r\n    id: number,\r\n    name: string,\r\n    to: string,\r\n    sub: Array<{}>,\r\n  }>,\r\n  handleClickItem: Function,\r\n  isActive: boolean,\r\n  location: {\r\n    pathname: string,\r\n  },\r\n};\r\n\r\nconst MenuItem = ({\r\n  item,\r\n  listSub,\r\n  handleClickItem,\r\n  isActive,\r\n  location,\r\n}: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const subMenuClicking = useSelector((state) => state.commons.subMenuClicking);\r\n  const { to, name, sub } = item;\r\n  const [listNestSub, setListNestSub] = useState(subMenuClicking?.sub);\r\n  const [activeSub, setActiveSub] = useState(false);\r\n\r\n  const handleClickItemSub = (e, itemSub, active) => {\r\n    e.stopPropagation();\r\n    setActiveSub(active);\r\n    dispatch(setNestSubClicking(itemSub));\r\n    setListNestSub(itemSub.sub);\r\n    if (itemSub.name === subMenuClicking.name && active) {\r\n      setNestSubClicking({});\r\n    }\r\n  };\r\n\r\n  const renderSub =\r\n    listSub &&\r\n    listSub.length > 0 &&\r\n    listSub.map((itemSub) => {\r\n      const isActiveNestSub =\r\n        subMenuClicking.name === itemSub.name ||\r\n        location.pathname.includes(item.to);\r\n\r\n      return (\r\n        <Submenu\r\n          key={itemSub.id}\r\n          itemSub={itemSub}\r\n          nestSub={itemSub.sub}\r\n          handleClickItemSub={handleClickItemSub}\r\n          listNestSub={listNestSub}\r\n          isActiveNestSub={isActiveNestSub}\r\n          location={location}\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <li\r\n      className=\"item\"\r\n      onClick={() => handleClickItem(item, isActive)}\r\n      tabIndex={0}\r\n      role=\"menuitem\"\r\n      onKeyPress={() => {}}\r\n    >\r\n      <Link\r\n        to={to || '#'}\r\n        className={`item__link ${isActive ? 'active' : ''} ${\r\n          isActive && !sub ? 'active-link' : ''\r\n        }`}\r\n      >\r\n        <p className=\"item__link__label\">{name}</p>\r\n        {sub && <FontAwesomeIcon icon={faChevronRight} />}\r\n      </Link>\r\n      <ul className={`menu__listsub ${isActive || activeSub ? 'open' : ''}`}>\r\n        {renderSub}\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(MenuItem);\r\n","// @flow\r\n// libs\r\nimport React, { useState, memo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { DASHBOARD, SETUP, MOCKUP } from 'constants/listMenu';\r\nimport { setMenuClicking, setNestSubClicking } from 'commons/redux';\r\nimport MenuItem from './MenuItem';\r\nimport IMAGES from 'themes/images';\r\nimport { Button } from 'commons/components/Button';\r\n\r\ntype Props = {\r\n  location: {\r\n    pathname: string,\r\n  },\r\n};\r\n\r\nconst Menu = ({ location }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const menuClicking = useSelector((state) => state?.commons?.menuClicking);\r\n  const [listSub, setListSub] = useState(menuClicking?.sub);\r\n  const handleClickItem = (item, active) => {\r\n    setListSub(item.sub);\r\n\r\n    dispatch(setMenuClicking(item));\r\n\r\n    if (item.name === menuClicking.name && active) {\r\n      dispatch(setMenuClicking({}));\r\n    }\r\n    if (item.id !== menuClicking?.id) {\r\n      dispatch(setNestSubClicking({}));\r\n    }\r\n  };\r\n\r\n  const renderMenuList = (listMenu) => {\r\n    return listMenu.items.map((item) => {\r\n      const isActive =\r\n        menuClicking.name === item.name || location.pathname.includes(item.to);\r\n      return (\r\n        <MenuItem\r\n          key={item.id}\r\n          item={item}\r\n          listSub={listSub}\r\n          handleClickItem={handleClickItem}\r\n          menuClicking={menuClicking}\r\n          isActive={isActive}\r\n          location={location}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <h1 className=\"menu__head\">실증단지</h1>\r\n      <div className=\"wrapper-menu\">\r\n        <div className=\"menu__wraper-head\">\r\n          <p className=\"menu__info\">\r\n            <img src={DASHBOARD?.icon} alt=\"menu\" />\r\n            <span>{DASHBOARD?.label}</span>\r\n          </p>\r\n        </div>\r\n        <ul className=\"menu__list\">{renderMenuList(DASHBOARD)}</ul>\r\n\r\n        <div className=\"menu__wraper-head\">\r\n          <p className=\"menu__info\">\r\n            <img src={MOCKUP?.icon} alt=\"menu\" />\r\n            <span>{MOCKUP?.label}</span>\r\n          </p>\r\n        </div>\r\n        <ul className=\"menu__list\">{renderMenuList(MOCKUP)}</ul>\r\n\r\n        <div className=\"menu__wraper-head\">\r\n          <p className=\"menu__info\">\r\n            <img src={SETUP?.icon} alt=\"menu\" />\r\n            <span>{SETUP?.label}</span>\r\n          </p>\r\n        </div>\r\n        <ul className=\"menu__list\">{renderMenuList(SETUP)}</ul>\r\n        <div className=\"logout\">\r\n          <div className=\"name-user\">마스터님</div>\r\n          <Button customClass=\"btn-logout\">\r\n            <img src={IMAGES.btn_logout} alt=\"\" />\r\n            <div>로그아웃</div>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(memo<Props>(Menu));\r\n","/* eslint-disable jsx-a11y/control-has-associated-label */\r\nimport React, { useState, useRef } from 'react';\r\nimport useClickOutside from 'customHooks/useClickOutSide';\r\n// import Header from '../../components/Header';\r\nimport Loading from 'commons/components/Loading';\r\nimport Header from 'commons/components/Header';\r\n\r\nimport SidebarMenu from '../Menu';\r\n\r\n\r\ntype Props = {\r\n  children: React.AbstractComponent<{}>,\r\n  isSearch?: boolean,\r\n  isSelect?: boolean,\r\n  isProcessing?: boolean,\r\n};\r\n\r\nexport const MainLayout = ({\r\n  children,\r\n  isSearch = false,\r\n  isSelect = false,\r\n  isProcessing = false,\r\n}: Props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const refMenu = useRef(null);\r\n  const iconRef = useRef(null);\r\n  const mainContent = useRef(null);\r\n\r\n  useClickOutside(\r\n    refMenu,\r\n    () => {\r\n      if (isOpen) {\r\n        setIsOpen(false);\r\n      }\r\n    },\r\n    { iconRef }\r\n  );\r\n  let classHeight = '';\r\n  if (window.innerHeight < 900) {\r\n    classHeight = 'heightMenu';\r\n  }\r\n\r\n  let showHeader;\r\n  if (isSearch) showHeader = <Header isSearch />;\r\n  else if (isSelect) showHeader = <Header isSelect />;\r\n  else showHeader = <Header />;\r\n\r\n  return (\r\n    <>\r\n      {isProcessing && <Loading />}\r\n      <div className={`wrapper-content ${isOpen ? 'open' : ''}`}>\r\n        <div className=\"wrapper-mobile\">\r\n          <div\r\n            className={`d-mobile btn-menu  ${isOpen ? 'show' : ''}`}\r\n            onClick={() => {\r\n              setIsOpen(!isOpen);\r\n            }}\r\n            tabIndex={0}\r\n            role=\"menuitem\"\r\n            onKeyPress={() => {}}\r\n            ref={iconRef}\r\n          >\r\n            <span className=\"icon\" />\r\n          </div>\r\n        </div>\r\n        <div className={`sidebar ${isOpen ? 'show' : ''} ${classHeight}`}>\r\n          <SidebarMenu innerRef={refMenu} />\r\n        </div>\r\n        <div className=\"main-content\" ref={mainContent}>\r\n          {showHeader}\r\n          <div className=\"content\">\r\n            <div>{children}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nMainLayout.defaultProps = {\r\n  isSearch: false,\r\n  isSelect: false,\r\n  isProcessing: false,\r\n};\r\n\r\nexport default MainLayout;\r\n","// @flow\r\nimport React from 'react';\r\n\r\ntype Props = {\r\n  data: any,\r\n};\r\n\r\nconst VitualData = ({ data }: Props) => {\r\n  return (\r\n    <div className=\"vitual-data main-card\">\r\n      <div className=\"vitual-data__header main-card__header\">\r\n        <div className=\"vitual-data__title main-card__title\">기상데이터</div>\r\n      </div>\r\n\r\n      <div className=\"vitual-data__body main-card__body\">\r\n        {data.map((item) => (\r\n          <div className=\"vitual-data__item\" key={item.id}>\r\n            <div className=\"vitual-data__group-name\">\r\n              <p className=\"vitual-data__name\">{item.name}</p>\r\n              <p className=\"vitual-data__unit\">{item.unit}</p>\r\n            </div>\r\n            <div className=\"vitual-data__param\">{item.value}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VitualData;\r\n","import React from 'react';\r\n\r\nconst WeeklyElectric = () => {\r\n  return (\r\n    <div className=\"weekly-electric main-card\">\r\n      <div className=\"weekly-electric__header main-card__header\">\r\n        <div className=\"weekly-electric__title main-card__title\">\r\n          주간 발전 현황\r\n        </div>\r\n        <div className=\"weekly-electric__unit main-card__unit\">kWh</div>\r\n      </div>\r\n\r\n      <div className=\"weekly-electric__body main-card__body\">abc</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyElectric;\r\n","// @flow\r\nimport React from 'react';\r\n\r\ntype Props = {\r\n  name?: string,\r\n  subName?: string,\r\n  value?: number,\r\n  unit?: string,\r\n};\r\n\r\nconst InfoRealityItem = ({\r\n  name = '',\r\n  subName = '',\r\n  value = 0,\r\n  unit = '',\r\n}: Props) => {\r\n  return (\r\n    <div className=\"info-reality__item\">\r\n      <div className=\"info-reality__group-name\">\r\n        <p className=\"info-reality__name\">{name}</p>\r\n        <span className=\"info-reality__sub-name\">{subName}</span>\r\n      </div>\r\n      <div className=\"info-reality__group-value\">\r\n        <p className=\"info-reality__value\">{value}</p>\r\n        <span className=\"info-reality__unit\">{unit}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nInfoRealityItem.defaultProps = {\r\n  name: '',\r\n  subName: '',\r\n  value: 0,\r\n  unit: '',\r\n};\r\n\r\nexport default InfoRealityItem;\r\n","// @flow\r\nimport React from 'react';\r\nimport InfoRealityItem from './InfoRealityItem';\r\n\r\ntype Props = {\r\n  data: any,\r\n};\r\n\r\nconst InfoReality = ({ data }: Props) => {\r\n  return (\r\n    <div className=\"info-reality main-card\">\r\n      <div className=\"info-reality__header main-card__header\">\r\n        <div className=\"info-reality__title main-card__title\">\r\n          실시간 계측 정보\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"info-reality__body main-card__body\">\r\n        {data.map((item) => (\r\n          <InfoRealityItem\r\n            name={item.name}\r\n            subName={item.subName}\r\n            value={item.value}\r\n            unit={item.unit}\r\n            key={item.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoReality;\r\n","// @flow\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  icon?: any,\r\n  name?: string,\r\n  value?: number,\r\n  customClass?: string,\r\n};\r\n\r\nconst TotalPowerItem = ({\r\n  icon = '',\r\n  name = '',\r\n  value = 0,\r\n  customClass = '',\r\n}: Props) => {\r\n  return (\r\n    <div className={`total-power__item ${customClass}`}>\r\n      <div className=\"total-power__content-header\">\r\n        <img src={icon} alt=\"\" className=\"total-power__icon\" />\r\n        <p className=\"total-power__item-name\">{name}</p>\r\n      </div>\r\n      <p className=\"total-power__item-value\">{value}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nTotalPowerItem.defaultProps = {\r\n  name: '',\r\n  value: 0,\r\n  customClass: '',\r\n  icon: '',\r\n};\r\n\r\nexport default memo<Props>(TotalPowerItem);\r\n","// @flow\r\nimport React from 'react';\r\nimport images from 'themes/images';\r\nimport TotalPowerItem from './TotalPowerItem';\r\n\r\ntype Props = {\r\n  data: any,\r\n};\r\n\r\nexport const TotalPower = ({ data }: Props) => {\r\n  return (\r\n    <div className=\"total-power main-card\">\r\n      <div className=\"total-power__header main-card__header\">\r\n        <div className=\"total-power__title main-card__title\">총 발전 현황</div>\r\n        <div className=\"total-power__unit main-card__unit\">kWh</div>\r\n      </div>\r\n\r\n      <div className=\"total-power__body main-card__body\">\r\n        {data &&\r\n          data.map((item) => {\r\n            switch (item.type) {\r\n              case 'day':\r\n                return (\r\n                  <TotalPowerItem\r\n                    icon={images.icon_day}\r\n                    name={item.name}\r\n                    value={item.value}\r\n                    customClass=\"bg-color-day\"\r\n                    key={item.id}\r\n                  />\r\n                );\r\n\r\n              case 'month':\r\n                return (\r\n                  <TotalPowerItem\r\n                    icon={images.icon_month}\r\n                    name={item.name}\r\n                    value={item.value}\r\n                    customClass=\"bg-color-month\"\r\n                    key={item.id}\r\n                  />\r\n                );\r\n\r\n              case 'year':\r\n                return (\r\n                  <TotalPowerItem\r\n                    icon={images.icon_year}\r\n                    name={item.name}\r\n                    value={item.value}\r\n                    customClass=\"bg-color-year\"\r\n                    key={item.id}\r\n                  />\r\n                );\r\n\r\n              case 'plus':\r\n                return (\r\n                  <TotalPowerItem\r\n                    icon={images.icon_plus}\r\n                    name={item.name}\r\n                    value={item.value}\r\n                    customClass=\"bg-color-plus\"\r\n                    key={item.id}\r\n                  />\r\n                );\r\n\r\n              default:\r\n                return <TotalPowerItem key={item.id} />;\r\n            }\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TotalPower;\r\n","import React from 'react';\r\nimport MainLayout from 'layout/MainLayout';\r\nimport { mockDataMain, mockLocationArea } from 'mockData/mainData';\r\n\r\nimport IMAGES from 'themes/images';\r\nimport InfoReality from '../InfoReality';\r\nimport TotalPower from '../TotalPower';\r\nimport VitualData from '../VitualData';\r\nimport WeeklyElectric from '../WeeklyElectric';\r\n\r\nconst MainPage = () => {\r\n  const { totalPower, infoReality, vitualData } = mockDataMain;\r\n  return (\r\n    <MainLayout isSearch>\r\n      <div className=\"main-page\">\r\n        {/* thong tin  */}\r\n\r\n        <div className=\"current-electric\">\r\n          <div className=\"current-electric__title\">\r\n            <img src={IMAGES.icon_title} alt=\"Title\" className=\"icon-title\" />\r\n            <p className=\"title\">전체</p>\r\n            <div className=\"line\" />\r\n          </div>\r\n          <TotalPower data={totalPower} />\r\n          <WeeklyElectric />\r\n          <InfoReality data={infoReality} />\r\n          <VitualData data={vitualData} />\r\n        </div>\r\n\r\n        {mockLocationArea.map((item) => (\r\n          <img\r\n            src={IMAGES.icon_location}\r\n            alt=\"\"\r\n            className=\"location\"\r\n            style={{\r\n              top: `${item.location?.top}px`,\r\n              left: `${item.location?.left}px`,\r\n            }}\r\n            key={item.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}