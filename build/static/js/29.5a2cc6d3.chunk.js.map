{"version":3,"sources":["commons/components/CheckBox/index.js","../node_modules/react-bootstrap/esm/Table.js","commons/components/MultipleCheckbox/index.js","commons/components/Table/ModalSortTable.js","commons/components/Table/TableHead.js","commons/components/Table/TableRow.js","commons/components/Table/index.js","constants/optionCheckbox.js","commons/components/Radio/index.js","commons/components/Input/index.js","constants/tableHeadData.js","modules/accounts/components/management/index.js"],"names":["CheckBox","id","name","label","disabled","customClass","handleToggleCheckbox","isChecked","onKeyPress","subLabel","className","htmlFor","type","value","checked","onChange","defaultProps","memo","Table","React","forwardRef","_ref","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","listCheckBox","submitValue","optionDefault","useState","checkedItems","setCheckedItems","handleChange","event","target","includes","filter","item","map","key","toString","ModalSortTable","handleCheckboxSort","listOption","listValueOption","setListValueOption","list","Button","onClick","TableHead","listItems","showModalSort","handleShowModalSorting","index","keyItem","role","tabIndex","src","images","ico_event2","alt","isShow","TableRow","rowItem","onClickTableRow","isClickTableColumn","isShowId","rowActive","onClickTableColumn","activeClass","Object","keys","TableData","tableHeads","tableBody","onClickRow","handleClickBtnDetail","renderBodyTable","length","colSpan","DeviceManagementOptionSeach","registerDeviceOptions","accountOptions","operator_event_filter","Radio","labelRadio","e","Input","placeholder","errorMsg","readOnly","onBlur","onBlurWrapper","onFocusWrapper","onClickWrapper","customClassName","customClassWrap","customClassLabel","onFocus","onPaste","isShowIcon","deleteValue","request","innerRef","pattern","inputMode","maxLength","autocomplete","autoFocus","onKeyUp","autoCapitalize","autoComplete","IMAGES","icon_close","DEVICE_HEAD_TABLE","ACCOUNT_HEAD","history","dispatch","useDispatch","accountList","useSelector","state","account","isProcessing","totalPage","perPage","currentOption","setCurrentOption","valueSearch","setValueSearch","activePage","setActivePage","onChangeOption","renderRadioList","useEffect","getAccountList","page","handleSubmitSearch","keyword","iconTitle","handleKeyDown","icon_search","push","pathname","ROUTERS","ACCOUNT_MANAGEMENT","no","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","itemClass","linkClass","firstPageText","double_arrow_left","lastPageText","double_arrow_right","prevPageText","arrow_left","nextPageText","arrow_right1"],"mappings":"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","file":"static/js/29.5a2cc6d3.chunk.js","sourcesContent":["// @flow\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  id?: any,\r\n  name?: string,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  customClass?: string,\r\n  handleToggleCheckbox: Function,\r\n  isChecked?: boolean,\r\n  onKeyPress?: Function,\r\n  subLabel?: string,\r\n};\r\n\r\nexport const CheckBox = ({\r\n  id,\r\n  name,\r\n  label,\r\n  disabled,\r\n  customClass = '',\r\n  handleToggleCheckbox,\r\n  isChecked = false,\r\n  onKeyPress = () => {},\r\n  subLabel = '',\r\n}: Props) => {\r\n  return (\r\n    <div\r\n      className={`${customClass} checkbox ${\r\n        isChecked ? 'checkbox--checked' : ''\r\n      }`}\r\n    >\r\n      <label className=\"checkbox__label\" htmlFor={id}>\r\n        <input\r\n          className=\"checkbox__input\"\r\n          type=\"checkbox\"\r\n          id={id}\r\n          name={name}\r\n          value={label}\r\n          checked={isChecked}\r\n          disabled={disabled}\r\n          onKeyPress={onKeyPress}\r\n          onChange={handleToggleCheckbox}\r\n        />\r\n        <span>\r\n          {label}\r\n          <i>{subLabel}</i>\r\n        </span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckBox.defaultProps = {\r\n  id: '',\r\n  name: '',\r\n  label: '',\r\n  disabled: false,\r\n  customClass: '',\r\n  isChecked: false,\r\n  onKeyPress: () => {},\r\n  subLabel: '',\r\n};\r\n\r\nexport default memo<Props>(CheckBox);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","// @flow\r\nimport React, { useState, memo } from 'react';\r\nimport CheckBox from '../CheckBox';\r\n\r\ntype Props = {\r\n  listCheckBox: Array<{\r\n    name: string,\r\n    key: string,\r\n    label: string,\r\n  }>,\r\n  label: string,\r\n  handleCheckboxDefault: Function,\r\n  customClass: string,\r\n  optionDefault: Array<string>,\r\n};\r\nexport const MutipleCheckbox = ({\r\n  listCheckBox,\r\n  label,\r\n  customClass,\r\n  submitValue,\r\n  optionDefault,\r\n}: Props) => {\r\n  const [checkedItems, setCheckedItems] = useState(optionDefault);\r\n  const handleChange = (event) => {\r\n    const { id } = event.target;\r\n\r\n    if (!checkedItems.includes(id)) {\r\n      setCheckedItems([...checkedItems, id]);\r\n      submitValue([...checkedItems, id]);\r\n    } else {\r\n      setCheckedItems(checkedItems.filter((item) => item !== id));\r\n      submitValue(checkedItems.filter((item) => item !== id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div>{label}</div>\r\n      {listCheckBox.map((item) => (\r\n        <div className={`${customClass}`}>\r\n          <CheckBox\r\n            name={item.name}\r\n            isChecked={checkedItems.includes(item.key.toString())}\r\n            handleToggleCheckbox={handleChange}\r\n            id={item.key}\r\n            label={item?.label}\r\n          />\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(MutipleCheckbox);\r\n","// @flow\r\nimport React, { memo, useState } from 'react';\r\nimport Button from 'commons/components/Button';\r\nimport MutipleCheckbox from 'commons/components/MultipleCheckbox';\r\n\r\ntype Props = {\r\n  handleCheckboxSort: Function,\r\n  listOption?: Array<{}>,\r\n  optionDefault?: Array<string>,\r\n};\r\n\r\nconst ModalSortTable = ({\r\n  handleCheckboxSort,\r\n  listOption = [],\r\n  optionDefault = [],\r\n}: Props) => {\r\n  const [listValueOption, setListValueOption] = useState([]);\r\n  const handleGetValue = (list) => {\r\n    setListValueOption(list);\r\n  };\r\n  return (\r\n    <div className=\"modal-sorting\">\r\n      <div className=\"checkbox-header\">이벤트명 필터</div>\r\n      <div className=\"list-checkbox\">\r\n        <MutipleCheckbox\r\n          listCheckBox={listOption}\r\n          submitValue={handleGetValue}\r\n          optionDefault={optionDefault}\r\n        />\r\n      </div>\r\n      <Button onClick={() => handleCheckboxSort(listValueOption)}>등록</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nModalSortTable.defaultProps = {\r\n  optionDefault: [],\r\n  listOption: [],\r\n};\r\n\r\nexport default memo<Props>(ModalSortTable);\r\n","// @flow\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\nimport ModalSortTable from './ModalSortTable';\r\n\r\ntype Props = {\r\n  listItems: Array<{ id: number, name: string }>,\r\n  showModalSort?: any,\r\n  handleCheckboxSort?: Function,\r\n  handleShowModalSorting?: Function,\r\n  listOption: Array<{}>,\r\n  optionDefault?: Array<string>,\r\n};\r\n\r\nconst TableHead = ({\r\n  listItems,\r\n  showModalSort,\r\n  handleCheckboxSort,\r\n  handleShowModalSorting,\r\n  listOption,\r\n  optionDefault = [],\r\n}: Props) => (\r\n  <tr>\r\n    {listItems &&\r\n      listItems.map((item, index) => (\r\n        <th\r\n          key={item.id}\r\n          className={`${\r\n            showModalSort && showModalSort.keyItem === index\r\n              ? 'cursor-pointer w-188'\r\n              : ''\r\n          }`}\r\n        >\r\n          <div\r\n            onKeyPress={() => {}}\r\n            role=\"button\"\r\n            tabIndex={index}\r\n            onClick={() =>\r\n              showModalSort && showModalSort.keyItem === index\r\n                ? handleShowModalSorting && handleShowModalSorting()\r\n                : {}\r\n            }\r\n          >\r\n            {item && item.name}\r\n            {showModalSort && showModalSort.keyItem === index && (\r\n              <img src={images.ico_event2} alt=\"\" />\r\n            )}\r\n          </div>\r\n          {showModalSort &&\r\n            showModalSort.isShow &&\r\n            showModalSort.keyItem === index && (\r\n              <div>\r\n                <ModalSortTable\r\n                  handleCheckboxSort={handleCheckboxSort}\r\n                  listOption={listOption}\r\n                  optionDefault={optionDefault}\r\n                />\r\n              </div>\r\n            )}\r\n        </th>\r\n      ))}\r\n  </tr>\r\n);\r\n\r\nTableHead.defaultProps = {\r\n  showModalSort: null,\r\n  handleCheckboxSort: () => {},\r\n  handleShowModalSorting: () => {},\r\n  optionDefault: [],\r\n};\r\n\r\nexport default memo<Props>(TableHead);\r\n","// @flow\r\n\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  rowItem: Object,\r\n  onClickTableRow?: Function,\r\n  isShowId?: boolean,\r\n  rowActive?: Object,\r\n  isClickTableColumn?: boolean,\r\n  onClickTableColumn?: Function,\r\n};\r\n\r\nconst TableRow = ({\r\n  rowItem,\r\n  onClickTableRow = () => {},\r\n  isClickTableColumn = false,\r\n  isShowId = false,\r\n  rowActive = {},\r\n  onClickTableColumn = () => {},\r\n}: Props) => {\r\n  const fieldId = 'id';\r\n  let activeClass = '';\r\n  if (onClickTableRow) {\r\n    activeClass = 'row-cursor-pointer';\r\n  } else if (rowActive && rowActive.id === rowItem.id) {\r\n    activeClass = 'row-active';\r\n  }\r\n  return (\r\n    <tr\r\n      onClick={() => onClickTableRow && onClickTableRow(rowItem)}\r\n      className={activeClass}\r\n    >\r\n      {Object.keys(rowItem).map((item) => (\r\n        <td\r\n          key={item}\r\n          className={`${\r\n            // eslint-disable-next-line no-nested-ternary\r\n            isShowId && item === fieldId\r\n              ? 'd-none'\r\n              : isClickTableColumn\r\n              ? 'row-cursor-pointer'\r\n              : ''\r\n          }`}\r\n          onClick={() => isClickTableColumn && onClickTableColumn(rowItem)}\r\n          onKeyPress={() => isClickTableColumn && onClickTableColumn(rowItem)}\r\n          role=\"presentation\"\r\n        >\r\n          {rowItem[item]}\r\n        </td>\r\n      ))}\r\n    </tr>\r\n  );\r\n};\r\nTableRow.defaultProps = {\r\n  onClickTableRow: null,\r\n  isShowId: false,\r\n  onClickTableColumn: () => {},\r\n  isClickTableColumn: false,\r\n  rowActive: {},\r\n};\r\nexport default memo<Props>(TableRow);\r\n","// @flow\r\nimport React, { memo } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport TableHead from './TableHead';\r\nimport TableRow from './TableRow';\r\n\r\ntype Props = {\r\n  tableHeads: Array<{ id: number, name: string }>,\r\n  tableBody: Array<{ id: number }>,\r\n  onClickRow?: Function,\r\n  handleClickBtnDetail?: Function,\r\n  isShowId?: boolean,\r\n  rowActive?: Function,\r\n  onClickTableColumn?: Function,\r\n  showModalSort?: any,\r\n  handleCheckboxSort?: Function,\r\n  handleShowModalSorting?: Function,\r\n  listOption?: Array<{}>,\r\n  optionDefault?: Array<string>,\r\n};\r\n\r\nconst TableData = ({\r\n  tableHeads,\r\n  tableBody,\r\n  onClickRow = () => {},\r\n  handleClickBtnDetail = () => {},\r\n  isShowId = false,\r\n  rowActive = {},\r\n  onClickTableColumn = () => {},\r\n  showModalSort = '',\r\n  handleCheckboxSort = () => {},\r\n  handleShowModalSorting = () => {},\r\n  listOption = [],\r\n  optionDefault = [],\r\n}: Props) => {\r\n  const renderBodyTable =\r\n    tableBody &&\r\n    tableBody.map((item, index) => (\r\n      <TableRow\r\n        onClickTableRow={onClickRow}\r\n        rowItem={item}\r\n        key={item.id || index}\r\n        rowActive={rowActive}\r\n        handleClickBtnDetail={handleClickBtnDetail}\r\n        isShowId={isShowId}\r\n        onClickTableColumn={onClickTableColumn}\r\n      />\r\n    ));\r\n\r\n  const renderBody = () => {\r\n    if (renderBodyTable && renderBodyTable.length > 0) {\r\n      return renderBodyTable;\r\n    }\r\n    return (\r\n      <tr className=\"p-3 text-center table-no-data w-100\">\r\n        <td colSpan={tableHeads && tableHeads.length}>\r\n          <p className=\"mb-0 text-center\">데이터가 존재하지 않습니다.</p>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Table striped bordered hover responsive>\r\n      <thead>\r\n        <TableHead\r\n          listItems={tableHeads}\r\n          showModalSort={showModalSort}\r\n          handleCheckboxSort={handleCheckboxSort}\r\n          handleShowModalSorting={handleShowModalSorting}\r\n          listOption={listOption}\r\n          optionDefault={optionDefault}\r\n        />\r\n      </thead>\r\n      <tbody>{renderBody()}</tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nTableData.defaultProps = {\r\n  onClickRow: null,\r\n  rowActive: null,\r\n  handleClickBtnDetail: () => {},\r\n  isShowId: false,\r\n  onClickTableColumn: () => {},\r\n  showModalSort: '',\r\n  handleCheckboxSort: () => {},\r\n  handleShowModalSorting: () => {},\r\n  listOption: [],\r\n  optionDefault: [],\r\n};\r\nexport default memo<Props>(TableData);\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const DeviceManagementOptionSeach = [\r\n  {\r\n    name: 'all',\r\n    key: 'all',\r\n    label: '전체',\r\n  },\r\n  {\r\n    name: 'company',\r\n    key: 'com_id',\r\n    label: '업체',\r\n  },\r\n  {\r\n    name: 'position',\r\n    key: 'pos_id',\r\n    label: '설치위치',\r\n  },\r\n];\r\n\r\nexport const registerDeviceOptions = [\r\n  {\r\n    name: 'solar-monitoring',\r\n    key: '0',\r\n    label: '실증단지',\r\n  },\r\n  {\r\n    name: 'test-solar-monitoring',\r\n    key: '2',\r\n    label: '테스트(실증단지)',\r\n  },\r\n  {\r\n    name: 'test-mockup',\r\n    key: '3',\r\n    label: '테스트(목업)',\r\n  },\r\n];\r\n\r\nexport const accountOptions = [\r\n  {\r\n    name: 'all',\r\n    key: 'all',\r\n    label: '전체',\r\n  },\r\n  {\r\n    name: 'admin',\r\n    key: 'admin',\r\n    label: '최고관리자',\r\n  },\r\n  {\r\n    name: 'company',\r\n    key: 'company',\r\n    label: '업체',\r\n  },\r\n  {\r\n    name: 'monitoring',\r\n    key: 'monitoring',\r\n    label: '모니터링',\r\n  },\r\n];\r\n\r\nexport const operator_event_filter = [\r\n  {\r\n    name: '측정 문제',\r\n    key: 0,\r\n    label: '측정 문제',\r\n  },\r\n  {\r\n    name: '보수 이력',\r\n    key: 1,\r\n    label: '보수 이력',\r\n  },\r\n  {\r\n    name: '설비 이력',\r\n    key: 2,\r\n    label: '설비 이력',\r\n  },\r\n];\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  name?: string,\r\n  onChange: Function,\r\n  disabled?: boolean,\r\n  labelRadio: string,\r\n  isChecked: boolean,\r\n  id?: string,\r\n};\r\n\r\nexport const Radio = ({\r\n  labelRadio,\r\n  name = '',\r\n  isChecked,\r\n  onChange,\r\n  id = '',\r\n  disabled = false,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"wrap-radio\">\r\n      <label className=\"custom-radio d-flex\" htmlFor={id}>\r\n        <input\r\n          type=\"radio\"\r\n          checked={`${isChecked ? 'checked' : ''}`}\r\n          name={name}\r\n          onChange={(e) => onChange(e)}\r\n          id={id}\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"checkmark\" />\r\n        <span className=\"label\">{labelRadio}</span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadio.defaultProps = {\r\n  name: '',\r\n  disabled: false,\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(Radio);\r\n","// @flow\r\n\r\nimport React, { memo } from 'react';\r\nimport IMAGES from 'themes/images';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  value?: any,\r\n  errorMsg?: any,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  inputMode?: string,\r\n  type?: string,\r\n  onBlur?: Function,\r\n  onBlurWrapper?: Function,\r\n  onFocusWrapper?: Function,\r\n  onClickWrapper?: Function,\r\n  onChange?: Function,\r\n  onFocus?: Function,\r\n  onKeyPress?: Function,\r\n  onPaste?: Function,\r\n  readOnly?: boolean,\r\n  variant?: string,\r\n  customClassName?: string,\r\n  customClassLabel?: string,\r\n  customClassWrap?: string,\r\n  isShowIcon?: boolean,\r\n  deleteValue?: Function,\r\n  name?: string,\r\n  request?: boolean,\r\n  innerRef?: any,\r\n  customClass?: string,\r\n  innerRef?: any,\r\n  pattern?: string,\r\n  maxLength?: string,\r\n  autocomplete?: string,\r\n  autoFocus?: boolean,\r\n};\r\n\r\nexport const Input = ({\r\n  placeholder = '',\r\n  value = '',\r\n  errorMsg = '',\r\n  label = '',\r\n  disabled = false,\r\n  readOnly = false,\r\n  type = 'text',\r\n  onBlur = () => {},\r\n  onBlurWrapper = () => {},\r\n  onFocusWrapper = () => {},\r\n  onClickWrapper = () => {},\r\n  onChange = () => {},\r\n  customClassName = null,\r\n  customClassWrap = null,\r\n  customClassLabel = null,\r\n  onFocus = () => {},\r\n  onKeyPress = () => {},\r\n  onPaste = () => {},\r\n  variant = 'outline',\r\n  isShowIcon = false,\r\n  deleteValue = () => {},\r\n  name = '',\r\n  request = false,\r\n  customClass = '',\r\n  innerRef = null,\r\n  pattern = '',\r\n  inputMode = '',\r\n  maxLength = '',\r\n  autocomplete = '',\r\n  autoFocus,\r\n}: Props) => {\r\n  return (\r\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\r\n    <div\r\n      className={`input ${\r\n        variant !== 'outline' ? ` input__wrapper--${variant}` : ''\r\n      }`}\r\n      onBlur={(e) => onBlurWrapper(e)}\r\n      onFocus={(e) => onFocusWrapper(e)}\r\n      onClick={(e) => onClickWrapper(e)}\r\n      onKeyUp={() => {}}\r\n    >\r\n      {!!label && (\r\n        <p className={`${customClassLabel} input__label`}>\r\n          {label}\r\n          {request && <span className=\"request\">*</span>}\r\n        </p>\r\n      )}\r\n      <div\r\n        className={`input__box ${customClassWrap} ${\r\n          isShowIcon ? 'input__box__custom' : ''\r\n        }`}\r\n      >\r\n        <input\r\n          className={`input-change ${\r\n            customClass.length > 0 ? customClass : ''\r\n          } ${\r\n            variant !== 'outline' ? `input--${variant}` : ''\r\n          } ${customClassName}`}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          disabled={disabled}\r\n          type={type}\r\n          ref={innerRef}\r\n          onPaste={onPaste}\r\n          onKeyPress={onKeyPress}\r\n          readOnly={readOnly}\r\n          onBlur={(e) => onBlur(e)}\r\n          onFocus={(e) => onFocus(e)}\r\n          onChange={(e) => onChange(e)}\r\n          autoCapitalize=\"none\"\r\n          inputMode={inputMode}\r\n          maxLength={maxLength}\r\n          name={name}\r\n          pattern={pattern}\r\n          autoComplete={autocomplete}\r\n          // eslint-disable-next-line jsx-a11y/no-autofocus\r\n          autoFocus={autoFocus}\r\n        />\r\n        {isShowIcon && value.length > 0 && (\r\n          <div\r\n            className=\"input__box__icon input__box__icon__right\"\r\n            onClick={deleteValue}\r\n            onKeyUp={deleteValue}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <img src={IMAGES.icon_close} alt=\"\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {errorMsg && <p className=\"input__error-msg\">{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  placeholder: '',\r\n  value: '',\r\n  errorMsg: '',\r\n  label: '',\r\n  disabled: false,\r\n  readOnly: false,\r\n  type: 'text',\r\n  onBlur: () => {},\r\n  onBlurWrapper: () => {},\r\n  onFocusWrapper: () => {},\r\n  onClickWrapper: () => {},\r\n  onFocus: () => {},\r\n  onChange: () => {},\r\n  onKeyPress: () => {},\r\n  onPaste: () => {},\r\n  inputMode: '',\r\n  maxLength: '',\r\n  variant: 'outline',\r\n  customClassName: '',\r\n  customClassLabel: '',\r\n  customClassWrap: '',\r\n  isShowIcon: false,\r\n  deleteValue: () => {},\r\n  name: '',\r\n  request: false,\r\n  innerRef: null,\r\n  customClass: '',\r\n  pattern: '',\r\n  autocomplete: '',\r\n  autoFocus: false,\r\n};\r\n\r\nexport default memo<Props>(Input);\r\n","/* eslint-disable import/prefer-default-export */\r\nexport const DEVICE_HEAD_TABLE = [\r\n  {\r\n    id: 0,\r\n    name: 'No.',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: '설치일',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '업체',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '구분',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '설치위치',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '모듈명',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '담당자 정보',\r\n  },\r\n];\r\n\r\nexport const ACCOUNT_HEAD = [\r\n  {\r\n    id: 1,\r\n    name: 'NO.',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '등록일자',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '권한',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '아이디',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '이메일',\r\n  },\r\n\r\n  {\r\n    id: 6,\r\n    name: '담당자',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '전화번호',\r\n  },\r\n];\r\n","// @flow\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, memo } from 'react';\r\nimport Radio from 'commons/components/Radio';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Pagination from 'react-js-pagination';\r\nimport IMAGES from 'themes/images';\r\nimport ROUTERS from 'constants/routers';\r\nimport { accountOptions } from 'constants/optionCheckbox';\r\nimport Input from 'commons/components/Input';\r\nimport Button from 'commons/components/Button';\r\nimport Table from 'commons/components/Table';\r\nimport { ACCOUNT_HEAD } from 'constants/tableHeadData';\r\n// import { getListCompany, getListPosition } from '../../../device/redux';\r\nimport { getAccountList } from '../../redux';\r\nimport Loading from 'commons/components/Loading';\r\n\r\ntype Props = {\r\n  history: {\r\n    push: Function,\r\n  },\r\n};\r\nconst AccountManagement = ({ history }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const accountList = useSelector((state) => state?.account?.accountList);\r\n  const isProcessing = useSelector((state) => state?.account?.isProcessing);\r\n  const totalPage = useSelector((state) => state?.account?.totalPage);\r\n  const perPage = useSelector((state) => state?.account?.perPage);\r\n  const [currentOption, setCurrentOption] = useState('all');\r\n  const [valueSearch, setValueSearch] = useState('');\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  // handle input change\r\n  const handleInputChange = (e) => {\r\n    const { value } = e.target;\r\n    setValueSearch(value);\r\n  };\r\n\r\n  // handle when radio change\r\n  const onChangeOption = (e) => {\r\n    const { name } = e.target;\r\n    setCurrentOption(name);\r\n  };\r\n\r\n  // render list radio\r\n  const renderRadioList = accountOptions.map((item) => (\r\n    <Radio\r\n      id={item.key}\r\n      name={item.key}\r\n      label={item.label}\r\n      onChange={onChangeOption}\r\n      isChecked={currentOption === item.key}\r\n      labelRadio={item.label}\r\n    />\r\n  ));\r\n\r\n  // Handle click to table row\r\n  const handleClickTableRow = (item) => {\r\n    history.push({\r\n      pathname: `${ROUTERS.ACCOUNT_MANAGEMENT}/detail/${item.no}`,\r\n      state: {\r\n        id: item.no,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getAccountList({\r\n        role: currentOption,\r\n        page: 1,\r\n      })\r\n    );\r\n  }, [currentOption]);\r\n\r\n  // handle submit search\r\n  const handleSubmitSearch = () => {\r\n    dispatch(\r\n      getAccountList({\r\n        role: currentOption,\r\n        keyword: valueSearch,\r\n        page: 1,\r\n      })\r\n    );\r\n  };\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSubmitSearch();\r\n    }\r\n  };\r\n  const handlePageChange = (page) => {\r\n    setActivePage(page);\r\n    dispatch(\r\n      getAccountList({\r\n        role: currentOption,\r\n        keyword: valueSearch,\r\n        page,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isProcessing && <Loading />}\r\n      <div className=\"account\">\r\n        <div className=\"account__head-menu\">\r\n          <div className=\"account__head-menu__title\">\r\n            <img src={IMAGES.iconTitle} alt=\"icon-title-device\" />\r\n            <span className=\"account__head-menu__title__text\">계정 관리</span>\r\n            <span className=\"account__head-menu__title__des\">\r\n              등록되어있는 관리자들을 관리하실 수 있습니다.\r\n            </span>\r\n          </div>\r\n          <div className=\"account__head-menu__search\">\r\n            <div className=\"account__head-menu__search__options\">\r\n              <p className=\"search-option-title\">권한</p>{' '}\r\n              <span className=\"search-option-character\">|</span>{' '}\r\n              {renderRadioList}\r\n            </div>\r\n\r\n            <div className=\"account__head-menu__search__input\">\r\n              <Input\r\n                placeholder=\"아이디, 담당자, 이메일로 검색해보세요.\"\r\n                customClass=\"wrapper-input-search\"\r\n                onChange={handleInputChange}\r\n                value={valueSearch}\r\n                onKeyPress={(e) => handleKeyDown(e)}\r\n              />\r\n              <img\r\n                src={IMAGES.icon_search}\r\n                alt=\"Icon Search\"\r\n                className=\"search__icon\"\r\n                role=\"presentation\"\r\n              />\r\n            </div>\r\n            <Button customClass=\"custom-btn\" onClick={handleSubmitSearch}>\r\n              검색\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"account__table\">\r\n          <Table\r\n            tableHeads={ACCOUNT_HEAD}\r\n            tableBody={accountList}\r\n            onClickRow={handleClickTableRow}\r\n            isShowId\r\n          />\r\n          {totalPage > perPage && (\r\n            <div className=\"account__pagination\">\r\n              <Pagination\r\n                activePage={activePage}\r\n                itemsCountPerPage={perPage}\r\n                totalItemsCount={totalPage}\r\n                pageRangeDisplayed={5}\r\n                onChange={handlePageChange}\r\n                itemClass=\"page-item\"\r\n                linkClass=\"page-link\"\r\n                firstPageText={\r\n                  <img\r\n                    src={IMAGES.double_arrow_left}\r\n                    alt=\"\"\r\n                    className=\"double-prev\"\r\n                  />\r\n                }\r\n                lastPageText={\r\n                  <img\r\n                    src={IMAGES.double_arrow_right}\r\n                    alt=\"\"\r\n                    className=\"double-prev\"\r\n                  />\r\n                }\r\n                prevPageText={\r\n                  <img src={IMAGES.arrow_left} alt=\"\" className=\"double-prev\" />\r\n                }\r\n                nextPageText={\r\n                  <img\r\n                    src={IMAGES.arrow_right1}\r\n                    alt=\"\"\r\n                    className=\"double-prev\"\r\n                  />\r\n                }\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(AccountManagement);\r\n"],"sourceRoot":""}