{"version":3,"sources":["constants/listKey.js","commons/components/Radio/index.js","constants/regexs.js","constants/errorMsg.js","helpers/validator.js","commons/components/Input/index.js","modules/accounts/components/ItemDevice.js","modules/accounts/components/signIn.js","modules/accounts/components/index.js"],"names":["listType","id","value","label","listPaginationType","Radio","labelRadio","name","isChecked","onChange","disabled","className","htmlFor","type","checked","e","defaultProps","memo","REGEX","EMAIL","PASSWORD","NUMBER","PHONE_NUMBER","USER_NAME","FLOAT_INPUT","VALIDATE_PASSWORD","ERROR_MESSAGE","EMAIL_FORMAT","EMAIL_REQUIRED","NICK_NAME_REQUIRED","PASSWORD_REQUIRED","PASSWORD_FORMAT","PASSWORD_NOT_MATCH","PASSWORD_CONFIRM_REQUIRED","EMAIL_NOT_EXSIST","PASSWORD_INVALID","ENQUIRY_TYPE_REQUIRED","TITLE_REQUIRED","CONTENT_REQUIRED","VERIFY_EMAIL","UN_AUTHENTICATED","REQUIRED","Validator","objectVal","validate","error","keys","Object","i","length","key","rules","errorMsg","j","undefined","test","Input","placeholder","readOnly","onBlur","onBlurWrapper","onFocusWrapper","onClickWrapper","customClassName","customClassWrap","customClassLabel","onFocus","onKeyPress","onPaste","variant","isShowIcon","deleteValue","request","customClass","innerRef","pattern","inputMode","maxLength","autocomplete","autoFocus","onClick","onKeyUp","ref","autoCapitalize","autoComplete","role","tabIndex","src","IMAGES","icon_close","alt","ItemDevice","handleChangeOptionCompany","optionDevice","listCompany","listArea","listInverter","handleRemove","handleAddListDevice","idx","isAccountPage","Select","listItem","option","noOptionsMessage","images","icon_next","company","area","inverter","Button","dataRegister","handleKeyDown","handleChangeRegister","texTerror","listItemDevice","username","email","phone","person","renderListItemDevice","map","item","index","target","isNumberKey","isOnPasteNumber","SignUp","history","useHistory","useSelector","state","account","isProcessing","token","dispatch","useDispatch","useState","password","dataLogin","setDataLogin","passwords","setDataRegister","setError","isModalRegisterSuccess","setIsModalRegisterSuccess","isShowModalRegister","setIsShowModalRegister","isShow","content","modalLogin","setModalLogin","Math","random","setListItemDevice","useEffect","SignInAction","API","setHeader","push","ROUTERS","ROOT","handleChange","handleSubmit","handleRegisterSubmit","validation","dataValidate","checkValidator","filter","listItemDevices","dataSubmit","inverter_ids","Loading","Modal","isOpen","isShowHeader","title","isShowIconClose","isShowFooter","handleCloseIcon","handleClose","textBtnRight","size","itemChange","find","listItemChange","listItemCompany","listItemArea","listItemChange2","per_page","com_id","pos_id","itemRemove","removedItems"],"mappings":"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","file":"static/js/37.72b992b5.chunk.js","sourcesContent":["const listType = [\n  {\n    id: 1,\n    value: 0,\n    label: '실증단지',\n  },\n  {\n    id: 2,\n    value: 1,\n    label: 'RTU(목업)',\n  },\n  {\n    id: 3,\n    value: 2,\n    label: '테스트(실증단지)',\n  },\n  {\n    id: 4,\n    value: 3,\n    label: '테스트(목업)',\n  },\n];\n\nconst listPaginationType = [\n  {\n    id: 1,\n    value: 6,\n    label: '6 개씩 보기',\n  },\n  {\n    id: 2,\n    value: 12,\n    label: '12 개씩 보기',\n  },\n  {\n    id: 3,\n    value: 18,\n    label: '18 개씩 보기',\n  },\n  {\n    id: 4,\n    value: 24,\n    label: '14 개씩 보기',\n  },\n  {\n    id: 4,\n    value: 30,\n    label: '30 개씩 보기',\n  },\n];\n\nexport { listType, listPaginationType };\n","// @flow\n// libs\nimport React, { memo } from 'react';\n\ntype Props = {\n  name?: string,\n  onChange: Function,\n  disabled?: boolean,\n  labelRadio: string,\n  isChecked: boolean,\n  id?: string,\n};\n\nexport const Radio = ({\n  labelRadio,\n  name = '',\n  isChecked,\n  onChange,\n  id = '',\n  disabled = false,\n}: Props) => {\n  return (\n    <div className=\"wrap-radio\">\n      <label className=\"custom-radio d-flex\" htmlFor={id}>\n        <input\n          type=\"radio\"\n          checked={`${isChecked ? 'checked' : ''}`}\n          name={name}\n          onChange={(e) => onChange(e)}\n          id={id}\n          disabled={disabled}\n        />\n        <span className=\"checkmark\" />\n        <span className=\"label\">{labelRadio}</span>\n      </label>\n    </div>\n  );\n};\n\nRadio.defaultProps = {\n  name: '',\n  disabled: false,\n  id: '',\n};\n\nexport default memo<Props>(Radio);\n","const REGEX = {\n  EMAIL: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  PASSWORD: /^(?=.*[a-zA-Z])([A-Z]?)((?=.*\\d)([!@#$%^&*()'\"<>:;.,=-]?))(?!\\s).{6,13}$/,\n  // PASSWORD: /^(?=.*[a-z])((?=.*\\d)|(?=.*[!@#$%^&*()'\"]))[A-Za-z\\d!@#$%^&*()'\"](?!\\s).{6,}$/,\n  NUMBER: /^[-]?(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\n  PHONE_NUMBER: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/,\n  // USER_NAME: /^[0-9a-zA-Z]{6,20}$\\S*$/\n  USER_NAME: /^[0-9a-zA-Z]{3,20}$\\S*$/,\n  FLOAT_INPUT: /^[0-9.]*$/,\n  VALIDATE_PASSWORD: /^[0-9a-zA-Z]{4,20}$\\S*$/,\n};\n\nexport default REGEX;\n","const ERROR_MESSAGE = {\n  EMAIL_FORMAT: '이메일 형식이 일치하지 않습니다.',\n  EMAIL_REQUIRED: 'Email does not exist.',\n  NICK_NAME_REQUIRED: 'Nickname does not exist.',\n  PASSWORD_REQUIRED: 'Password does not exist.',\n  PASSWORD_FORMAT: `Up to 13 digits, including one special character. It doesn't fit`,\n  PASSWORD_NOT_MATCH: `The password you want to change does not match.`,\n  PASSWORD_CONFIRM_REQUIRED: 'Password confirm does not exist.',\n  EMAIL_NOT_EXSIST: 'Please enter your email.',\n  PASSWORD_INVALID: `Invalid password`,\n  ENQUIRY_TYPE_REQUIRED: 'Enquiry Type does not exist.',\n  TITLE_REQUIRED: 'Title does not exist.',\n  CONTENT_REQUIRED: 'Content does not exist.',\n  VERIFY_EMAIL:\n    'Email authentication is not complete.<br /> Would you like me to resend you<br /> the authentication email?',\n  UN_AUTHENTICATED: 'Unauthenticated.',\n  PHONE_NUMBER: '숫자 11자리를 입력해주세요.',\n  REQUIRED: '이 필드는 필수입니다.',\n};\n\nexport default ERROR_MESSAGE;\n","/* eslint-disable no-plusplus */\n/* eslint-disable prefer-template */\n// @flow\nimport REGEX from '../constants/regexs';\nimport ERROR_MESSAGE from '../constants/errorMsg';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Validator = (objectVal: Object, validate: Object) => {\n  const error = {};\n  const keys = Object.keys(objectVal);\n  for (let i = 0, { length } = keys; i < length; i += 1) {\n    const key = keys[i];\n    const rules = validate[key];\n    const value = objectVal[key];\n    let errorMsg = '';\n\n    for (let j = 0; j < rules.length; j += 1) {\n      switch (rules[j]) {\n        case 'required':\n          if (value === '' || value === null || value === undefined) {\n            errorMsg = ERROR_MESSAGE.REQUIRED;\n          }\n          break;\n        case 'email':\n          if (!REGEX.EMAIL.test(value)) {\n            errorMsg = ERROR_MESSAGE.EMAIL_FORMAT;\n          }\n          break;\n\n        case 'phoneNumber':\n          if (!REGEX.PHONE_NUMBER.test(value)) {\n            errorMsg = ERROR_MESSAGE.PHONE_NUMBER;\n          }\n          break;\n        case 'password':\n          if (!REGEX.PASSWORD.test(value)) {\n            errorMsg = ERROR_MESSAGE.PASSWORD_FORMAT;\n          }\n          break;\n        default:\n          break;\n      }\n      if (errorMsg) {\n        error[key] = errorMsg;\n      }\n    }\n  }\n\n  return error;\n};\n","// @flow\n\nimport React, { memo } from 'react';\nimport IMAGES from 'themes/images';\n\ntype Props = {\n  placeholder?: string,\n  value?: any,\n  errorMsg?: any,\n  label?: string,\n  disabled?: boolean,\n  inputMode?: string,\n  type?: string,\n  onBlur?: Function,\n  onBlurWrapper?: Function,\n  onFocusWrapper?: Function,\n  onClickWrapper?: Function,\n  onChange?: Function,\n  onFocus?: Function,\n  onKeyPress?: Function,\n  onPaste?: Function,\n  readOnly?: boolean,\n  variant?: string,\n  customClassName?: string,\n  customClassLabel?: string,\n  customClassWrap?: string,\n  isShowIcon?: boolean,\n  deleteValue?: Function,\n  name?: string,\n  request?: boolean,\n  innerRef?: any,\n  customClass?: string,\n  innerRef?: any,\n  pattern?: string,\n  maxLength?: string,\n  autocomplete?: string,\n  autoFocus?: boolean,\n};\n\nexport const Input = ({\n  placeholder = '',\n  value = '',\n  errorMsg = '',\n  label = '',\n  disabled = false,\n  readOnly = false,\n  type = 'text',\n  onBlur = () => {},\n  onBlurWrapper = () => {},\n  onFocusWrapper = () => {},\n  onClickWrapper = () => {},\n  onChange = () => {},\n  customClassName = null,\n  customClassWrap = null,\n  customClassLabel = null,\n  onFocus = () => {},\n  onKeyPress = () => {},\n  onPaste = () => {},\n  variant = 'outline',\n  isShowIcon = false,\n  deleteValue = () => {},\n  name = '',\n  request = false,\n  customClass = '',\n  innerRef = null,\n  pattern = '',\n  inputMode = '',\n  maxLength = '',\n  autocomplete = '',\n  autoFocus,\n}: Props) => {\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div\n      className={`input ${\n        variant !== 'outline' ? ` input__wrapper--${variant}` : ''\n      }`}\n      onBlur={(e) => onBlurWrapper(e)}\n      onFocus={(e) => onFocusWrapper(e)}\n      onClick={(e) => onClickWrapper(e)}\n      onKeyUp={() => {}}\n    >\n      {!!label && (\n        <p className={`${customClassLabel} input__label`}>\n          {label}\n          {request && <span className=\"request\">*</span>}\n        </p>\n      )}\n      <div\n        className={`input__box ${customClassWrap} ${\n          isShowIcon ? 'input__box__custom' : ''\n        }`}\n      >\n        <input\n          className={`input-change ${\n            customClass.length > 0 ? customClass : ''\n          } ${\n            variant !== 'outline' ? `input--${variant}` : ''\n          } ${customClassName}`}\n          placeholder={placeholder}\n          value={value}\n          disabled={disabled}\n          type={type}\n          ref={innerRef}\n          onPaste={onPaste}\n          onKeyPress={onKeyPress}\n          readOnly={readOnly}\n          onBlur={(e) => onBlur(e)}\n          onFocus={(e) => onFocus(e)}\n          onChange={(e) => onChange(e)}\n          autoCapitalize=\"none\"\n          inputMode={inputMode}\n          maxLength={maxLength}\n          name={name}\n          pattern={pattern}\n          autoComplete={autocomplete}\n          // eslint-disable-next-line jsx-a11y/no-autofocus\n          autoFocus={autoFocus}\n        />\n        {isShowIcon && value.length > 0 && (\n          <div\n            className=\"input__box__icon input__box__icon__right\"\n            onClick={deleteValue}\n            onKeyUp={deleteValue}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <img src={IMAGES.icon_close} alt=\"\" />\n          </div>\n        )}\n      </div>\n      {errorMsg && <p className=\"input__error-msg\">{errorMsg}</p>}\n    </div>\n  );\n};\n\nInput.defaultProps = {\n  placeholder: '',\n  value: '',\n  errorMsg: '',\n  label: '',\n  disabled: false,\n  readOnly: false,\n  type: 'text',\n  onBlur: () => {},\n  onBlurWrapper: () => {},\n  onFocusWrapper: () => {},\n  onClickWrapper: () => {},\n  onFocus: () => {},\n  onChange: () => {},\n  onKeyPress: () => {},\n  onPaste: () => {},\n  inputMode: '',\n  maxLength: '',\n  variant: 'outline',\n  customClassName: '',\n  customClassLabel: '',\n  customClassWrap: '',\n  isShowIcon: false,\n  deleteValue: () => {},\n  name: '',\n  request: false,\n  innerRef: null,\n  customClass: '',\n  pattern: '',\n  autocomplete: '',\n  autoFocus: false,\n};\n\nexport default memo<Props>(Input);\n","// @flow\nimport React, { memo } from 'react';\nimport SelectDropdown from 'commons/components/Select';\nimport Button from 'commons/components/Button';\nimport images from 'themes/images';\n\ntype Props = {\n  handleChangeOptionCompany: Function,\n  optionDevice: Object,\n  listCompany: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  listArea: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  listInverter: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  listType: Array<{ id: number, value: any, label: string }>,\n  handleRemove: Function,\n  handleAddListDevice: Function,\n  idx: any,\n  isAccountPage?: boolean,\n};\n\nexport const ItemDevice = ({\n  handleChangeOptionCompany,\n  optionDevice,\n  listCompany,\n  listArea,\n  listInverter,\n  handleRemove,\n  handleAddListDevice,\n  idx,\n  listType,\n  isAccountPage = false,\n}: Props) => {\n  return (\n    <div className=\"item-role mt-2\">\n      <div className=\"group-select\">\n        <div className=\"group-item\">\n          {!isAccountPage && (\n            <>\n              <SelectDropdown\n                placeholder=\"구분\"\n                listItem={listType}\n                onChange={(option) =>\n                  handleChangeOptionCompany(option, 'type', optionDevice?.idx)\n                }\n                option={optionDevice?.type || null}\n                disabled={idx !== 0}\n                noOptionsMessage={() => '옵션 없음'}\n              />\n              <img src={images.icon_next} alt=\"\" />\n            </>\n          )}\n        </div>\n        <div className=\"group-item\">\n          <SelectDropdown\n            placeholder=\"업체 선택\"\n            listItem={listCompany}\n            onChange={(option) =>\n              handleChangeOptionCompany(option, 'company', optionDevice?.idx)\n            }\n            option={optionDevice?.company || null}\n            noOptionsMessage={() => '옵션 없음'}\n          />\n          <img src={images.icon_next} alt=\"\" />\n        </div>\n        <div className=\"group-item\">\n          <SelectDropdown\n            placeholder=\"구역 선택\"\n            listItem={listArea}\n            disabled={\n              optionDevice?.type?.value\n                ? optionDevice?.type?.value !== 0\n                : false\n            }\n            onChange={(option) =>\n              handleChangeOptionCompany(option, 'area', optionDevice?.idx)\n            }\n            noOptionsMessage={() => '옵션 없음'}\n            option={\n              optionDevice?.type?.value ? null : optionDevice?.area || null\n            }\n          />\n          <img src={images.icon_next} alt=\"\" />\n        </div>\n        <div className=\"group-item\">\n          <SelectDropdown\n            placeholder=\"인버터 선택\"\n            listItem={listInverter}\n            onChange={(option) =>\n              handleChangeOptionCompany(option, 'inverter', optionDevice?.idx)\n            }\n            option={optionDevice?.inverter || null}\n            noOptionsMessage={() => '옵션 없음'}\n          />\n        </div>\n      </div>\n      {idx === 0 ? (\n        <Button onClick={handleAddListDevice}>추가</Button>\n      ) : (\n        <Button onClick={() => handleRemove(optionDevice)}>삭제</Button>\n      )}\n    </div>\n  );\n};\n\nItemDevice.defaultProps = {\n  isAccountPage: false,\n};\n\nexport default memo<Props>(ItemDevice);\n","// @flow\nimport React, { memo } from 'react';\nimport Input from 'commons/components/Input';\nimport Radio from 'commons/components/Radio';\nimport { isNumberKey, isOnPasteNumber } from 'helpers/index';\nimport ItemDevice from './ItemDevice';\n\ntype Props = {\n  dataRegister: Object,\n  handleKeyDown: Function,\n  handleChangeRegister: Function,\n  handleChangeOptionCompany: Function,\n  listCompany: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  texTerror: Object,\n  listArea: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  listInverter: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  listType: Array<{ id: number, value: any, label: string }>,\n  handleRemove: Function,\n  listItemDevice: Array<{\n    idx: any,\n    company: Object,\n    area: Object,\n    inverter: Object,\n    type: Object,\n  }>,\n  handleAddListDevice: Function,\n};\n\nconst SignIn = ({\n  dataRegister,\n  handleKeyDown,\n  handleChangeRegister,\n  handleChangeOptionCompany,\n  listCompany,\n  texTerror,\n  listArea,\n  listInverter,\n  handleRemove,\n  listItemDevice,\n  handleAddListDevice,\n  listType,\n}: Props) => {\n  const { username, email, phone, person, role } = dataRegister;\n  const renderListItemDevice =\n    listItemDevice &&\n    listItemDevice.map((item, index) => (\n      <ItemDevice\n        key={item.idx}\n        {...item}\n        optionDevice={item}\n        idx={index}\n        handleChangeOptionCompany={handleChangeOptionCompany}\n        listCompany={listCompany}\n        listArea={listArea}\n        listInverter={listInverter}\n        listType={listType}\n        handleRemove={handleRemove}\n        handleAddListDevice={handleAddListDevice}\n      />\n    ));\n\n  return (\n    <div className=\"page-register\">\n      <div className=\"sign-in\">\n        <div className=\"sign-desc mb-3\">\n          등록 요청시 담당자가 관련 내용을 확인 후 서버에 계정 등록을 도와드릴\n          예정입니다.\n          <br />\n          비밀번호의 경우 임시발급 비밀번호가 발급됩니다.\n        </div>\n        <div className=\"form-register\">\n          <div className=\"item\">\n            <div className=\"item-label\">\n              권한<span>*</span>\n            </div>\n            <div className=\"item-content\">\n              <div className=\"group-radio\">\n                <Radio\n                  onChange={() => handleChangeRegister('admin', 'admin')}\n                  isChecked={role === 'admin'}\n                  name=\"role\"\n                  labelRadio=\"최고 관리자\"\n                  id=\"admin\"\n                />\n                <Radio\n                  onChange={() => handleChangeRegister('company', 'company')}\n                  isChecked={role === 'company'}\n                  labelRadio=\"업체\"\n                  name=\"role\"\n                  id=\"company\"\n                />\n                <Radio\n                  onChange={() =>\n                    handleChangeRegister('monitoring', 'monitoring')\n                  }\n                  isChecked={role === 'monitoring'}\n                  name=\"role\"\n                  labelRadio=\"모니터링\"\n                  id=\"monitoring\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"item-label\">\n              이메일<span>*</span>\n            </div>\n            <div className=\"item-content\">\n              <Input\n                placeholder=\"이메일을 입력해주세요.\"\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => handleChangeRegister(e.target.value, 'email')}\n                onKeyPress={(e) => handleKeyDown(e)}\n                errorMsg={texTerror && texTerror?.email}\n              />\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"item-label\">\n              아이디<span>*</span>\n            </div>\n            <div className=\"item-content\">\n              <Input\n                placeholder=\"영문 + 숫자 4~13자리를 입력해주세요.\"\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={(e) =>\n                  handleChangeRegister(e.target.value, 'username')\n                }\n                onKeyPress={(e) => handleKeyDown(e)}\n                errorMsg={texTerror && texTerror?.username}\n              />\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"item-label\">\n              전화번호<span>*</span>\n            </div>\n            <div className=\"item-content\">\n              <Input\n                placeholder=\"숫자 11자리를 입력해주세요. \"\n                type=\"text\"\n                name=\"phone\"\n                onKeyPress={(e) => {\n                  isNumberKey(e);\n                  handleKeyDown(e);\n                }}\n                maxLength=\"13\"\n                onPaste={(e) => isOnPasteNumber(e)}\n                value={phone}\n                onChange={(e) => handleChangeRegister(e.target.value, 'phone')}\n                errorMsg={texTerror && texTerror?.phone}\n              />\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"item-label\">\n              담당자<span>*</span>\n            </div>\n            <div className=\"item-content\">\n              <Input\n                placeholder=\"담당자를 입력해주세요.\"\n                type=\"text\"\n                name=\"person\"\n                value={person}\n                onChange={(e) => handleChangeRegister(e.target.value, 'person')}\n                onKeyPress={(e) => handleKeyDown(e)}\n                errorMsg={texTerror && texTerror?.person}\n              />\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"item-label\">\n              관리기기<span>*</span>\n            </div>\n            <div className=\"item-content\">{renderListItemDevice}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo<Props>(SignIn);\n","// @flow\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalPopup from 'commons/components/Modal';\nimport Input from 'commons/components/Input';\nimport Button from 'commons/components/Button';\nimport Loading from 'commons/components/Loading';\nimport { API } from 'apis';\nimport ROUTERS from 'constants/routers';\nimport { listType } from 'constants/listKey';\nimport { Validator } from '../../../helpers/validator';\nimport SignIn from './signIn';\nimport * as SignInAction from '../redux';\n\nconst SignUp = () => {\n  const history = useHistory();\n  const {\n    type,\n    isProcessing,\n    errorMsg,\n    token,\n    listCompany,\n    listArea,\n    listInverter,\n  } = useSelector((state) => state?.account);\n\n  const dispatch = useDispatch();\n  const [dataLogin, setDataLogin] = useState({\n    username: '',\n    password: '',\n  });\n  const [dataRegister, setDataRegister] = useState({\n    username: '',\n    passwords: '',\n    email: '',\n    phone: '',\n    person: '',\n    role: 'admin',\n  });\n  const [error, setError] = useState({\n    username: '',\n    passwords: '',\n    email: '',\n    phone: '',\n    person: '',\n    role: '',\n  });\n\n  const [isModalRegisterSuccess, setIsModalRegisterSuccess] = useState(false);\n  const [isShowModalRegister, setIsShowModalRegister] = useState(false);\n\n  const [modalLogin, setModalLogin] = useState({\n    isShow: false,\n    content: '',\n  });\n\n  const [listItemDevice, setListItemDevice] = useState([\n    {\n      idx: Math.random(),\n      area: null,\n      company: null,\n      inverter: null,\n      type: null,\n    },\n  ]);\n\n  /** Show popup sign in success */\n  useEffect(() => {\n    switch (type) {\n      case SignInAction.signInRequestSuccess:\n        API.setHeader('Authorization', `Bearer ${token}`);\n        history.push(ROUTERS.ROOT);\n        break;\n      case SignInAction.signInRequestFailed:\n        setModalLogin({\n          ...modalLogin,\n          isShow: true,\n          content: errorMsg,\n        });\n        break;\n      case SignInAction.signUpRequestSuccess:\n        setIsModalRegisterSuccess(true);\n        break;\n      case SignInAction.signUpRequestFailed:\n        setModalLogin({\n          ...modalLogin,\n          isShow: true,\n          content: '등록 요청이 완료되지 않았습니다.',\n        });\n        break;\n      default:\n        break;\n    }\n    // eslint-disable-next-line\n  }, [type, token]);\n\n  // get list getListCompany\n\n  useEffect(() => {\n    if (isShowModalRegister) {\n      dispatch(SignInAction.getListCompany());\n      dispatch(SignInAction.getListArea());\n    }\n    // eslint-disable-next-line\n  }, [isShowModalRegister]);\n\n  const handleChange = (value, name) => {\n    switch (name) {\n      case 'username':\n        setDataLogin({\n          ...dataLogin,\n          username: value,\n        });\n        break;\n      case 'password':\n        setDataLogin({\n          ...dataLogin,\n          password: value,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const { username, password } = dataLogin;\n  const { email, phone, person } = dataRegister;\n\n  const handleSubmit = () => {\n    if (!username && !password) {\n      setModalLogin({\n        ...modalLogin,\n        isShow: true,\n        content: '아이디와 비밀번호를 입력해주세요.',\n      });\n      return;\n    }\n    if (!username) {\n      setModalLogin({\n        ...modalLogin,\n        isShow: true,\n        content: '아이디를 입력 해주세요.',\n      });\n      return;\n    }\n    if (!password) {\n      setModalLogin({\n        ...modalLogin,\n        isShow: true,\n        content: '아이디를 입력 해주세요.',\n      });\n    }\n    dispatch(SignInAction.signInRequest(dataLogin));\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const handleChangeRegister = (value, name) => {\n    switch (name) {\n      case 'username':\n        setDataRegister({\n          ...dataRegister,\n          username: value,\n        });\n        setError({\n          ...error,\n          username: '',\n        });\n        break;\n      case 'email':\n        setDataRegister({\n          ...dataRegister,\n          email: value,\n        });\n        setError({\n          ...error,\n          email: '',\n        });\n        break;\n      case 'phone':\n        setDataRegister({\n          ...dataRegister,\n          phone: value,\n        });\n        setError({\n          ...error,\n          phone: '',\n        });\n        break;\n      case 'person':\n        setDataRegister({\n          ...dataRegister,\n          person: value,\n        });\n        setError({\n          ...error,\n          person: '',\n        });\n        break;\n      case 'admin':\n        setDataRegister({\n          ...dataRegister,\n          role: 'admin',\n        });\n\n        break;\n      case 'company':\n        setDataRegister({\n          ...dataRegister,\n          role: 'company',\n        });\n\n        break;\n      case 'monitoring':\n        setDataRegister({\n          ...dataRegister,\n          role: 'monitoring',\n        });\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleChangeOptionCompany = (option, name, idx) => {\n    const itemChange = listItemDevice.find((item) => item.idx === idx);\n    const listItemChange = listItemDevice.map((item) => {\n      return {\n        ...item,\n        area: null,\n        company: null,\n        inverter: null,\n        type: (name === 'type' ? option : item.type) || null,\n      };\n    });\n    const listItemCompany = listItemDevice.map((item) => {\n      return item.idx === itemChange?.idx\n        ? {\n            ...item,\n            area: null,\n            company: (name === 'company' ? option : item.company) || null,\n            inverter: null,\n          }\n        : item;\n    });\n\n    const listItemArea = listItemDevice.map((item) => {\n      return item.idx === itemChange?.idx\n        ? {\n            ...item,\n            area: (name === 'area' ? option : item.area) || null,\n            inverter: null,\n          }\n        : item;\n    });\n\n    const listItemChange2 = listItemDevice.map((item) => {\n      return item.idx === itemChange?.idx\n        ? {\n            ...item,\n            area: (name === 'area' ? option : item.area) || null,\n            company: (name === 'company' ? option : item.company) || null,\n            inverter: (name === 'inverter' ? option : item.inverter) || null,\n            type: (name === 'type' ? option : item.type) || null,\n          }\n        : item;\n    });\n    switch (name) {\n      case 'type':\n        setListItemDevice(listItemChange);\n        dispatch(\n          SignInAction.getListInverter({\n            per_page: 999999,\n            type: option?.value,\n          })\n        );\n        break;\n      case 'company':\n        setListItemDevice(listItemCompany);\n        dispatch(\n          SignInAction.getListInverter({\n            per_page: 999999,\n            type: itemChange?.type?.value,\n            com_id: option?.value,\n          })\n        );\n        break;\n      case 'area':\n        setListItemDevice(listItemArea);\n        dispatch(\n          SignInAction.getListInverter({\n            per_page: 999999,\n            type: itemChange?.type?.value,\n            com_id: itemChange?.company?.value,\n            pos_id: option?.value,\n          })\n        );\n        break;\n      default:\n        setListItemDevice(listItemChange2);\n        break;\n    }\n  };\n\n  const handleRegisterSubmit = () => {\n    let validation = {};\n    const rules = {\n      username: ['required'],\n      email: ['required', 'email'],\n      phone: ['required', 'phoneNumber'],\n      person: ['required'],\n    };\n\n    const dataValidate = {\n      username: dataRegister.username,\n      email,\n      phone,\n      person,\n    };\n    validation = Validator(dataValidate, rules);\n    if (Object.keys(validation).length > 0) {\n      setError(validation);\n      return;\n    }\n\n    const checkValidator = listItemDevice.filter(\n      (item) =>\n        item.type === null || item.company === null || item.inverter === null\n    );\n\n    if (checkValidator && checkValidator.length > 0) {\n      setModalLogin({\n        ...modalLogin,\n        isShow: true,\n        content: `관리기기 정보 입력을 완료해주세요.`,\n      });\n      return;\n    }\n    const listItemDevices = listItemDevice.map((item) => item.area?.value);\n    const dataSubmit = {\n      role: dataRegister.role,\n      username: dataRegister.username || '',\n      email,\n      name: person || '',\n      phone,\n      inverter_ids: listItemDevices,\n    };\n    // submit data\n    dispatch(SignInAction.signUpRequest(dataSubmit));\n  };\n\n  const handleKeyDownRegister = (e) => {\n    if (e.key === 'Enter') {\n      handleRegisterSubmit();\n    }\n  };\n\n  const handleAddListDevice = () => {\n    setListItemDevice([\n      ...listItemDevice,\n      {\n        idx: Math.random(),\n        company: null,\n        area: null,\n        type:\n          (listItemDevice && listItemDevice[0] && listItemDevice[0].type) ||\n          null,\n        inverter: null,\n      },\n    ]);\n  };\n\n  //  Remove list device\n  const handleRemove = (itemRemove) => {\n    const removedItems = listItemDevice.filter(\n      (item) => itemRemove.idx !== item.idx\n    );\n    setListItemDevice(removedItems);\n  };\n\n  return (\n    <div className=\"page-login\">\n      {isProcessing && <Loading />}\n\n      <div className=\"sign-up\">\n        <div className=\"login-name\">LOGIN</div>\n        <div className=\"from-login\">\n          <div className=\"login-title\">실증단지</div>\n          <div className=\"input-wrapper\">\n            <Input\n              placeholder=\"아이디를 입력하세요.\"\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => handleChange(e.target.value, 'username')}\n              onKeyPress={handleKeyDown}\n            />\n\n            <Input\n              placeholder=\"비밀번호를 입력하세요.\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => handleChange(e.target.value, 'password')}\n              onKeyPress={handleKeyDown}\n            />\n          </div>\n          <div className=\"btn-wrapper\">\n            <Button onClick={() => handleSubmit()} customClass=\"bg-primary\">\n              로그인\n            </Button>\n          </div>\n\n          <div\n            className=\"register-wrapper\"\n            onClick={() => setIsShowModalRegister(true)}\n            onKeyPress={() => {}}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <div className=\"name\">계정 등록 요청</div>\n          </div>\n        </div>\n      </div>\n\n      <ModalPopup\n        isOpen={modalLogin.isShow}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() =>\n          setModalLogin({\n            ...modalLogin,\n            isShow: false,\n            content: '',\n          })\n        }\n        handleClose={() =>\n          setModalLogin({\n            ...modalLogin,\n            isShow: false,\n            content: '',\n          })\n        }\n        textBtnRight=\"확인\"\n      >\n        {modalLogin.content}\n      </ModalPopup>\n      <ModalPopup\n        isOpen={isShowModalRegister}\n        isShowHeader\n        size=\"lg\"\n        title=\"실증단지 계정 등록 양식\"\n        isShowIconClose\n        handleCloseIcon={() => setIsShowModalRegister(false)}\n        isShowFooter\n        handleClose={() => handleRegisterSubmit()}\n        textBtnRight=\"등록요청\"\n      >\n        <SignIn\n          dataRegister={dataRegister}\n          handleKeyDown={handleKeyDownRegister}\n          handleChangeRegister={handleChangeRegister}\n          handleChangeOptionCompany={handleChangeOptionCompany}\n          listCompany={listCompany}\n          texTerror={error}\n          listItemDevice={listItemDevice}\n          handleAddListDevice={handleAddListDevice}\n          handleRemove={handleRemove}\n          listInverter={listInverter}\n          listArea={listArea}\n          listType={listType}\n        />\n      </ModalPopup>\n      {/* Modal register success */}\n      <ModalPopup\n        isOpen={isModalRegisterSuccess}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() => {\n          setIsModalRegisterSuccess(false);\n          setIsShowModalRegister(false);\n        }}\n        handleClose={() => {\n          setIsModalRegisterSuccess(false);\n          setIsShowModalRegister(false);\n        }}\n        textBtnRight=\"확인\"\n      >\n        등록 요청이 완료되었습니다.\n      </ModalPopup>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"sourceRoot":""}