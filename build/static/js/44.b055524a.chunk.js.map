{"version":3,"sources":["commons/components/Card/CardItem.js","commons/components/Card/index.js","modules/main/components/Dashboard/index.js"],"names":["CardItem","name","specifications","unit","className","formatNumber","defaultProps","Card","isLogoTop","title","listCompany","logoClick","titleClick","onClick","customClass","isCardCompany","isEvent","amountElectricDay","amountElectricMonth","electricRealtime","ratePower","cumulativeElectric","role","src","logo","alt","IMAGES","icon_event_card","map","item","key","id","com_logo_path","thumbnail","memo","MainPage","avenrageCardMeasure","dispatch","useDispatch","useSelector","state","main","isLoading","listPositions","cardPositionMain","length","avenrageCard","console","log","useEffect","getListPosition","getListCompany","count","useRef","getCardMeasureMain","type","pos_id","current","interval","setInterval","clearInterval","handleLogoClick","renderPositionActive","posItem","position","icon_location_on","style","top","pos_map_y","left","pos_map_x","isSearch","isProcessing","icon_title","card","prod_today","prod_inmonth","prod_sum","outputVoltage","output_voltage","outputCurrent","output_current","prod_realtime","performance_ratio","radiance","temperature","icon_location","posY","posX","pos_name","company"],"mappings":"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","file":"static/js/44.b055524a.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { formatNumber } from 'helpers';\n\ntype Props = {\n  name?: string,\n  specifications?: string,\n  unit?: string,\n};\n\nconst CardItem = ({ name = '', specifications = '', unit = '' }: Props) => {\n  return (\n    <div className=\"card__item\">\n      <p className=\"card__item__name\">{name}</p>\n      <div className=\"card__item__group-specifications\">\n        <span className=\"card__item__number\">\n          {formatNumber(specifications)}\n        </span>\n        <span className=\"card__item__unit\">{unit}</span>\n      </div>\n    </div>\n  );\n};\n\nCardItem.defaultProps = {\n  name: '',\n  specifications: '',\n  unit: '',\n};\n\nexport default CardItem;\n","// @flow\nimport React, { memo } from 'react';\nimport IMAGES from 'themes/images';\n\nimport CardItem from './CardItem';\n\ntype Props = {\n  isLogoTop?: boolean,\n  title?: string,\n  listCompany?: any,\n  logoClick: Function,\n  titleClick: Function,\n  onClick: Function,\n  customClass?: string,\n  isCardCompany?: boolean,\n  isEvent?: boolean,\n  amountElectricDay?: number,\n  amountElectricMonth?: number,\n  electricRealtime?: number,\n  ratePower?: number,\n  cumulativeElectric?: number,\n\n};\n\nexport const Card = ({\n  isLogoTop = false,\n  title = '',\n  listCompany = [],\n  logoClick,\n  titleClick,\n  onClick,\n  customClass = '',\n  isCardCompany = false,\n  isEvent = false,\n  amountElectricDay = 0,\n  amountElectricMonth = 0,\n  electricRealtime = 0,\n  ratePower = 0,\n  cumulativeElectric = 0,\n}: Props) => {\n  return (\n    <div className={`card ${customClass}`} onClick={onClick} role=\"presentation\">\n      {isLogoTop && (\n        <div className=\"card__company card__company--top\">\n          <img\n            src={listCompany.logo}\n            alt=\"logocompany\"\n            className=\"card__company__item\"\n          />\n        </div>\n      )}\n      <div className={`card__header ${isEvent ? 'header-event' : ''}`}>\n        <p\n          className={`card__title ${isEvent ? 'card__event' : ''}`}\n          onClick={titleClick}\n          role=\"presentation\"\n        >\n          {title}\n        </p>\n        {isEvent && (\n          <img\n            src={IMAGES.icon_event_card}\n            alt=\"\"\n            className=\"card__logo-event\"\n          />\n        )}\n      </div>\n      <div\n        className={\n          isCardCompany ? 'card__body card__body--company' : 'card__body'\n        }\n      >\n        {/* list item in card */}\n        <div className=\"card__list\">\n          <CardItem\n            name=\"실시간 발전량\"\n            specifications={electricRealtime}\n            unit=\"kWh\"\n          />\n          <CardItem name=\"성능비\" specifications={ratePower} unit=\"%\" />\n          <CardItem name=\"금일\" specifications={amountElectricDay} unit=\"kWh\" />\n          <CardItem\n            name=\"금월\"\n            specifications={amountElectricMonth}\n            unit=\"mWh\"\n          />\n          <CardItem\n            name=\"누적발전량\"\n            specifications={cumulativeElectric}\n            unit=\"MW\"\n          />\n        </div>\n\n        {!isLogoTop && (\n          <div className=\"card__company\">\n            {/* list company in card */}\n            {listCompany.map((item) => (\n              <img\n                key={item.id}\n                src={item?.com_logo_path?.thumbnail}\n                alt=\"logocompany\"\n                className=\"card__company__item\"\n                onClick={() => logoClick(item?.id)}\n                role=\"presentation\"\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCard.defaultProps = {\n  title: '',\n  listCompany: [],\n  isLogoTop: false,\n  customClass: '',\n  isCardCompany: false,\n  isEvent: false,\n  amountElectricDay: 0,\n  amountElectricMonth: 0,\n  electricRealtime: 0,\n  ratePower: 0,\n  cumulativeElectric: 0,\n};\n\nexport default memo < Props > (Card);\n","import React, { useEffect, useRef } from 'react';\nimport MainLayout from 'layout/MainLayout';\nimport IMAGES from 'themes/images';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getListPosition,\n  getListCompany,\n  getCardMeasureMain,\n} from 'modules/main/redux';\nimport { Card } from 'commons/components/Card';\nimport { avenrageCard } from 'helpers';\nimport InfoReality from '../InfoReality';\nimport TotalPower from '../TotalPower';\nimport VitualData from '../VitualData';\nimport WeeklyElectric from '../WeeklyElectric';\n\nconst MainPage = () => {\n  const dispatch = useDispatch();\n  const { isLoading, listPositions, cardPositionMain } = useSelector(\n    (state) => state.main\n  );\n\n  let avenrageCardMeasure;\n  if (cardPositionMain.length) {\n    avenrageCardMeasure = avenrageCard(cardPositionMain);\n  }\n  console.log(avenrageCardMeasure, 'avenrageCardMeasure');\n\n  useEffect(() => {\n    dispatch(getListPosition());\n    dispatch(getListCompany());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const count = useRef(1);\n\n  useEffect(() => {\n    dispatch(getCardMeasureMain({ type: 'summary', pos_id: count.current }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      count.current += 1;\n      if (count.current > listPositions.length) {\n        count.current = 1;\n      }\n      dispatch(getCardMeasureMain({ type: 'summary', pos_id: count.current }));\n    }, 30000);\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [listPositions, cardPositionMain]);\n\n  // when click title redirect dashboard area of area\n  const handleTitleClick = (id) => {\n    console.log(id);\n  };\n\n  // when click logo redirect dashboard company of company\n  const handleLogoClick = (id) => {\n    console.log(id);\n  };\n\n  const renderPositionActive = cardPositionMain.length\n    ? cardPositionMain?.map((posItem) => (\n        <img\n          key={posItem.position?.id}\n          src={IMAGES.icon_location_on}\n          alt=\"\"\n          className=\"location\"\n          style={{\n            top: `${posItem.position?.pos_map_y}px`,\n            left: `${posItem.position?.pos_map_x}px`,\n          }}\n        />\n      ))\n    : '';\n\n  return (\n    <MainLayout isSearch isProcessing={isLoading}>\n      <div className=\"main-page\">\n        {/* thong tin  */}\n\n        <div className=\"current-electric\">\n          <div className=\"current-electric__title\">\n            <img src={IMAGES.icon_title} alt=\"Title\" className=\"icon-title\" />\n            <p className=\"title\">전체</p>\n            <div className=\"line\" />\n          </div>\n          <TotalPower\n            amountElectricDay={avenrageCardMeasure?.card?.prod_today}\n            amountElectricMonth={avenrageCardMeasure?.card?.prod_inmonth}\n            cumulativeElectric={avenrageCardMeasure?.card?.prod_sum}\n          />\n          <WeeklyElectric />\n          <InfoReality\n            outputVoltage={avenrageCardMeasure?.card?.output_voltage}\n            outputCurrent={avenrageCardMeasure?.card?.output_current}\n            electricRealtime={avenrageCardMeasure?.card?.prod_realtime}\n            ratePower={avenrageCardMeasure?.card?.performance_ratio}\n          />\n          <VitualData\n            radiance={avenrageCardMeasure?.card?.radiance}\n            temperature={avenrageCardMeasure?.card?.temperature}\n          />\n        </div>\n\n        {listPositions &&\n          listPositions.map((item) => (\n            <img\n              src={IMAGES.icon_location}\n              alt=\"\"\n              className=\"location\"\n              style={{\n                top: `${item.posY}px`,\n                left: `${item.posX}px`,\n              }}\n              key={item.id}\n            />\n          ))}\n\n        {renderPositionActive}\n\n        {cardPositionMain &&\n          cardPositionMain?.map((posItem) => (\n            <div\n              // key={posItem?.position?.id}\n              className=\"display-main-card\"\n              style={{\n                top: `${posItem?.position?.pos_map_y - 300}px`,\n                left: `${posItem?.position?.pos_map_x - 300}px`,\n              }}\n            >\n              <Card\n                title={posItem?.position?.pos_name}\n                listCompany={posItem?.company}\n                amountElectricDay={posItem?.card?.prod_today}\n                amountElectricMonth={posItem?.card?.prod_inmonth}\n                electricRealtime={posItem?.card?.prod_realtime}\n                cumulativeElectric={posItem?.card?.prod_sum}\n                ratePower={posItem?.card?.performance_ratio}\n                titleClick={() => handleTitleClick(posItem?.position?.id)}\n                logoClick={handleLogoClick}\n              />\n            </div>\n          ))}\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default MainPage;\n"],"sourceRoot":""}