{"version":3,"sources":["commons/components/Header/ModalEvent.js"],"names":["ModalEvent","isShow","wrapperRef","handleEventClick","solarEvent","testMockupEvent","testSolarEvent","renderEvent","listEvent","newListEvent","length","className","ds_type_label","map","item","onClick","id","role","key","evt_type_label","evt_content","ref","defaultProps"],"mappings":"6GACA,2BAWMA,EAAa,SAAC,GAON,IAAD,IANXC,cAMW,SALXC,EAKW,EALXA,WACAC,EAIW,EAJXA,iBACAC,EAGW,EAHXA,WACAC,EAEW,EAFXA,gBACAC,EACW,EADXA,eAEMC,EAAc,SAACC,GACnB,IAAIC,EACkB,EAAlBD,EAAUE,SACZD,EACE,yBAAKE,UAAU,+BACb,yBAAKA,UAAU,4BAAf,UACGH,EAAU,UADb,aACG,EAAcI,eAEhBJ,EAAUK,KAAI,SAACC,GAAD,OACb,uBACEH,UAAU,2BACVI,QAAS,kBAAMZ,EAAiBW,EAAKE,KACrCC,KAAK,eACLC,IAAKJ,EAAKE,IAEV,kCAAQF,EAAKK,eAAb,MACCL,EAAKM,kBAMhB,OAAOX,GAGT,OACE,yBACEE,UAAS,uBAAkBV,EAAS,mBAAqB,IACzDoB,IAAKnB,GAEL,yBAAKS,UAAU,yBACb,yBAAKA,UAAU,sBAAf,mCACCJ,EAAYH,GACZG,EAAYF,GACZE,EAAYD,MAMrBN,EAAWsB,aAAe,CACxBrB,QAAQ,GAGKD","file":"static/js/40.8adc1e22.chunk.js","sourcesContent":["// @flow\r\nimport React from 'react';\r\n// import { useSelector } from 'react-redux';\r\n\r\ntype Props = {\r\n  isShow?: boolean,\r\n  wrapperRef: any,\r\n  handleEventClick: Function,\r\n  solarEvent: any,\r\n  testMockupEvent: any,\r\n  testSolarEvent: any,\r\n};\r\nconst ModalEvent = ({\r\n  isShow = false,\r\n  wrapperRef,\r\n  handleEventClick,\r\n  solarEvent,\r\n  testMockupEvent,\r\n  testSolarEvent,\r\n}: Props) => {\r\n  const renderEvent = (listEvent) => {\r\n    let newListEvent;\r\n    if (listEvent.length) {\r\n      newListEvent = (\r\n        <div className=\"modal__event__group-content\">\r\n          <div className=\"modal__event__type-event\">\r\n            {listEvent[0]?.ds_type_label}\r\n          </div>\r\n          {listEvent.map((item) => (\r\n            <p\r\n              className=\"modal__event__event-name\"\r\n              onClick={() => handleEventClick(item.id)}\r\n              role=\"presentation\"\r\n              key={item.id}\r\n            >\r\n              <span>[{item.evt_type_label}] </span>\r\n              {item.evt_content}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return newListEvent;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`modal__event ${isShow ? 'show-modal-event' : ''}`}\r\n      ref={wrapperRef}\r\n    >\r\n      <div className=\"modal__event__content\">\r\n        <div className=\"modal__event-title\">이벤트 알림</div>\r\n        {renderEvent(solarEvent)}\r\n        {renderEvent(testMockupEvent)}\r\n        {renderEvent(testSolarEvent)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModalEvent.defaultProps = {\r\n  isShow: false,\r\n};\r\n\r\nexport default ModalEvent;\r\n"],"sourceRoot":""}