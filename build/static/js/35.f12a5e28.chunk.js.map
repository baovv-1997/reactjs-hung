{"version":3,"sources":["commons/components/TitleHeader/titleSub.js","commons/components/TitleHeader/index.js","commons/components/Modal/index.js","commons/components/Event/Detail/index.js"],"names":["TitleSubHeader","title","onClick","className","id","titleLight","onKeyPress","role","tabIndex","src","images","icon_arrow","alt","defaultProps","memo","TitleHeader","descSub","icon_title_header","ModalPopup","children","animation","isOpen","size","handleClose","customClass","isShowIconClose","isShowHeader","isShowFooter","isShowTwoBtn","customClassButton","classNameBtnLeft","textBtnLeft","classNameBtnRight","textBtnRight","handleSubmit","isDisabledButton","handleCloseIcon","onHide","show","onKeyUp","icon_close","Body","Footer","type","isDisabled","match","location","dispatch","useDispatch","useSelector","state","commons","eventList","isProcessing","userInfo","account","history","useHistory","useState","isShow","content","modalConform","setModalConfirm","roleName","roles","name","params","useEffect","getEventList","push","prevRoute","evt_type_label","com_name","pos_name","arrow_right","ds_name","evt_content","pathname","ROUTERS","EVENT","deleteEvent"],"mappings":"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","file":"static/js/35.f12a5e28.chunk.js","sourcesContent":["// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  titleLight?: string,\r\n};\r\n\r\nexport const TitleSubHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  titleLight = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title-sub ${className}`}>\r\n      <div\r\n        className=\"wrap-title-sub__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_arrow} alt=\"\" />\r\n        <div className=\"wrap-title-sub__header__name\">\r\n          {title}\r\n          <span>{titleLight}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleSubHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  titleLight: '',\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(TitleSubHeader);\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title: string,\r\n  onClick?: Function,\r\n  className?: string,\r\n  id?: string,\r\n  descSub?: string,\r\n};\r\n\r\nexport const TitleHeader = ({\r\n  title,\r\n  onClick = () => {},\r\n  className = '',\r\n  id,\r\n  descSub = '',\r\n}: Props) => {\r\n  return (\r\n    <div id={id} className={`wrap-title ${className}`}>\r\n      <div\r\n        className=\"wrap-title__header\"\r\n        onClick={onClick}\r\n        onKeyPress={() => {}}\r\n        role=\"button\"\r\n        tabIndex=\"0\"\r\n      >\r\n        <img src={images.icon_title_header} alt=\"\" />\r\n        <div className=\"wrap-title__header__name\">\r\n          {title}\r\n          <span>{descSub}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTitleHeader.defaultProps = {\r\n  className: '',\r\n  onClick: () => {},\r\n  id: '',\r\n  descSub: '',\r\n};\r\n\r\nexport default memo<Props>(TitleHeader);\r\n","/* eslint-disable no-nested-ternary */\r\n// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Button from 'commons/components/Button';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title?: string,\r\n  children: any,\r\n  animation?: boolean,\r\n  isOpen: boolean,\r\n  size?: string,\r\n  handleClose: Function,\r\n  customClass?: string,\r\n  isShowIconClose?: boolean,\r\n  isShowHeader?: boolean,\r\n  isShowFooter?: boolean,\r\n  isShowTwoBtn?: boolean,\r\n  customClassButton?: string,\r\n  classNameBtnLeft?: string,\r\n  textBtnLeft?: string,\r\n  classNameBtnRight?: string,\r\n  textBtnRight?: string,\r\n  handleSubmit?: Function,\r\n  isDisabledButton?: boolean,\r\n  handleCloseIcon?: Function,\r\n};\r\n\r\nexport const ModalPopup = ({\r\n  title = '',\r\n  children,\r\n  animation = false,\r\n  isOpen,\r\n  size,\r\n  handleClose,\r\n  customClass,\r\n  isShowIconClose,\r\n  isShowHeader,\r\n  isShowFooter,\r\n  isShowTwoBtn,\r\n  customClassButton = '',\r\n  classNameBtnLeft = '',\r\n  textBtnLeft = '',\r\n  classNameBtnRight = '',\r\n  textBtnRight = 'OK',\r\n  handleSubmit = () => {},\r\n  isDisabledButton,\r\n  handleCloseIcon = () => {},\r\n}: Props) => (\r\n  <Modal\r\n    animation={animation}\r\n    onHide={() => {\r\n      return true;\r\n    }}\r\n    show={isOpen}\r\n    size={size}\r\n    className={customClass}\r\n  >\r\n    {isShowIconClose && (\r\n      <div\r\n        className=\"modal-content__iconClose\"\r\n        onClick={handleCloseIcon}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onKeyUp={handleCloseIcon}\r\n      >\r\n        <img src={images.icon_close} alt=\"\" />\r\n      </div>\r\n    )}\r\n\r\n    {isShowHeader && <h3 className=\"modal-title\">{title}</h3>}\r\n\r\n    <Modal.Body>\r\n      {!isShowHeader ? (\r\n        <div className=\"modal-body__no-header\">{children}</div>\r\n      ) : (\r\n        <div className=\"modal-body__has-header\">{children}</div>\r\n      )}\r\n    </Modal.Body>\r\n    {isShowFooter && (\r\n      <Modal.Footer>\r\n        {!isShowTwoBtn ? (\r\n          <Button\r\n            type=\"button\"\r\n            customClass={customClassButton}\r\n            onClick={handleClose}\r\n          >\r\n            {textBtnRight}\r\n          </Button>\r\n        ) : (\r\n          <div className=\"group-button\">\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnLeft}`}\r\n              onClick={handleSubmit}\r\n              isDisabled={isDisabledButton}\r\n            >\r\n              {textBtnLeft}\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnRight}`}\r\n              onClick={handleClose}\r\n            >\r\n              {textBtnRight}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Modal.Footer>\r\n    )}\r\n  </Modal>\r\n);\r\n\r\nModalPopup.defaultProps = {\r\n  title: '',\r\n  animation: false,\r\n  size: '',\r\n  customClass: '',\r\n  isShowIconClose: false,\r\n  isShowHeader: false,\r\n  isShowFooter: false,\r\n  isShowTwoBtn: false,\r\n  customClassButton: '',\r\n  classNameBtnLeft: '',\r\n  textBtnLeft: '',\r\n  classNameBtnRight: '',\r\n  textBtnRight: 'OK',\r\n  handleSubmit: () => {},\r\n  isDisabledButton: false,\r\n  handleCloseIcon: () => {},\r\n};\r\nexport default memo<Props>(ModalPopup);\r\n","// @flow\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, memo } from 'react';\r\n// import MainLayout from 'layout/MainLayout';\r\nimport Loading from 'commons/components/Loading';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport TitleHeader from 'commons/components/TitleHeader';\r\nimport TitleSubHeader from 'commons/components/TitleHeader/titleSub';\r\nimport images from 'themes/images';\r\nimport ModalPopup from 'commons/components/Modal';\r\nimport Button from 'commons/components/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ROUTERS from 'constants/routers';\r\nimport { getEventList, deleteEvent } from 'commons/redux';\r\n\r\ntype Props = {\r\n  match: {\r\n    params: {\r\n      id: any,\r\n    },\r\n  },\r\n  location: {\r\n    pathname: string,\r\n    state: {\r\n      prevRoute: string,\r\n    },\r\n  },\r\n};\r\n\r\nconst EventDetail = ({ match, location }: Props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { eventList, isProcessing, type } = useSelector(\r\n    (state) => state.commons\r\n  );\r\n\r\n  const userInfo = useSelector((state) => state.account.userInfo);\r\n\r\n  const history = useHistory();\r\n  const [modalConform, setModalConfirm] = useState({\r\n    isShow: false,\r\n    content: '이벤트 현황을 삭제하시겠습니까?',\r\n  });\r\n\r\n  const roleName =\r\n    userInfo &&\r\n    userInfo.roles &&\r\n    userInfo.roles[0] &&\r\n    userInfo.roles[0] &&\r\n    userInfo.roles[0].name;\r\n  const { id } = match.params;\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getEventList({\r\n        id,\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const handleDelete = () => {\r\n    dispatch(deleteEvent(id));\r\n    setModalConfirm({\r\n      ...modalConform,\r\n      isShow: false,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case 'commons/deleteEventSuccess':\r\n        history.push(location?.state?.prevRoute);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [type]);\r\n\r\n  return (\r\n    <>\r\n      {isProcessing && <Loading />}\r\n      <div className=\"content-wrap\">\r\n        <TitleHeader\r\n          title=\"실증단지 발전 현황\"\r\n          descSub=\"설비 이력, 보수 이력을 등록하실 수 있습니다.\"\r\n        />\r\n        <TitleSubHeader title=\"이벤트 상세 내용\" />\r\n\r\n        <div className=\"table-form\">\r\n          <div className=\"item-row d-flex\">\r\n            <div className=\"colum-left\">분류</div>\r\n            <div className=\"colum-right\">{eventList?.evt_type_label}</div>\r\n          </div>\r\n          <div className=\"item-row d-flex\">\r\n            <div className=\"colum-left\">모듈정보</div>\r\n            <div className=\"colum-right\">\r\n              <span>{eventList?.com_name}</span>\r\n              {eventList?.com_name && eventList?.pos_name && (\r\n                <img\r\n                  src={images.arrow_right}\r\n                  alt=\"\"\r\n                  className=\"mx-2 position-top-1\"\r\n                />\r\n              )}\r\n              <span>{eventList?.pos_name}</span>\r\n              {eventList?.com_name && eventList?.pos_name && (\r\n                <img\r\n                  src={images.arrow_right}\r\n                  alt=\"\"\r\n                  className=\"mx-2 position-top-1\"\r\n                />\r\n              )}\r\n              <span>{eventList?.ds_name}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"item-row d-flex mh-300\">\r\n            <div className=\"colum-left\">내용</div>\r\n            <div className=\"colum-right\">{eventList?.evt_content}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"group-btn-delete text-right mb-4\">\r\n          {(roleName === 'admin' || roleName === 'company') && (\r\n            <Button\r\n              onClick={() =>\r\n                setModalConfirm({\r\n                  ...modalConform,\r\n                  isShow: true,\r\n                })\r\n              }\r\n              customClass=\"btn-red\"\r\n            >\r\n              삭제\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <div className=\"group-btn-bottom\">\r\n          {(roleName === 'admin' || roleName === 'company') && (\r\n            <Button\r\n              onClick={() =>\r\n                history.push({\r\n                  pathname: `${ROUTERS.EVENT}/edit/${id}`,\r\n                  state: { prevRoute: location.state.prevRoute },\r\n                })\r\n              }\r\n            >\r\n              수정\r\n            </Button>\r\n          )}\r\n          <Button onClick={() => history.push(location?.state?.prevRoute)}>\r\n            목록\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <ModalPopup\r\n        isOpen={modalConform.isShow}\r\n        isShowHeader\r\n        title=\"알림\"\r\n        isShowIconClose\r\n        isShowFooter\r\n        handleCloseIcon={() =>\r\n          setModalConfirm({\r\n            ...modalConform,\r\n            isShow: false,\r\n          })\r\n        }\r\n        handleClose={() => {\r\n          setModalConfirm({\r\n            ...modalConform,\r\n            isShow: false,\r\n          });\r\n        }}\r\n        textBtnLeft=\"확인\"\r\n        textBtnRight=\"취소\"\r\n        isShowTwoBtn\r\n        customClassButton=\"btn-custom\"\r\n        handleSubmit={() => handleDelete()}\r\n      >\r\n        {modalConform?.content}\r\n      </ModalPopup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo<Props>(EventDetail);\r\n"],"sourceRoot":""}