{"version":3,"sources":["constants/listKey.js","commons/components/Modal/index.js","commons/components/Radio/index.js","constants/regexs.js","constants/errorMsg.js","helpers/validator.js","commons/components/Input/index.js","modules/accounts/components/ItemDevice.js","modules/accounts/components/signIn.js","modules/accounts/components/index.js"],"names":["listType","id","value","label","listPaginationType","ModalPopup","title","children","animation","isOpen","size","handleClose","customClass","isShowIconClose","isShowHeader","isShowFooter","isShowTwoBtn","customClassButton","classNameBtnLeft","textBtnLeft","classNameBtnRight","textBtnRight","handleSubmit","isDisabledButton","handleCloseIcon","onHide","show","className","onClick","role","tabIndex","onKeyUp","src","images","icon_close","alt","Body","Footer","type","isDisabled","defaultProps","memo","Radio","labelRadio","name","isChecked","onChange","disabled","htmlFor","checked","e","REGEX","EMAIL","PASSWORD","NUMBER","PHONE_NUMBER","USER_NAME","FLOAT_INPUT","VALIDATE_PASSWORD","ERROR_MESSAGE","EMAIL_FORMAT","EMAIL_REQUIRED","NICK_NAME_REQUIRED","PASSWORD_REQUIRED","PASSWORD_FORMAT","PASSWORD_NOT_MATCH","PASSWORD_CONFIRM_REQUIRED","EMAIL_NOT_EXSIST","PASSWORD_INVALID","ENQUIRY_TYPE_REQUIRED","TITLE_REQUIRED","CONTENT_REQUIRED","VERIFY_EMAIL","UN_AUTHENTICATED","REQUIRED","Validator","objectVal","validate","error","keys","Object","i","length","key","rules","errorMsg","j","undefined","test","Input","placeholder","readOnly","onBlur","onBlurWrapper","onFocusWrapper","onClickWrapper","customClassName","customClassWrap","customClassLabel","onFocus","onKeyPress","onPaste","variant","isShowIcon","deleteValue","request","innerRef","pattern","inputMode","maxLength","autocomplete","autoFocus","ref","autoCapitalize","autoComplete","IMAGES","ItemDevice","handleChangeOptionCompany","optionDevice","listCompany","listArea","listInverter","handleRemove","handleAddListDevice","idx","isAccountPage","Select","listItem","option","noOptionsMessage","icon_next","company","area","inverter","Button","dataRegister","handleKeyDown","handleChangeRegister","texTerror","listItemDevice","username","email","phone","person","renderListItemDevice","map","item","index","target","isNumberKey","isOnPasteNumber","SignUp","history","useHistory","useSelector","state","account","isProcessing","token","dispatch","useDispatch","useState","password","dataLogin","setDataLogin","passwords","setDataRegister","setError","isModalRegisterSuccess","setIsModalRegisterSuccess","isShowModalRegister","setIsShowModalRegister","isShow","content","modalLogin","setModalLogin","Math","random","setListItemDevice","useEffect","SignInAction","API","setHeader","push","ROUTERS","ROOT","handleChange","handleRegisterSubmit","validation","dataValidate","checkValidator","filter","listItemDevices","dataSubmit","inverter_ids","Loading","Modal","itemChange","find","listItemChange","listItemCompany","listItemArea","listItemChange2","per_page","com_id","pos_id","itemRemove","removedItems"],"mappings":"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","file":"static/js/43.9b4b5697.chunk.js","sourcesContent":["const listType = [\n  {\n    id: 1,\n    value: 0,\n    label: '실증단지',\n  },\n  {\n    id: 2,\n    value: 1,\n    label: 'RTU(목업)',\n  },\n  {\n    id: 3,\n    value: 2,\n    label: '테스트(실증단지)',\n  },\n  {\n    id: 4,\n    value: 3,\n    label: '테스트(목업)',\n  },\n];\n\nconst listPaginationType = [\n  {\n    id: 1,\n    value: 6,\n    label: '6 개씩 보기',\n  },\n  {\n    id: 2,\n    value: 12,\n    label: '12 개씩 보기',\n  },\n  {\n    id: 3,\n    value: 18,\n    label: '18 개씩 보기',\n  },\n  {\n    id: 4,\n    value: 24,\n    label: '14 개씩 보기',\n  },\n  {\n    id: 4,\n    value: 30,\n    label: '30 개씩 보기',\n  },\n];\n\nexport { listType, listPaginationType };\n","/* eslint-disable no-nested-ternary */\r\n// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport Button from 'commons/components/Button';\r\nimport images from 'themes/images';\r\n\r\ntype Props = {\r\n  title?: string,\r\n  children: any,\r\n  animation?: boolean,\r\n  isOpen: boolean,\r\n  size?: string,\r\n  handleClose: Function,\r\n  customClass?: string,\r\n  isShowIconClose?: boolean,\r\n  isShowHeader?: boolean,\r\n  isShowFooter?: boolean,\r\n  isShowTwoBtn?: boolean,\r\n  customClassButton?: string,\r\n  classNameBtnLeft?: string,\r\n  textBtnLeft?: string,\r\n  classNameBtnRight?: string,\r\n  textBtnRight?: string,\r\n  handleSubmit?: Function,\r\n  isDisabledButton?: boolean,\r\n  handleCloseIcon?: Function,\r\n};\r\n\r\nexport const ModalPopup = ({\r\n  title = '',\r\n  children,\r\n  animation = false,\r\n  isOpen,\r\n  size,\r\n  handleClose,\r\n  customClass,\r\n  isShowIconClose,\r\n  isShowHeader,\r\n  isShowFooter,\r\n  isShowTwoBtn,\r\n  customClassButton = '',\r\n  classNameBtnLeft = '',\r\n  textBtnLeft = '',\r\n  classNameBtnRight = '',\r\n  textBtnRight = 'OK',\r\n  handleSubmit = () => {},\r\n  isDisabledButton,\r\n  handleCloseIcon = () => {},\r\n}: Props) => (\r\n  <Modal\r\n    animation={animation}\r\n    onHide={() => {\r\n      return true;\r\n    }}\r\n    show={isOpen}\r\n    size={size}\r\n    className={customClass}\r\n  >\r\n    {isShowIconClose && (\r\n      <div\r\n        className=\"modal-content__iconClose\"\r\n        onClick={handleCloseIcon}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onKeyUp={handleCloseIcon}\r\n      >\r\n        <img src={images.icon_close} alt=\"\" />\r\n      </div>\r\n    )}\r\n\r\n    {isShowHeader && <h3 className=\"modal-title\">{title}</h3>}\r\n\r\n    <Modal.Body>\r\n      {!isShowHeader ? (\r\n        <div className=\"modal-body__no-header\">{children}</div>\r\n      ) : (\r\n        <div className=\"modal-body__has-header\">{children}</div>\r\n      )}\r\n    </Modal.Body>\r\n    {isShowFooter && (\r\n      <Modal.Footer>\r\n        {!isShowTwoBtn ? (\r\n          <Button\r\n            type=\"button\"\r\n            customClass={customClassButton}\r\n            onClick={handleClose}\r\n          >\r\n            {textBtnRight}\r\n          </Button>\r\n        ) : (\r\n          <div className=\"group-button\">\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnLeft}`}\r\n              onClick={handleSubmit}\r\n              isDisabled={isDisabledButton}\r\n            >\r\n              {textBtnLeft}\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              customClass={`button--half ${customClassButton} ${classNameBtnRight}`}\r\n              onClick={handleClose}\r\n            >\r\n              {textBtnRight}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Modal.Footer>\r\n    )}\r\n  </Modal>\r\n);\r\n\r\nModalPopup.defaultProps = {\r\n  title: '',\r\n  animation: false,\r\n  size: '',\r\n  customClass: '',\r\n  isShowIconClose: false,\r\n  isShowHeader: false,\r\n  isShowFooter: false,\r\n  isShowTwoBtn: false,\r\n  customClassButton: '',\r\n  classNameBtnLeft: '',\r\n  textBtnLeft: '',\r\n  classNameBtnRight: '',\r\n  textBtnRight: 'OK',\r\n  handleSubmit: () => {},\r\n  isDisabledButton: false,\r\n  handleCloseIcon: () => {},\r\n};\r\nexport default memo<Props>(ModalPopup);\r\n","// @flow\r\n// libs\r\nimport React, { memo } from 'react';\r\n\r\ntype Props = {\r\n  name?: string,\r\n  onChange: Function,\r\n  disabled?: boolean,\r\n  labelRadio: string,\r\n  isChecked: boolean,\r\n  id?: string,\r\n};\r\n\r\nexport const Radio = ({\r\n  labelRadio,\r\n  name = '',\r\n  isChecked,\r\n  onChange,\r\n  id = '',\r\n  disabled = false,\r\n}: Props) => {\r\n  return (\r\n    <div className=\"wrap-radio\">\r\n      <label className=\"custom-radio d-flex\" htmlFor={id}>\r\n        <input\r\n          type=\"radio\"\r\n          checked={`${isChecked ? 'checked' : ''}`}\r\n          name={name}\r\n          onChange={(e) => onChange(e)}\r\n          id={id}\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"checkmark\" />\r\n        <span className=\"label\">{labelRadio}</span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nRadio.defaultProps = {\r\n  name: '',\r\n  disabled: false,\r\n  id: '',\r\n};\r\n\r\nexport default memo<Props>(Radio);\r\n","const REGEX = {\r\n  EMAIL: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n  PASSWORD: /^(?=.*[a-zA-Z])([A-Z]?)((?=.*\\d)([!@#$%^&*()'\"<>:;.,=-]?))(?!\\s).{6,13}$/,\r\n  // PASSWORD: /^(?=.*[a-z])((?=.*\\d)|(?=.*[!@#$%^&*()'\"]))[A-Za-z\\d!@#$%^&*()'\"](?!\\s).{6,}$/,\r\n  NUMBER: /^[-]?(([0-9]*)|(([0-9]*)\\.([0-9]*)))$/,\r\n  PHONE_NUMBER: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{4})[-. ]?([0-9]{4})$/,\r\n  // USER_NAME: /^[0-9a-zA-Z]{6,20}$\\S*$/\r\n  USER_NAME: /^[0-9a-zA-Z]{3,20}$\\S*$/,\r\n  FLOAT_INPUT: /^[0-9.]*$/,\r\n  VALIDATE_PASSWORD: /^[0-9a-zA-Z]{4,20}$\\S*$/,\r\n};\r\n\r\nexport default REGEX;\r\n","const ERROR_MESSAGE = {\r\n  EMAIL_FORMAT: '이메일 형식이 일치하지 않습니다.',\r\n  EMAIL_REQUIRED: 'Email does not exist.',\r\n  NICK_NAME_REQUIRED: 'Nickname does not exist.',\r\n  PASSWORD_REQUIRED: 'Password does not exist.',\r\n  PASSWORD_FORMAT: `Up to 13 digits, including one special character. It doesn't fit`,\r\n  PASSWORD_NOT_MATCH: `The password you want to change does not match.`,\r\n  PASSWORD_CONFIRM_REQUIRED: 'Password confirm does not exist.',\r\n  EMAIL_NOT_EXSIST: 'Please enter your email.',\r\n  PASSWORD_INVALID: `Invalid password`,\r\n  ENQUIRY_TYPE_REQUIRED: 'Enquiry Type does not exist.',\r\n  TITLE_REQUIRED: 'Title does not exist.',\r\n  CONTENT_REQUIRED: 'Content does not exist.',\r\n  VERIFY_EMAIL:\r\n    'Email authentication is not complete.<br /> Would you like me to resend you<br /> the authentication email?',\r\n  UN_AUTHENTICATED: 'Unauthenticated.',\r\n  PHONE_NUMBER: '숫자 11자리를 입력해주세요.',\r\n  REQUIRED: '이 필드는 필수입니다.',\r\n};\r\n\r\nexport default ERROR_MESSAGE;\r\n","/* eslint-disable no-plusplus */\n/* eslint-disable prefer-template */\n// @flow\nimport REGEX from '../constants/regexs';\nimport ERROR_MESSAGE from '../constants/errorMsg';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Validator = (objectVal: Object, validate: Object) => {\n  const error = {};\n  const keys = Object.keys(objectVal);\n  for (let i = 0, { length } = keys; i < length; i += 1) {\n    const key = keys[i];\n    const rules = validate[key];\n    const value = objectVal[key];\n    let errorMsg = '';\n\n    for (let j = 0; j < rules.length; j += 1) {\n      switch (rules[j]) {\n        case 'required':\n          if (value === '' || value === null || value === undefined) {\n            errorMsg = ERROR_MESSAGE.REQUIRED;\n          }\n          break;\n        case 'email':\n          if (!REGEX.EMAIL.test(value)) {\n            errorMsg = ERROR_MESSAGE.EMAIL_FORMAT;\n          }\n          break;\n\n        case 'phoneNumber':\n          if (!REGEX.PHONE_NUMBER.test(value)) {\n            errorMsg = ERROR_MESSAGE.PHONE_NUMBER;\n          }\n          break;\n        case 'password':\n          if (!REGEX.PASSWORD.test(value)) {\n            errorMsg = ERROR_MESSAGE.PASSWORD_FORMAT;\n          }\n          break;\n        default:\n          break;\n      }\n      if (errorMsg) {\n        error[key] = errorMsg;\n      }\n    }\n  }\n\n  return error;\n};\n","// @flow\r\n\r\nimport React, { memo } from 'react';\r\nimport IMAGES from 'themes/images';\r\n\r\ntype Props = {\r\n  placeholder?: string,\r\n  value?: any,\r\n  errorMsg?: any,\r\n  label?: string,\r\n  disabled?: boolean,\r\n  inputMode?: string,\r\n  type?: string,\r\n  onBlur?: Function,\r\n  onBlurWrapper?: Function,\r\n  onFocusWrapper?: Function,\r\n  onClickWrapper?: Function,\r\n  onChange?: Function,\r\n  onFocus?: Function,\r\n  onKeyPress?: Function,\r\n  onPaste?: Function,\r\n  readOnly?: boolean,\r\n  variant?: string,\r\n  customClassName?: string,\r\n  customClassLabel?: string,\r\n  customClassWrap?: string,\r\n  isShowIcon?: boolean,\r\n  deleteValue?: Function,\r\n  name?: string,\r\n  request?: boolean,\r\n  innerRef?: any,\r\n  customClass?: string,\r\n  innerRef?: any,\r\n  pattern?: string,\r\n  maxLength?: string,\r\n  autocomplete?: string,\r\n  autoFocus?: boolean,\r\n};\r\n\r\nexport const Input = ({\r\n  placeholder = '',\r\n  value = '',\r\n  errorMsg = '',\r\n  label = '',\r\n  disabled = false,\r\n  readOnly = false,\r\n  type = 'text',\r\n  onBlur = () => {},\r\n  onBlurWrapper = () => {},\r\n  onFocusWrapper = () => {},\r\n  onClickWrapper = () => {},\r\n  onChange = () => {},\r\n  customClassName = null,\r\n  customClassWrap = null,\r\n  customClassLabel = null,\r\n  onFocus = () => {},\r\n  onKeyPress = () => {},\r\n  onPaste = () => {},\r\n  variant = 'outline',\r\n  isShowIcon = false,\r\n  deleteValue = () => {},\r\n  name = '',\r\n  request = false,\r\n  customClass = '',\r\n  innerRef = null,\r\n  pattern = '',\r\n  inputMode = '',\r\n  maxLength = '',\r\n  autocomplete = '',\r\n  autoFocus,\r\n}: Props) => {\r\n  return (\r\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\r\n    <div\r\n      className={`input ${\r\n        variant !== 'outline' ? ` input__wrapper--${variant}` : ''\r\n      }`}\r\n      onBlur={(e) => onBlurWrapper(e)}\r\n      onFocus={(e) => onFocusWrapper(e)}\r\n      onClick={(e) => onClickWrapper(e)}\r\n      onKeyUp={() => {}}\r\n    >\r\n      {!!label && (\r\n        <p className={`${customClassLabel} input__label`}>\r\n          {label}\r\n          {request && <span className=\"request\">*</span>}\r\n        </p>\r\n      )}\r\n      <div\r\n        className={`input__box ${customClassWrap} ${\r\n          isShowIcon ? 'input__box__custom' : ''\r\n        }`}\r\n      >\r\n        <input\r\n          className={`input-change ${\r\n            customClass.length > 0 ? customClass : ''\r\n          } ${\r\n            variant !== 'outline' ? `input--${variant}` : ''\r\n          } ${customClassName}`}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          disabled={disabled}\r\n          type={type}\r\n          ref={innerRef}\r\n          onPaste={onPaste}\r\n          onKeyPress={onKeyPress}\r\n          readOnly={readOnly}\r\n          onBlur={(e) => onBlur(e)}\r\n          onFocus={(e) => onFocus(e)}\r\n          onChange={(e) => onChange(e)}\r\n          autoCapitalize=\"none\"\r\n          inputMode={inputMode}\r\n          maxLength={maxLength}\r\n          name={name}\r\n          pattern={pattern}\r\n          autoComplete={autocomplete}\r\n          // eslint-disable-next-line jsx-a11y/no-autofocus\r\n          autoFocus={autoFocus}\r\n        />\r\n        {isShowIcon && value.length > 0 && (\r\n          <div\r\n            className=\"input__box__icon input__box__icon__right\"\r\n            onClick={deleteValue}\r\n            onKeyUp={deleteValue}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <img src={IMAGES.icon_close} alt=\"\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      {errorMsg && <p className=\"input__error-msg\">{errorMsg}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  placeholder: '',\r\n  value: '',\r\n  errorMsg: '',\r\n  label: '',\r\n  disabled: false,\r\n  readOnly: false,\r\n  type: 'text',\r\n  onBlur: () => {},\r\n  onBlurWrapper: () => {},\r\n  onFocusWrapper: () => {},\r\n  onClickWrapper: () => {},\r\n  onFocus: () => {},\r\n  onChange: () => {},\r\n  onKeyPress: () => {},\r\n  onPaste: () => {},\r\n  inputMode: '',\r\n  maxLength: '',\r\n  variant: 'outline',\r\n  customClassName: '',\r\n  customClassLabel: '',\r\n  customClassWrap: '',\r\n  isShowIcon: false,\r\n  deleteValue: () => {},\r\n  name: '',\r\n  request: false,\r\n  innerRef: null,\r\n  customClass: '',\r\n  pattern: '',\r\n  autocomplete: '',\r\n  autoFocus: false,\r\n};\r\n\r\nexport default memo<Props>(Input);\r\n","// @flow\nimport React, { memo } from 'react';\nimport SelectDropdown from 'commons/components/Select';\nimport Button from 'commons/components/Button';\nimport images from 'themes/images';\n\ntype Props = {\n  handleChangeOptionCompany: Function,\n  optionDevice: Object,\n  listCompany: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  listArea: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  listInverter: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  listType: Array<{ id: number, value: any, label: string }>,\n  handleRemove: Function,\n  handleAddListDevice: Function,\n  idx: any,\n  isAccountPage?: boolean,\n};\n\nexport const ItemDevice = ({\n  handleChangeOptionCompany,\n  optionDevice,\n  listCompany,\n  listArea,\n  listInverter,\n  handleRemove,\n  handleAddListDevice,\n  idx,\n  listType,\n  isAccountPage = false,\n}: Props) => {\n  return (\n    <div className=\"item-role mt-2\">\n      <div className=\"group-select\">\n        <div className=\"group-item\">\n          {!isAccountPage && (\n            <>\n              <SelectDropdown\n                placeholder=\"구분\"\n                listItem={listType}\n                onChange={(option) =>\n                  handleChangeOptionCompany(option, 'type', optionDevice?.idx)\n                }\n                option={optionDevice?.type || null}\n                disabled={idx !== 0}\n                noOptionsMessage={() => '옵션 없음'}\n              />\n              <img src={images.icon_next} alt=\"\" />\n            </>\n          )}\n        </div>\n        <div className=\"group-item\">\n          <SelectDropdown\n            placeholder=\"업체 선택\"\n            listItem={listCompany}\n            onChange={(option) =>\n              handleChangeOptionCompany(option, 'company', optionDevice?.idx)\n            }\n            option={optionDevice?.company || null}\n            noOptionsMessage={() => '옵션 없음'}\n          />\n          <img src={images.icon_next} alt=\"\" />\n        </div>\n        <div className=\"group-item\">\n          <SelectDropdown\n            placeholder=\"구역 선택\"\n            listItem={listArea}\n            disabled={\n              optionDevice?.type?.value\n                ? optionDevice?.type?.value !== 0\n                : false\n            }\n            onChange={(option) =>\n              handleChangeOptionCompany(option, 'area', optionDevice?.idx)\n            }\n            noOptionsMessage={() => '옵션 없음'}\n            option={\n              optionDevice?.type?.value ? null : optionDevice?.area || null\n            }\n          />\n          <img src={images.icon_next} alt=\"\" />\n        </div>\n        <div className=\"group-item\">\n          <SelectDropdown\n            placeholder=\"인버터 선택\"\n            listItem={listInverter}\n            onChange={(option) =>\n              handleChangeOptionCompany(option, 'inverter', optionDevice?.idx)\n            }\n            option={optionDevice?.inverter || null}\n            noOptionsMessage={() => '옵션 없음'}\n          />\n        </div>\n      </div>\n      {idx === 0 ? (\n        <Button onClick={handleAddListDevice}>추가</Button>\n      ) : (\n        <Button onClick={() => handleRemove(optionDevice)}>삭제</Button>\n      )}\n    </div>\n  );\n};\n\nItemDevice.defaultProps = {\n  isAccountPage: false,\n};\n\nexport default memo<Props>(ItemDevice);\n","// @flow\nimport React, { memo } from 'react';\nimport Input from 'commons/components/Input';\nimport Radio from 'commons/components/Radio';\nimport { isNumberKey, isOnPasteNumber } from 'helpers/index';\nimport ItemDevice from './ItemDevice';\n\ntype Props = {\n  dataRegister: Object,\n  handleKeyDown: Function,\n  handleChangeRegister: Function,\n  handleChangeOptionCompany: Function,\n  listCompany: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  texTerror: Object,\n  listArea: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  listInverter: Array<{\n    id: number,\n    value: any,\n    label: string,\n  }>,\n  listType: Array<{ id: number, value: any, label: string }>,\n  handleRemove: Function,\n  listItemDevice: Array<{\n    idx: any,\n    company: Object,\n    area: Object,\n    inverter: Object,\n    type: Object,\n  }>,\n  handleAddListDevice: Function,\n};\n\nconst SignIn = ({\n  dataRegister,\n  handleKeyDown,\n  handleChangeRegister,\n  handleChangeOptionCompany,\n  listCompany,\n  texTerror,\n  listArea,\n  listInverter,\n  handleRemove,\n  listItemDevice,\n  handleAddListDevice,\n  listType,\n}: Props) => {\n  const { username, email, phone, person, role } = dataRegister;\n\n  const renderListItemDevice =\n    listItemDevice &&\n    listItemDevice.map((item, index) => (\n      <ItemDevice\n        key={item.idx}\n        {...item}\n        optionDevice={item}\n        idx={index}\n        handleChangeOptionCompany={handleChangeOptionCompany}\n        listCompany={listCompany}\n        listArea={listArea}\n        listInverter={listInverter}\n        listType={listType}\n        handleRemove={handleRemove}\n        handleAddListDevice={handleAddListDevice}\n      />\n    ));\n\n  return (\n    <div className=\"page-register\">\n      <div className=\"sign-in\">\n        <div className=\"sign-desc mb-3\">\n          등록 요청시 담당자가 관련 내용을 확인 후 서버에 계정 등록을 도와드릴\n          예정입니다.\n          <br />\n          비밀번호의 경우 임시발급 비밀번호가 발급됩니다.\n        </div>\n        <div className=\"form-register\">\n          <div className=\"item\">\n            <div className=\"item-label\">\n              권한<span>*</span>\n            </div>\n            <div className=\"item-content\">\n              <div className=\"group-radio\">\n                <Radio\n                  onChange={() => handleChangeRegister('admin', 'admin')}\n                  isChecked={role === 'admin'}\n                  name=\"role\"\n                  labelRadio=\"최고 관리자\"\n                  id=\"admin\"\n                />\n                <Radio\n                  onChange={() => handleChangeRegister('company', 'company')}\n                  isChecked={role === 'company'}\n                  labelRadio=\"업체\"\n                  name=\"role\"\n                  id=\"company\"\n                />\n                <Radio\n                  onChange={() =>\n                    handleChangeRegister('monitoring', 'monitoring')\n                  }\n                  isChecked={role === 'monitoring'}\n                  name=\"role\"\n                  labelRadio=\"모니터링\"\n                  id=\"monitoring\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"item-label\">\n              이메일<span>*</span>\n            </div>\n            <div className=\"item-content\">\n              <Input\n                placeholder=\"이메일을 입력해주세요.\"\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => handleChangeRegister(e.target.value, 'email')}\n                onKeyPress={(e) => handleKeyDown(e)}\n                errorMsg={texTerror && texTerror?.email}\n              />\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"item-label\">\n              아이디<span>*</span>\n            </div>\n            <div className=\"item-content\">\n              <Input\n                placeholder=\"영문 + 숫자 4~13자리를 입력해주세요.\"\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={(e) =>\n                  handleChangeRegister(e.target.value, 'username')\n                }\n                onKeyPress={(e) => handleKeyDown(e)}\n                errorMsg={texTerror && texTerror?.username}\n              />\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"item-label\">\n              전화번호<span>*</span>\n            </div>\n            <div className=\"item-content\">\n              <Input\n                placeholder=\"숫자 11자리를 입력해주세요. \"\n                type=\"text\"\n                name=\"phone\"\n                onKeyPress={(e) => {\n                  isNumberKey(e);\n                  handleKeyDown(e);\n                }}\n                maxLength=\"13\"\n                onPaste={(e) => isOnPasteNumber(e)}\n                value={phone}\n                onChange={(e) => handleChangeRegister(e.target.value, 'phone')}\n                errorMsg={texTerror && texTerror?.phone}\n              />\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"item-label\">\n              담당자<span>*</span>\n            </div>\n            <div className=\"item-content\">\n              <Input\n                placeholder=\"담당자를 입력해주세요.\"\n                type=\"text\"\n                name=\"person\"\n                value={person}\n                onChange={(e) => handleChangeRegister(e.target.value, 'person')}\n                onKeyPress={(e) => handleKeyDown(e)}\n                errorMsg={texTerror && texTerror?.person}\n              />\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"item-label\">\n              관리기기<span>*</span>\n            </div>\n            <div className=\"item-content\">{renderListItemDevice}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo<Props>(SignIn);\n","// @flow\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ModalPopup from 'commons/components/Modal';\nimport Input from 'commons/components/Input';\nimport Button from 'commons/components/Button';\nimport Loading from 'commons/components/Loading';\nimport { API } from 'apis';\nimport ROUTERS from 'constants/routers';\nimport { listType } from 'constants/listKey';\nimport { Validator } from '../../../helpers/validator';\nimport SignIn from './signIn';\nimport * as SignInAction from '../redux';\n\nconst SignUp = () => {\n  const history = useHistory();\n  const {\n    type,\n    isProcessing,\n    errorMsg,\n    token,\n    listCompany,\n    listArea,\n    listInverter,\n  } = useSelector((state) => state?.account);\n\n  const dispatch = useDispatch();\n  const [dataLogin, setDataLogin] = useState({\n    username: '',\n    password: '',\n  });\n  const [dataRegister, setDataRegister] = useState({\n    username: '',\n    passwords: '',\n    email: '',\n    phone: '',\n    person: '',\n    role: 'admin',\n  });\n  const [error, setError] = useState({\n    username: '',\n    passwords: '',\n    email: '',\n    phone: '',\n    person: '',\n    role: '',\n  });\n\n  const [isModalRegisterSuccess, setIsModalRegisterSuccess] = useState(false);\n  const [isShowModalRegister, setIsShowModalRegister] = useState(false);\n\n  const [modalLogin, setModalLogin] = useState({\n    isShow: false,\n    content: '',\n  });\n\n  const [listItemDevice, setListItemDevice] = useState([\n    {\n      idx: Math.random(),\n      area: null,\n      company: null,\n      inverter: null,\n      type: null,\n    },\n  ]);\n\n  /** Show popup sign in success */\n  useEffect(() => {\n    switch (type) {\n      case SignInAction.signInRequestSuccess:\n        API.setHeader('Authorization', `Bearer ${token}`);\n        history.push(ROUTERS.ROOT);\n        break;\n      case SignInAction.signInRequestFailed:\n        setModalLogin({\n          ...modalLogin,\n          isShow: true,\n          content: errorMsg,\n        });\n        break;\n      case SignInAction.signUpRequestSuccess:\n        setIsModalRegisterSuccess(true);\n        break;\n      case SignInAction.signUpRequestFailed:\n        setModalLogin({\n          ...modalLogin,\n          isShow: true,\n          content: '등록 요청이 완료되지 않았습니다.',\n        });\n        break;\n      default:\n        break;\n    }\n    // eslint-disable-next-line\n  }, [type, token]);\n\n  // get list getListCompany\n\n  useEffect(() => {\n    if (isShowModalRegister) {\n      dispatch(SignInAction.getListCompany());\n      dispatch(SignInAction.getListArea());\n    }\n    // eslint-disable-next-line\n  }, [isShowModalRegister]);\n\n  const handleChange = (value, name) => {\n    switch (name) {\n      case 'username':\n        setDataLogin({\n          ...dataLogin,\n          username: value,\n        });\n        break;\n      case 'password':\n        setDataLogin({\n          ...dataLogin,\n          password: value,\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const { username, password } = dataLogin;\n  const { email, phone, person } = dataRegister;\n\n  const handleSubmit = () => {\n    if (!username && !password) {\n      setModalLogin({\n        ...modalLogin,\n        isShow: true,\n        content: '아이디와 비밀번호를 입력해주세요.',\n      });\n      return;\n    }\n    if (!username) {\n      setModalLogin({\n        ...modalLogin,\n        isShow: true,\n        content: '아이디를 입력 해주세요.',\n      });\n      return;\n    }\n    if (!password) {\n      setModalLogin({\n        ...modalLogin,\n        isShow: true,\n        content: '아이디를 입력 해주세요.',\n      });\n    }\n    dispatch(SignInAction.signInRequest(dataLogin));\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  const handleChangeRegister = (value, name) => {\n    switch (name) {\n      case 'username':\n        setDataRegister({\n          ...dataRegister,\n          username: value,\n        });\n        setError({\n          ...error,\n          username: '',\n        });\n        break;\n      case 'email':\n        setDataRegister({\n          ...dataRegister,\n          email: value,\n        });\n        setError({\n          ...error,\n          email: '',\n        });\n        break;\n      case 'phone':\n        setDataRegister({\n          ...dataRegister,\n          phone: value,\n        });\n        setError({\n          ...error,\n          phone: '',\n        });\n        break;\n      case 'person':\n        setDataRegister({\n          ...dataRegister,\n          person: value,\n        });\n        setError({\n          ...error,\n          person: '',\n        });\n        break;\n      case 'admin':\n        setDataRegister({\n          ...dataRegister,\n          role: 'admin',\n        });\n\n        break;\n      case 'company':\n        setDataRegister({\n          ...dataRegister,\n          role: 'company',\n        });\n\n        break;\n      case 'monitoring':\n        setDataRegister({\n          ...dataRegister,\n          role: 'monitoring',\n        });\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleChangeOptionCompany = (option, name, idx) => {\n    const itemChange = listItemDevice.find((item) => item.idx === idx);\n    const listItemChange = listItemDevice.map((item) => {\n      return {\n        ...item,\n        area: null,\n        company: null,\n        inverter: null,\n        type: (name === 'type' ? option : item.type) || null,\n      };\n    });\n    const listItemCompany = listItemDevice.map((item) => {\n      return item.idx === itemChange?.idx\n        ? {\n            ...item,\n            area: null,\n            company: (name === 'company' ? option : item.company) || null,\n            inverter: null,\n          }\n        : item;\n    });\n\n    const listItemArea = listItemDevice.map((item) => {\n      return item.idx === itemChange?.idx\n        ? {\n            ...item,\n            area: (name === 'area' ? option : item.area) || null,\n            inverter: null,\n          }\n        : item;\n    });\n\n    const listItemChange2 = listItemDevice.map((item) => {\n      return item.idx === itemChange?.idx\n        ? {\n            ...item,\n            area: (name === 'area' ? option : item.area) || null,\n            company: (name === 'company' ? option : item.company) || null,\n            inverter: (name === 'inverter' ? option : item.inverter) || null,\n            type: (name === 'type' ? option : item.type) || null,\n          }\n        : item;\n    });\n    switch (name) {\n      case 'type':\n        setListItemDevice(listItemChange);\n        dispatch(\n          SignInAction.getListInverter({\n            per_page: 0,\n            type: option?.value,\n          })\n        );\n        break;\n      case 'company':\n        setListItemDevice(listItemCompany);\n        dispatch(\n          SignInAction.getListInverter({\n            per_page: 0,\n            type: itemChange?.type?.value,\n            com_id: option?.value,\n          })\n        );\n        break;\n      case 'area':\n        setListItemDevice(listItemArea);\n        dispatch(\n          SignInAction.getListInverter({\n            per_page: 0,\n            type: itemChange?.type?.value,\n            com_id: itemChange?.company?.value,\n            pos_id: option?.value,\n          })\n        );\n        break;\n      default:\n        setListItemDevice(listItemChange2);\n        break;\n    }\n  };\n\n  const handleRegisterSubmit = () => {\n    let validation = {};\n    const rules = {\n      username: ['required'],\n      email: ['required', 'email'],\n      phone: ['required', 'phoneNumber'],\n      person: ['required'],\n    };\n\n    const dataValidate = {\n      username: dataRegister.username,\n      email,\n      phone,\n      person,\n    };\n    validation = Validator(dataValidate, rules);\n    if (Object.keys(validation).length > 0) {\n      setError(validation);\n      return;\n    }\n\n    const checkValidator = listItemDevice.filter(\n      (item) =>\n        item.type === null || item.company === null || item.inverter === null\n    );\n\n    if (checkValidator && checkValidator.length > 0) {\n      setModalLogin({\n        ...modalLogin,\n        isShow: true,\n        content: `관리기기 정보 입력을 완료해주세요.`,\n      });\n      return;\n    }\n    const listItemDevices = listItemDevice.map((item) => item.area?.value);\n    const dataSubmit = {\n      role: dataRegister.role,\n      username: dataRegister.username || '',\n      email,\n      name: person || '',\n      phone,\n      inverter_ids: listItemDevices,\n    };\n    // submit data\n    dispatch(SignInAction.signUpRequest(dataSubmit));\n  };\n\n  const handleKeyDownRegister = (e) => {\n    if (e.key === 'Enter') {\n      handleRegisterSubmit();\n    }\n  };\n\n  const handleAddListDevice = () => {\n    setListItemDevice([\n      ...listItemDevice,\n      {\n        idx: Math.random(),\n        company: null,\n        area: null,\n        type:\n          (listItemDevice && listItemDevice[0] && listItemDevice[0].type) ||\n          null,\n        inverter: null,\n      },\n    ]);\n  };\n\n  //  Remove list device\n  const handleRemove = (itemRemove) => {\n    const removedItems = listItemDevice.filter(\n      (item) => itemRemove.idx !== item.idx\n    );\n    setListItemDevice(removedItems);\n  };\n\n  return (\n    <div className=\"page-login\">\n      {isProcessing && <Loading />}\n\n      <div className=\"sign-up\">\n        <div className=\"login-name\">LOGIN</div>\n        <div className=\"from-login\">\n          <div className=\"login-title\">실증단지</div>\n          <div className=\"input-wrapper\">\n            <Input\n              placeholder=\"아이디를 입력하세요.\"\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={(e) => handleChange(e.target.value, 'username')}\n              onKeyPress={handleKeyDown}\n            />\n\n            <Input\n              placeholder=\"비밀번호를 입력하세요.\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => handleChange(e.target.value, 'password')}\n              onKeyPress={handleKeyDown}\n            />\n          </div>\n          <div className=\"btn-wrapper\">\n            <Button onClick={() => handleSubmit()} customClass=\"bg-primary\">\n              로그인\n            </Button>\n          </div>\n\n          <div\n            className=\"register-wrapper\"\n            onClick={() => setIsShowModalRegister(true)}\n            onKeyPress={() => {}}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <div className=\"name\">계정 등록 요청</div>\n          </div>\n        </div>\n      </div>\n\n      <ModalPopup\n        isOpen={modalLogin.isShow}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() =>\n          setModalLogin({\n            ...modalLogin,\n            isShow: false,\n            content: '',\n          })\n        }\n        handleClose={() =>\n          setModalLogin({\n            ...modalLogin,\n            isShow: false,\n            content: '',\n          })\n        }\n        textBtnRight=\"확인\"\n      >\n        {modalLogin.content}\n      </ModalPopup>\n      <ModalPopup\n        isOpen={isShowModalRegister}\n        isShowHeader\n        size=\"lg\"\n        title=\"실증단지 계정 등록 양식\"\n        isShowIconClose\n        handleCloseIcon={() => setIsShowModalRegister(false)}\n        isShowFooter\n        handleClose={() => handleRegisterSubmit()}\n        textBtnRight=\"등록요청\"\n      >\n        <SignIn\n          dataRegister={dataRegister}\n          handleKeyDown={handleKeyDownRegister}\n          handleChangeRegister={handleChangeRegister}\n          handleChangeOptionCompany={handleChangeOptionCompany}\n          listCompany={listCompany}\n          texTerror={error}\n          listItemDevice={listItemDevice}\n          handleAddListDevice={handleAddListDevice}\n          handleRemove={handleRemove}\n          listInverter={listInverter}\n          listArea={listArea}\n          listType={listType}\n        />\n      </ModalPopup>\n      {/* Modal register success */}\n      <ModalPopup\n        isOpen={isModalRegisterSuccess}\n        isShowHeader\n        title=\"알림\"\n        isShowIconClose\n        isShowFooter\n        handleCloseIcon={() => {\n          setIsModalRegisterSuccess(false);\n          setIsShowModalRegister(false);\n        }}\n        handleClose={() => {\n          setIsModalRegisterSuccess(false);\n          setIsShowModalRegister(false);\n        }}\n        textBtnRight=\"확인\"\n      >\n        등록 요청이 완료되었습니다.\n      </ModalPopup>\n    </div>\n  );\n};\n\nexport default SignUp;\n"],"sourceRoot":""}